%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Arabic
%%Title: north america-me.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: dell
%%CreationDate: 1/18/2017
%%BoundingBox: 0 0 1157 1157
%%HiResBoundingBox: 0 0 1156.6348 1156.6343
%%CropBox: 0 0 1156.6348 1156.6343
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x87 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 35805 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A9A8FFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA859527DA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF7E7D7D7D59FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8FF7D7D527D527DA8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D52FD047DFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8AFA8FD04527D527DA8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%527D537D597D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A87DA8A8525253527D527DA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA87D7EFF527D59FD047DFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A9A8FF
%A8A8A8FFA8A8A8FFA8A8A8AFA8FFA87D59FF52595259527D7D7D84FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FD047D7EA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D7DA8A8A884A8A8A8
%7D7D59A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFFD06A82E7D525952FD04A8AFA8A8A8AFA8A8A8AFA8AF7D5352FD09A852
%7D7EAFA8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF52A8A8525359527D527DFFFFA8FFA8FFA8FFA8FFA8FFA8A8527D5259
%5259527D52597DFF52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A9A87D527DA87D527D527D527DA8FFA8A8A8FFA8A8A8
%FFA8FFA8A95259527D525352595259537D84FFA8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D53A85259527D525952A8
%A8FFA8FFA8FFA8FFA8FF84A87DA8527D7D847D847D7D59A87DA87EA8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFD09A8FF7D59527D527D5259527D
%527DA8AFA8A8A8AFA8A8A87D5259A87D59FFA8FFA8FF527DA8FF7D5352FD
%06A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7DFF7E527D537D597D597D
%597D527D597D527DFFFFA8FFA8FFA87D597D537DA8AF52FF7D7D527D527D
%597D597D537D59FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A87D527D5259
%5259527D5259527D5253527D5252527DA8FFA8FFA8A82E595259527D5953
%A87D52528484527D527D525952FD047DFFA8AFA8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FF
%A8FFFD047D527D5359527D5359527D5259527D527D52A8A8A884FFA87D7D
%7D527D525952FF7D7D52A87D7D597D52595359527D527DFD05A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFD04A828A8A8
%AFA8A8A8AFA8AFA8FF7D53527D527D527D52595259525952595259525952
%527DFFA8FF7D595259527DA8FFA8535252527D5259527D527D5259FD0552
%AFA8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FF597D597DA8FFA8FFA8FF597D527D597D597D597D597D537D537D
%537D527D7D7D597D7D7DA8A8527D527D597D84FF527D7DFFFF8459FFA8A8
%527D537D537D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A87DA8527D7DFFA8AFA8A85352527D525952
%7D52595259525952595252527D5359527D527D7DA85252527D5284A85252
%7D7DA859597DFF7D527D7D5259525353FFA8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D537DA8AFA8A9
%A87D527D537D597D597D597D527D597D527D537D597D7D7D537D527EA87D
%597D537DA8FF527D527D597D5953A8A87DFF7D7D597D527DA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8FF7E522EFD045253525252595259525952525259FD055259527D52522E
%595253AF7D5253A8FFA8FD04527D525952A8A8FFA87D2E59525252FFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8AFA87E527DA8845259527D7D7D527D597D527D53
%7D597D59A8A8FF7D7D597D597D597D7D7D527D537D7D7D597DA8FFA87D52
%7D597D527D59AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8AFA8FFA8FF535252AFFD047D52595253
%527D525252595259527D7DA87D7D525952595259525352525259527D527D
%52A8A8A9527D5959FD0452A8AFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAF7D527DA8FF
%A8FFFFA8527D537D527D527D527D597D597D5259537D597D527D597D527D
%527D527D7D7D527DA8FFA87DA8A8527D597D52AFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A85259525952595253527D537D527D525952
%7D5253527D525352595253527D52522E597DFFA8FFA852A8FFA8AF527DA8
%FFA8A9A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D597D597D597D52FD
%077D597D7D7D537D7D7D537D597D527D7DA8A8A85984A8847D7D53A87DA8
%AF7D7D847DAFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A87D7D597D59
%7D7D7D597D7D7D527D537D527D597D527D597D597D7D7D597DA8FFA87D7D
%AF597D537D527D7DA87D7D59597DAFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FF7D59537D527D527D527D5959527D5959527D5259527D527D527D
%527DA8FFA8FFA8FFA8FF7D59537D527D527D527D535259FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA87D527D52595259527D527D527D527D527D527D
%527D52595259527DA8A8A8AFA8A8A8AFA87D527D525952595259527D527D
%597D527D52FD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5959537D527D527D537D5959
%527D5359527D527D527D527D527D7DFFA8FFA8FFA8FFA8FF7D59527D527D
%527D527D5359537D5959527D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA87D527D5259
%527D527D537D527D527D527D527D527D527D5259527EA8A8A8FFA8A8A8FF
%A87D527D5259527D5259527D527D537D527D525359FFA8AFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8527D527D527D597D597D597D537D597D527D597D527D527D7D
%FFA8FFA8FFA8FFA8FFA8FFA87D527D527D527D527D7D7D597D597D527D59
%597EFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8FF845252595252527D5259527D525952595253
%525952525253525959FFA8AFA8AFA8A8A8AFA8FF5253525252595259527D
%527D5259525252595259597DA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D527D527D597D53
%7D5959527D537D527D537D527D527D527DFD05A8FFA8FFA8FFA87D527D52
%7D527D527D597D537D597D527D537D527D52AFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A87D527D527D
%5259527D597D527D527D527D5259527D525952595259527D52532EA8A8A9
%A8FF8452527D5259527D527D527D597D527DFF7D527D52595259A8A9A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8527D527D527D597D7D7D537D597D527D537D527D527D527D52
%7D597D597D597D597D527D597D527D527D527D597D597D7D5952FF7D5352
%AFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A9A8A8525252535259527D5259527D5259525952
%59525352525253527D525952595259525252595252525352525259525952
%5952A8A8A87DA8A8FFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D537D597D7D7D
%597D7D7D597D597D597D537D527D537D7D7D597D597D597D527D597D527D
%537D527D597D597D59A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FF7DFD0452
%535259527D5259527D525952595259525952525253527D52595259527D52
%5252595252525352525259525952597DFFA87D2E52A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA87D527D527D7D7D597D597D597D597D527D597D527D537D527D
%7D7D537D597D537D537D537D537D527D537D537D7D7D597D7D7D527DA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8AFFD05527D5259527D525952595252525952
%5252535252527D5259527D5259525952595253525252535259527D525952
%59527D7DFFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D537D527D7D7D597D597D
%597D597D527D597D527D527D527D7D7D597D597D597D537D537D537D527D
%537D537D7D7D597D7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A88452
%59527D597D527D527D527D5259527D525952595259527D537D527D527D52
%7D527D527D5259527D527D527D59537DFF52A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA87D527D527D527D5959527D5359527D5259527D527D527D527D
%597D5359527D537D527D537D527D527D527D5359527DFD05A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AF525252535259527D5259527D5259525952595253
%52525253527D525952595259525252595252525352525259525952AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D597D597D7D7D597D7D
%7D597D597D597D597D527D59FD057D597D7D7D537D597D527D597D527D59
%7D7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF7D7D597D597D7D
%7D537D527D537D537D597D537D597D597D7D7D597D537D527D597D527D59
%7D597D597D537D53FD047DFFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D
%7D537D527D7D7D597D7D7D597D597D527D597D527D537D527D7D7D597D7D
%7D597D597D597D597D527D597D59FD047DA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8FF7D5252595253527D537D527D527D527D5259527D5253525952
%53527D5259527D5259525952595259525352595259527D52A8A8A9A8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8527D537D527D7D7D597D597D597D597D
%527D597D527D527D527D7D7D537D597D537D537D537D537D527D537D537D
%7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF845252595252527D53
%7D527D5259527D5253527D525352595252527D5259527D52595259525952
%59525252595259527DA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%527D527D527D527D5959527D5359527D5259527D527D527D527D597D5359
%527D537D527D537D527D527D527D527D7DFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8AF7D5952595259527D527D527D527D52595259525952595253
%5259527D527D527D527D5259527D5259525952595253A8FFA8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D527D527D597D7D7D597D597D59
%7D537D537D537D527D537D7D7D597D597D597D527D597D527D527D527D52
%A8A9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8AF7D5352525259525952
%7D5259527D525952595259525952525259527D527D5259527D5253527D52
%525259525252595984A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%527D537D527D7D7D597D597D597D597D527D597D527D537D527D7D7D537D
%597D537D537D537D537D527D537D537D7DFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8FF7D5252535252527D525952595259525952525259FD0752
%7D5253525952595253525352535252525352532E7DA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA87D537D527D7D7D597D7D7D597D597D527D
%597D527D537D527D7D7D597D7D7D597D597D597D537D527D537D597D7DFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8AF52535252527D535952
%7D5259527D5253527D525252595252527D5259527D525952595259525952
%525259525253FD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D52
%7D527D597D7D7D537D597D527D537D527D527D527D527D597D597D537D59
%7D527D597D527D527D527D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA87D5259527D527D527D527D52595259525952595253525952
%7D527D527D527D5259527D52595259525252FFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8527D537D5959527D597D527D527D
%527D527D527D527D597D5359527D537D527D537D527D527D7DAFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA852527D527D5259
%527D525952595259525952525259527D527D5259527D5253527D52535259
%527DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%A8527D597D597D597D537D597D527D597D527D527D527D7D7D527D597D52
%7D537D527D527D527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA852527D527D527D527D527D5259527D525352595253
%527D5259527D52595259525352595252525953FFA8A9A8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AF527D7DA8FD047D597D7D7D537D
%7D7D537D597D527D7D7D597D7D7D597D537D84A87D7D7E7D537D7DFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA87D52A8A87D52
%7D537D527D597D527D597D597D597D597D7D7D527D537D537D7DFFA8A87D
%FF7D7D59597EFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFF7D7DFF5359597D7D7D597D597D537D597D527D537D7D7D59595259
%5253A8FFA8FFA8FFA87D527D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8FF527D7DA85953527D525952595259525352525253
%5259527D84A87DA87DA8A8AFA8A8A8AFA87D5259527DA8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA97D527DFF84527D597D527D52
%7D527D527D527D527D7D7E7DFFA8FFA8FFA8FFA8FFA8FFA8FFA87D535359
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF597D52FF7D
%59527D527D527D527D527D5259525953FFA8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8FFA87D527DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FF847D52A8A859537D597D527D597D527D527D527DA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFFD04A87D527DFF2E59525952525259525252535252
%52AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF52A8A87D597D597D52
%7D597D527D537D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA859
%2E7DFF592E7D5252525952525253525252FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA87D52FFA8A8527D537D537D537D527D527DA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8FF7D7DA8FF847D525352595253FD0552
%A8A8AFA8A8A8AFA8A8A8AF7D7E7DAFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D537D
%537D537D527D527DA8FFA8FFA8FFA8FFA8FFA87D527DA9FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8527D527D527D5259525953FFA8AFA8A8A8FFA87D527D525353FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA87D527D537D527D527D527D7DA8A8FFA8FFA8
%FF7D59527D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFD04A85252525952525253525252
%597DAFA8AFA8A8A87D5259525252AFA8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D
%597D527D527D527D59A8A8FFA8FFA8FF7D7D537D527DA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA87D52595259527D5259527D537DA8FF7D59527D525352FD04
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D527D527D527D537D527E7D7D52
%59527DA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8FFA8FF537D5959527D59
%7D527D5259527D525959FFA8A9A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFAFFF527D52FD057D537D7D7D527D52FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFFD05A87D527DA8A87D7D52FD06A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D7DFFA9A85959A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8FFA8FFA8A9A8
%FF52FD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%FFA8AFA8AFA8A8A8AFA8A9A8A9A8A8A8FFA8A8A8AFA8A8A8AFA8A8A8FFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8A8A8A97EFFFFFFA8FFA8FF7DA8FFFFA8FF7DFFA8FFA9FF
%A8FFFFFFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8FF2E527D7DA87DA8A87D7D535952A8A8FF
%7D277DA87DA87DA8A87D7EA87D7DA8847DA87DA8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D5259FD047D5259
%597D595227A8FF7D287D7D52287D527D52595253597D52A87D5252FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8FF52
%A8275252A852527D7D537D7E7D7DA82E7D2E59FD047D2E527D597D7D277D
%A8522852A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA87EA8A87DA852A87DA8A87D7DA87DA8A884FFA87DA87DA87D
%A852A87DA87DA853FD047DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8AFA8FFA8AFA8FFA8
%A8A8FFA8AFA8FFA8A9A8FFA8AFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFD04A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF
%A8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8
%AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8
%A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2017-01-18T11:52:48+03:30</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A75kmLsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdiqE1LU7TT7cy3EqIxBEMbuqGRwpYInIirGmKHnF15&#xA;w1u+vobq1uLiytrmXSytmrWcioszSiVeRep58Ry/4XvhY29SwM3Yq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVOS4gieNJJFR5TxiVmALHwUHqcUPLPOl&#xA;3qt15ou7OaaeWysr6xNnAdPtJ44vUtJGl4SyOHPJt2YiqnYbHCGJSWwtphHp3wPtJo1f9xVivR5q&#xA;9JPh+j7H7NanCh7jkWx2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViU&#xA;P5j2EscLjSNWUTKjgNZsCoecwUYV2IK8j/k74aY2n2iaxFq+nrexW89sjM6eldRmKUFGKklDXY0q&#xA;PbAkI/FLsVdirG7vzZ617Po1naXsGoSPLaW1/Jal7VJli5rKzchyjqR8ztii3ax5c1bUYdGlN1bf&#xA;pLTP3kl1Lblw05i4GSJeY9P4/ipvttitJDqHkDVJbm51W+uLG5uWa1ubh1sSZJGtLZ4npSTdmLfB&#xA;4DbfDaKQ3kXQNLvZgl7p1UgtLCeES2LWYWWJpShBMj/Elfsfs+9cSgB6XgZuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgfmO21fRfNB8wWQtVTU5bHT3cx3M05j5t6gZUb01&#xA;H8rU274WJYJdaf5Ya5tToWlehpQt7UW0V1DqJmWmouWDESU/vOTCu/j8OFi7RLq50O6W/wBLtbe3&#xA;u0054lk+q6i/wSaueS8XdhQ1r05V3+xir2jRtZtdXtXubZJUjSV4SJkMbcozxJAbt4HIs0filDan&#xA;qEOnafcX86u0NtG0sixKXcqoqeKjcn2xQ8w17QtB1xNS1rR9PVGtY7y41c36XqvK9zYFVMCRuK/C&#xA;aOAP9X4sLEhS038sb29sbS+ittMWK4t7WSNXOoI4Uaf9XoymSoILUof2evxb42tKcvkW90LUdLma&#xA;20717i80uO1eEahJwls7V4uT1kKqqsfgLbcftVOG1pltnFqGgapJrfmBYJrrVVstPeXTo7h2M6lx&#xA;V0YlViHLYgfPAlkuhaza61pUGp2iSx29xy4JOhikHByh5I243XAkI/FLsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiqAvNb0+01XT9LnZheap631RQjMp+roHk5MBxX4TtXrihH4pQmr2st3pN7&#xA;aQhDLcQSxRiQsqcnQqORT4wtTvx38MUPONe07zBpuj+XdP1UaYtna6jpcViIm1F2EixSierJVj8V&#xA;PS5/DSvPemFiWIaR6XLS6fUf7zTacf0x/wAtMv2ef/C8v9ltTChS0z0fqenU+of7z2/2f0zT/jqS&#xA;dOW9PDlvXr8FMVa/c+j/AMeH+8H/AGuf+rz+r/huX/FeKpha63daHc3WqWDacl3b2916bSpq8ifH&#xA;qKI3JaGoox6b8unwYq9Ql/MfytEsxeWekBuVkpbzHe0KiWnw70Linj2wUytBedvLWpeZW0u70xLN&#xA;4Y7W+VjeyXcLf6ZbhIuItyuxP2+W4H2d8QpDz/ncaLrRkX9HLfaZLcsK/paRBLBpoPurLyXfxXp8&#xA;eFiy3yY91rUXmqQ/U2vtTtbNn9L69HEZZ7Kvx+tQqnJtvS+IL9r4sBZBjtpp2jabqWp6frwhW/tf&#xA;0XFZiybU3QXa2EgX1WeoMdK04dvt/FhQgrD0vT03/eL+80Xp+lv9+TUpy/4Xl/s+2KEv0z0fqenU&#xA;+of7z2/2f0zT/jqSdOW9PDlvXr8FMVZ3on5o3n1xW1yaz+ofU3nf6jbX3ret9eNrHT1V4+nxoGH2&#xA;uW/2cFJ4mW6T520DVtRGn2ckrXJWVwHhkReMEnpP8TKB9r78FMrT7FLsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdiqG1PT4dR0+4sJ2dYbmNopGiYo4VhQ8WG4Pvihh2oeR9Q0/ULG98ukzy25nlkW/u&#xA;p+HqC29KAcV2ZSyjnX5jfDaKR4/Mby3ZUsdavo4NZtgkWpQQxXDxpcGD13VG4HkvFWINenvjS2xT&#xA;zPrnlO/u7O/0rU2e5u9U0d7pZmvYowksMxtvSVI/tSJyJU/Dt8dDTFBLFNI1K0ZtLpqEDcpNNpSf&#xA;UzXlcygU5R78ug5df2tqYUKWmanZmz04jUbdg1vbkEXGqGtdUkWo5R1NT8Pxb12Pw4q79J2fo1/S&#xA;Nv8A7wcv96NU6fpnjX+76V+GvWu32N8Vdqep2Ys9RJ1G3ULb3BJNxqgpTVI1qeMdRQ/D8O9dh8OK&#xA;phqGo2oj1Gt/AOMmtVrPqIpwkhrXjHtxrvx6fsV3xVq38xRabq8V9BfWrTWtxq0kaSy6k6ForCNq&#xA;Mnp0IXqw7D7NWritp1qUdjq9jd63pF4sz2lvdXPmMyT3sUUEs+n1X0ECBmTvsCR1HxYEqfkeyu9U&#xA;1e2uLGeG4h09tNmvONzfVWN7AcSFmVFfl1A+lvixKh3mbVYbTz/qLC8gSWDUdLYQyS34o31KVlVk&#xA;jQxfFStFPEj7W9MVPNUvfPU+t2+mJdXVgq/WtKnU25v4yXuHlBFfTFVbh8IbbryptjS2yGC51fzr&#xA;5B0y/tjay3c90s0jW8lzbwFLe5dG4FlSavFOjChPtinmGJedrLTdA1qTTob7hGmlwzAXVxfmX97q&#xA;qksTCjpx5HiN+XY/DhCCj/y8vbeXzlHGl3FM31e/PppLeu3w3dCeM6LHt0O9f5dsBUPWsDN2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksd86aXq2oQaWum8y9vqMFxc8Lg237hA/OpAPMbj&#xA;4O+IQVDRPLF5J5T0nTtWnura9sZVuJTDdNI7PHIzKkkxFZEYN8Q+jCgBLNT/AC+urSxtxo9/qN3c&#xA;xNDGy3N+6gwrcGd3Lcfib4uPuu2NrTzr9Lt6Vf0pJ/vDyr+krn/q8cOX91/seX+x6b4WLtS1dltN&#xA;QP6UkXjBOa/pK5WlNTjWtRF8NPs1HT7PTfFUwv8AVGEeo/7knXjJrP8A0sLgU4PD4R/Dwr2+z2rX&#xA;FUz1L8xryXTJtIMlpHE8d/bG4S5nW4C2dmkysJBHs9W+M9huN8FJtIZNWasn+5OT+7uv+ljcdtLD&#xA;f767fa9vtddsKHR6s1Y/9ycn93a/9LG476WW/wB9d/te/wBrrtirdrqzGdB+k5D+80jb9I3B+3YS&#xA;N/vr9v7X+V1NDiqKsNUYx6d/uSduUmjf9LC4NebzeMfxc6d/td6UxVnP5VeYdMu/Len6YL761qaw&#xA;TXUiNLLcMYTdSRhzNIicviHH26YCyiWP6x5dv9G8oNqep313bairJaNC2oymERyXwlV+aoW9Qg8e&#xA;n2fhxRS298lee5Le7WMXHOSKVYqarIvxNepKtDx+H90Dv2Hw42tF6bpWs6Zq0U8unzi4jtp5LWdg&#xA;GHGaI0dPiA6VwMkbil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvIvNkL6Dqj6&#xA;fHe390qadFN60urWdq5MmpD/AHXJDyFK09T7JX4Ptb4WBSbUdYnW1vz6t38ME5FNe09DtqMa7MYC&#xA;E+Z6D4PtGuFCPvtVmEd/+9uvhfVgKa1Yp9h4qUJhPClfhB/u/wBqtRilC3OrziZx6t39vVRtrtgv&#xA;2LGNhsYe1fhH+6z8bVBpihz6vPV/3t39i5P/AB3bAdNMD/75+4/sn4z8O2KuTV56p+9u/sWx/wCO&#xA;7YHrphf/AHz95/aPxj4dsVX2Op3c13FDG948kkukoiDXLBiTLZOaBRDU1PUf7sPxLQCmKvSfJ/l+&#xA;4tLCC61E3YvZbeKOawvJ4rsQvCWowkjjjVnPL4mGAsgE0g0WGHWX1OO4mUPALcWIZRbKA/P1FQLU&#xA;OehPL6MCaebebzdaLqb6aNS1G8jXT4p/Un1i0tmLSakB/dSwkggHiJOhX4Ptb4QxKGtvO+o6TcXF&#xA;/wDvr76tDcMLW712yMLE3ywjkPTXiVD/AAkn4fsHc4aW0LqGv30B1IRXN7GFkvyAmvWEW6TxgUrD&#xA;8FK7cvsdDUnFFvQtD8+aZPBd/pWW2017S6urWHleRXBmiskRpJmKU4EB6uh3Xv1wUyBTW282+Wbq&#xA;5itbfVLaW5mbhFEkilmbgJOIAO54Hl8sCbTbFLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVef8A5naJSObX/rND6FtY/Vm+qxL/AL2LL6nrXIpXtxr8t8IYkPPtSkP1TUP3kf8AcT/8fWlD&#xA;/pZx/wAwoP8AZbdj8VMLFML+Q+nqPxp/eaz/AMfOmDo8P8w2/wBl0/b7YqhbqQ+u/wAcf95q/wDx&#xA;9aWOlhH4j/a6v8NMVakkNZP3kf8Ad3X/AB9aX/1ax7f59T8GKujkNY/3kf8Ad2v/AB9aX/1az7f5&#xA;9R8GKonQ50j1iykkliWNLrRGdjdaYQFFk5JPD4vu3PVPhxUPbbS8tLy2jurOeO5tpRyinhZXjYeK&#xA;spII+WRZq2KWLeZfIw1zU3vjftbcrWO09JYYZAPTuRcc+Uilt6cadO/XDbEh5PqUh+qah+8j/uJ/&#xA;+PrSh/0s4/5hQf7LbsfiphYqurSHlqf7yP8AvNR/4+tLH/HxF/MNv9l0/a3piqLuHPG++NP96/MH&#xA;/Hzpna3g8Rt7g7r/ALs2piqHW6mhm9aGdYpoluXjkS70tWVl0sEMpG4IO9e3U/DirN9C/MhlTTrC&#xA;8hhYBLSK51GXUbNmPqWgneZ1VtztvTr9ofDgpkCzaw1nR9RaRNPvre8aFY3lW3lSUosy84mYITQO&#xA;u616jpgSjMUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVhf5iaJrd7ay3FpPLc2pjghGjJbW&#xA;9wDKtyshuf3+1Qnw07Dcb4QxIeZalGfqmofu4/7if/j10o/9LOP+Y0P+y27n4qYWKYX8Z9PUfgT+&#xA;81n/AI9tMPV4f5jv/suv7fbFULdRn13+CP8AvNX/AOPXSz1sI/E/7fR/hpirUkZrJ+7j/u7r/j10&#xA;v/q1j3/z6H4MVdHGax/u4/7u1/49dL/6tZ9/8+g+DFW7WM+unwR/3mkf8euljpYSeB/2uifDXFU4&#xA;0jWtctbPTba2vZoLdW0tBDElhGgWZ5fVUKjBQHoOXH/Y98CU28tfmPfW+i2MGoW82o3boJJb2Sa0&#xA;jZvVvHgUFY34/AoHTqPfGlBdrf5j319prQ2FvNptyY0uRdJNaSMFW+Fs0fF34/EBWvht1xpSWF6l&#xA;Gfqmofu4/wC4n/49dKP/AEs4/wCY0P8Astu5+KmFCrq0Z5an+7j/ALzUf+PXSz/x8RfzHf8A2XX9&#xA;remKou4Q8b74E/3r8wf8e2md7eDxO/uTu3+7NqYqyHQfLbT+XNfmuNKWS6a1LaTI9lZcyZLH0yYO&#xA;AKPy+z8Wx+z9nAkBQ8v+QtS1Ey/W0/RnoR2fAz6bYn1D9Q9FwvEfsMd/D7I+HG1AZn5R8nN5envJ&#xA;Tdx3P1uGzhpHaQWvH6pEYqkwgF+XUA7J0XbElkAyTAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KoDW7PVbvT2g0vUP0XeFkK3fopcUVWBZfTchfiXavbFDw3UrWc2moUSTeCen+4fT2/wClnGeh&#xA;ko3yPX7f2hkmCYX9tMY9R+B95NZp/uKsW6vDTrJ8X0/b/apQYqhbq1n9d/gk/vNX/wClRYHrYRgb&#xA;mT/rv7LUAxV0lrPV/gk/u7r/AKVFgeulgf78/wBv7B+HfFXR2s9U+CT+7tf+lRYDppZH+/P9r7A+&#xA;HfFXWtrP66fBJ/eaR/0qLAdLCQHcSf8AXH2VqDiqKsLaYR6d8D7SaNX/AHFWK9Hmr0k+H6Psfs1q&#xA;cVS/TbWcWmn1STaCCv8AuH09f+lnIegkovyHT7f2jirvqs/pfYk/3hp/xx9P/wCrxXp6nh+z0/b+&#xA;1tirtStZzaahRJN4J6f7h9Pb/pZxnoZKN8j1+39oYqratazltTokm8mo0/3EWD9biL+aT4/9l9rq&#xA;dxiqKuLabjffA+935gP/AByrE/at4KdZPi9mO8nR6ADFWWw+ebpNCTSLLTr6PUEtHtra8jt4DSaK&#xA;yEqSJbh+B+KgWPpy26YKZWybylb+YlsVu9Z1KS8a7gtXjtprWK1kt3EI9YOIy1WeT4iP2TsNsBSE&#xA;+xS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXhvmyDTbkXr6VoN9Z2/1ORHgbSkuGaU&#xA;alGXYcphy5n4gvh8XamSDWW7+xkMeo/6BdGsms9NJRq8nh6fvfi5fs/789qYqhbqwkM7/wC467P7&#xA;zV9xo0Z+1YRjr637XRf5z8O1K4q6Swkq/wDuOu/7u6/6U0Z66WF/393+yPE/B74q6Owkqn+467/u&#xA;7X/pTRjppZX/AH92+yfA/B74q61sJBOn+467H7zSNzo0Y+zYSDr637PRv5D8O9a4qirCxkEenf6B&#xA;dCkmjddJRacXm6/vfh4/tf77964ql+m6fKLTTx+jrtaQQCh0WNCKanI1CPWPGn2qdh8femKu/R8v&#xA;pf8AHOu/94aU/Qsf/V45Up63X9rj4fH7Yq7UtPlNpqA/R121YJxQaLG5NdTjagHrDlX7VO4+PtTF&#xA;VbVrCQtqf+467blJqPTRo3ryuIjt++HPl1H8/XamKprZaDNqWoS2CW0lu13f69Gs9xpaLCvq28Ch&#xA;3b1T8Ddnp+86bUxTTN7f8vrS11DQ720W2hm09jJqDiAcriQwLCGjNf3X2e3bbBaaZfgZOxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAa3rNro+ntfXSSvCrIhWBDK9ZGCj4V3pU74oeJ6jZ&#xA;6abS/BsYCDBPyBsL9qj9JRk1AmBPxb0Hf4vs7ZJgj76108x6hWzgNX1flWyvTXk8PKtJd+Xen2v2&#xA;aUOKULdWmneu9bKAnnq3/HhfH7VhGG6S/tDY/wA3RaHfFDpLTTqv/oUH2Ln/AI8L7vpYB/3b3Xb3&#xA;Hwj4t8VdHaadVP8AQoPsW3/HhfdtLIH+7ey7ew+E/FvirrW00710pZQA89J/48L4fZsJAvWX9kbD&#xA;+Xo1TviqKsbXTxHp9LOAUfSONLK9FOLzcaVl249q/Z/arUYpQGnWemi0sALGAAQQcQLC/Wg/SUhF&#xA;AZiR8W9D3+L7O2KHfU9N9L/eGD/eGn+8F/0/S9af33Tl8VOtfi+ztirtRs9NNpfg2MBBgn5A2F+1&#xA;R+koyagTAn4t6Dv8X2dsVVdVtNOLanysoGq+ocq2F81a3ERNeMo5VPWnXqKDFU80O1f9Or+jIba3&#xA;1E6jrZtZ5LO7VVlaCAF2LScfi25N0f8AZpQ4Eh6rai5W1hF0yvchFE7xgqhkoORUGpAr0wMlXFLs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYl+aPH/AAhNy9Knr239/wDWOH98v/LL+9r4&#xA;U28dsIYyeTan6P1PUa/UP957j7X6Zp/x1I+vHenjx3r0+CuFimF/6Xp6l/vF/ea11/S3+/Ia14/8&#xA;Nx/2HfFUJdel67/7w/3msdf0x/1b469Nv9b2+x8VcVdJ6VZP94f7u6/6vH/VqH+Z/wAnp8eKuj9K&#xA;sf8AvD/d2v8A1eP+rUf8x/k9fjxV1r6Xrp/vD/eaP0/TH/Vvkp12/wBX2+38VMVRdh6Xp6b/ALxf&#xA;3mi9P0t/vyalOX/C8v8AZ9sVS/TPR+p6dT6h/vPb/Z/TNP8AjqSdOW9PDlvXr8FMVa/c+j/x4f7w&#xA;f9rn/q8/q/4bl/xXirep+j9T1Gv1D/ee4+1+maf8dSPrx3p48d69Pgriqrq/pctUr9R/vNSry/TH&#xA;/LTF9rh/w3H/AGO1cVeveR9EvdKtNS+tLbr9f1Ce+t/qzzuDDMqcDJ65JWT4fiVfhHbAWYZHgS7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxL80Zo4fKE0kkywKJ7Yeo7zou8yinK3DS&#xA;b/KnjthDEvJtT1OzFnqJOo26hbe4JJuNUFKapGtTxjqKH4fh3rsPhwsUw1DUbUR6jW/gHGTWq1n1&#xA;EU4SQ1rxj241349P2K74qhLrUrQTuP0hAP3msbevqf7Onxk9I/2RufD9irYq6TUrSsn+5CD+7uv9&#xA;36n20oN/vvsPi+W4+LbFXR6laVj/ANyEH93a/wC79T76UW/333HxfLc/FtirrXUrQzoP0hAf3mj7&#xA;evqf7WnyEdY/2huPH9ujYqi9P1G1MenUv4Dyk0WlJ9RNeck1Kco9+VNuXX9um2Kpfpmp2Zs9OI1G&#xA;3YNb25BFxqhrXVJFqOUdTU/D8W9dj8OKu/Sdn6Nf0jb/AO8HL/ejVOn6Z41/u+lfhr1rt9jfFXan&#xA;qdmLPUSdRt1C29wSTcaoKU1SNanjHUUPw/DvXYfDiqrq+pWitqldQgXjJqVaz6mKcbmIGvGPbj0P&#xA;Hp+ztXFXr3kfzBNrVpqRle3kGnahPYRm2EwokCpQSesqkyfF8RX4fA5EswWR4pdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirwvzQuq6Mt7b6jey2s5s5J0U6nPURvqUYR6pG3HY08R&#xA;9npvkmsr7/VGEeo/7knXjJrP/SwuBTg8PhH8PCvb7PatcVQt1qzCdx+k5B+81fb9I3A+xYRt/vr9&#xA;j7X+T1FTirUmrNWT/cnJ/d3X/SxuO2lhv99dvte32uu2Kuj1Zqx/7k5P7u1/6WNx30st/vrv9r3+&#xA;112xVu11ZjOg/Sch/eaRt+kbg/bsJG/31+39r/K6mhxVFWGqMY9O/wByTtyk0b/pYXBrzebxj+Ln&#xA;Tv8Aa70piqX6bq7Naaef0pI3KCA1/SVy1a6nItamL4q/Zqev2em+Ku/S7elX9KSf7w8q/pK5/wCr&#xA;xw5f3X+x5f7HpvirtS1dltNQP6UkXjBOa/pK5WlNTjWtRF8NPs1HT7PTfFUx/wByeq6ne6bpt7LN&#xA;ezS6ksMK6lPGaxzxkgEx0XiK9/h6CtcVeu6DoqaVBcKLi4ne7ne7l+symb03lA5RxkgcY14/CuRZ&#xA;hM8UuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViX5plYvI+p3AkeCVRABcRXC2&#xA;cig3Eey3DLJwr8t+nfCGMuTzu/vpBHqP+n3QpJrPTVkWnF4en7r4eP7P++/euFihbq/kE7/7kbsf&#xA;vNX2Gsxj7NhGeno/s9V/kPxb1pirpL+Sr/7kbv8Au7r/AKXMY6aWG/3z2+0PA/H7Yq6O/kqn+5G7&#xA;/u7X/pcxnrpZb/fPf7R8T8ftirrW/kM6f7kbs/vNI2Osxn7VhIeno/tdW/nPxbUpiqKsL6Qx6d/p&#xA;90ayaN11ZGryebr+6+Ll+1/vz2piqX6bqEptNPP6Ru2rBAanWo3Jrqci1J9Ecq/Zr3Hwdq4q79IS&#xA;+l/x0bv/AHhrX9NR/wDV441r6PX9nl4fB74q7UtQlFpqB/SN2tIJzUa1GhFNTjWoPonjT7New+Dv&#xA;XFXpPkDV9LM9/YTXfq6nLqN89vFNcC6l9KN1DBGCJwRf99/s4CyDOMDJ2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLvMGjjWdIuNNNxJaevw/0iIIzrwdX2Eiuu/Gm4xQWD2s1v&#xA;d+XNdtISJ9alvL5bC2S4sXu3VHTmISqlVA2qrqSP2sLFjN7eyxXUsUjypIkurK6Nf6WpBjsYyQQy&#xA;VFPA/Z6v8OFC2TUTV/30n2Ln/pYaX20wN/J/tfaPwYq6PUTVP30n2Lb/AKWGl99MLfyf7f2h8GKu&#xA;ttRJmT99J9vSv+lhpZ+1YyHsnf8A4bqnw1xVFWOoEx2H71/ifSf+P7TD9p5f5U+KtP2ftfsdDilE&#xA;WWhebVt7MPpepqyxRCQNPYEhhfO7BqRAVEZDGn7O32t8C0yvyZ5WnWOO/wBVSdJfSmtW0y8+rSrT&#xA;60ZkmLRRr8XSg8PffEpATyTyxYPq635p9XEDQPp/pxeg5aT1PUYFeXKo8aYE08x1q51bSbm8aY3d&#xA;hcH69NAzX2m27mNp4wrpzQEKR0J6dG3pkmL1rS9Rsb62LWt1FdGBvQuTFIkpSZAOcchQkB1ruMiy&#xA;RmKXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnN5pd15S1VdWEJ1G2iXUby&#xA;V4ra0tlU3DR8Ymm+Fg232q/F+12wseSSecNGNpd217zjl/S6avfiP6pp9YvWsk/dl5aGQju37XR/&#xA;hwhBSSSM1k/dx/3d1/x66X/1ax7/AOfQ/Bih0cZrH+7j/u7X/j10v/q1n3/z6D4MVbtYz66fBH/e&#xA;aR/x66WOlhJ4H/a6J8NcVem+SNB0S48qaVcXOnWstyYonMr21sG5Qsxib90DGDHyPHj07YCyAZdg&#xA;ZOxV2KpJ5p8q2Ov6fPAyQRX0kfow38ttDcvGhcOyhZQQVbj06YoIXeWPLp0OK/jM6XH169mvapBF&#xA;b8fVCjgREBzI4/bb4j3xUBOcUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kp&#xA;b5k0h9Y0K90yOZLd7uMxrNJClwi1INTDJ8L/ACOKCxWx8s32s2Gr2Wrtzu7KW4s9Dv7zT7dVgglh&#xA;WJjBGCVljYfzUr0wophWr6Hf6feXFvLHIVT66kcw0axCShNN4c4yzjkpI28fsH4cLGkLHaz1T4JP&#xA;7u1/6VFgOmlkf78/2vsD4d8Vda2s/rp8En95pH/SosB0sJAdxJ/1x9lag4q9b/L9GTyZpKsCCIBU&#xA;GGO2PU/7piLRp8lORLMcmQYpdiqhDqFhNJ6UNzFJJQngjqzUU0OwPY7HFCvil2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5/+a1u0z6ZxtprjjBqY/c2S3tOVmwoe&#xA;Tx8OXQD9s/DthDGTBI7CSqf7jrv+7tf+lNGOmllf9/dvsnwPwe+Fi61sJBOn+467H7zSNzo0Y+zY&#xA;SDr637PRv5D8O9a4q9M/LjU1bRLPSPqV1bSWVpDI0s9qLWJvVLUREDvRl4/EvbAWQZfgZMA89eYv&#xA;M2n67Jb6ZJeLbDT4ZlFvp6Xaes16sTESs6Ev6R3Smy/FXthDElKPy/tXj84I5s54R6F8PUk05bZN&#xA;7utPWEjnfqBT4vtYlAerYGbsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdiqSeavK2n6/Yus8Ecl9FBcxWE03MpG9zCYmLKhXkpB39sUEPNda8i3Wi/VTNb2916wRB9Ut&#xA;J5uJttPMB50kHEEii+23XfJWxpKbXSWE6H9GSD95pG/6OuB9iwkX/fv7H2f8noanFCb+W5dV0j6r&#xA;Jp9pLbSTppVtORp028LPNzU8nbjTuf2O9a4EhlGp/mDdXdjbnR7DUbS5laGRmubB2Aha4MDoV5fC&#xA;3w8vZd8aTbFk0rWvN+sf6dEovpNM4m6vLCaCPjBqnNYyRIBXitQtKn7XTbCjmzzyl5GstFka9nhg&#xA;bVQ9wsdzbiRAIJ5fV4FWZhWvU4LSAynAydirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVSK98j+Wb7UJtQubV3u7iSKaaQT3CgvbxmKM8VkCiiMRQCh6nfG0Ux6&#xA;8/L66iv0GlWdgNNhl09oPrNzqBnEdq0hkrxk4ll5/u+x3512w2ikRqn5aaTDY26aDYwi4heFKXt1&#xA;fGMW6TmdqenLyL82JWvyO22NrSA8k+T/AC1rXl6O9vbONp2M1qTaz6hHF6Ud406gLPIJK+oKk/QP&#xA;h2xJUB6LgZOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh&#xA;v5iXHmKOfQIdBuDDey3krCImkc4t7Oa4EEn+TIYuPtWuEMSknl7z9qmq3k1vpRVrjVdTnW0Ooepw&#xA;tYbWwtZZoSiENzWWQjiCN+R7Y0gFE2X5geZNXik/R9la24h0t766nlkd+MyTXVtwiAUc1aS15qx/&#xA;Z+YxpNpSfNnnm0kbWY47XUBB5bsdT1GJ5XiQx+rcO7RIo4iV4xVj0+GgB2xRZZJ+ZGsah+iLDTtI&#xA;mubbUNYkqk1pG8k8UEKeq7qsYZvtcEP+tiElLpfzL119Lhv9O063uUg0ddX1NZpXhdTFI0dzDGAr&#xA;DkpielfDGltdc/mJ5itJDp1zY251WW5tYoGtlnuIliureS4q0agSyOggZaLSux23xpbU73z15rms&#xA;L6OTS0svqeiTalqDvJLBOjK11EiwqVDr6htldS1CqnfemNItNLbzpqM0Gr6l/olpoeiGW3ne5MzT&#xA;tNFAshc8AaJzcClCzDcdhjSbTDyT5m1DW4tSj1C3W3utOuRA3FXjDK8McykxyVdDSShBP9MSoLJc&#xA;DJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqM1nazTQTzRLJNasZLaRhU&#xA;xsyGNmU9iUcr8jihL7vyl5Zu4ZYbjTYHjmuGvJBwCk3DAK03JaHmyihbuMVpE22i6Ra7W1nDCPQS&#xA;14oiqPQjLFIqAU4KXag98VULTyt5ds7OSzttPgjtZYDaSQhRxa3ZncxGvVOUzmnucVpG/ULL61Fd&#xA;ein1mGNoIZaDkkblSyKewJRa/LFUKvlzQVW5VbCALeJJFdAIKSRzMzyI3iHZ2JHicVpq98taBfRy&#xA;pd2EMyzemZOSCpMFREa9QUqeJHTFabi8uaFFbyW8djCsEtv9Tlj4ghrern0mr1Wsr7e5xWlC48n+&#xA;V7i8kvJ9Lt5LmaMwzSMg+NCnpkOOjfAeNTvTbG1pFaToWj6PA0Gl2cVlC5DOkKBAzABeTU6mg6nf&#xA;FaR2KXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1500.000000</stDim:w>
            <stDim:h>1500.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Charcoal</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Graphite</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Ash</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Smoke</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>178</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Latte</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>228</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>150</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Capuccino</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>213</xmpG:red>
                           <xmpG:green>151</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Mochaccino</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>92</xmpG:green>
                           <xmpG:blue>41</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Chocolate</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>90</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>28</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Mars Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>143</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Ruby</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pure Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pumpkin</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Squash</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>127</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Sunshine</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Chartreuse Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Fresh Grass Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>125</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pure Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Spearmint</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>61</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Holly Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>107</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Sea Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>83</xmpG:green>
                           <xmpG:blue>83</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Caribbean Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>4</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Mediterranean Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Aloha Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>96</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black Light Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>60</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pure Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Sapphire Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Tanzanite</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Brilliant Purple</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>93</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Violet</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>130</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Purple Orchid</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>171</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Fuschia</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>208</xmpG:red>
                           <xmpG:green>16</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Pure Red</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Squash</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>126</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Yellow</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Pure Green</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Mediterranean Blue</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Global Pure Blue</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1156.63 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1156.63 li
1156.63 1156.63 li
1156.63 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1156.63 1156.63 mo
0 1156.63 li
0 0 li
1156.63 0 li
1156.63 1156.63 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.17438 .0993973 .112367 3.0518e-5 cmyk
f
744.778 287.413 mo
736.947 287.413 li
736.947 279.582 li
744.778 279.582 li
744.778 287.413 li
cp
.841581 .621515 .552575 .651423 cmyk
f
732.273 287.413 mo
724.444 287.413 li
724.444 279.582 li
732.273 279.582 li
732.273 287.413 li
cp
f
719.771 287.413 mo
711.94 287.413 li
711.94 279.582 li
719.771 279.582 li
719.771 287.413 li
cp
f
707.267 287.413 mo
699.438 287.413 li
699.438 279.582 li
707.267 279.582 li
707.267 287.413 li
cp
f
694.764 287.413 mo
686.934 287.413 li
686.934 279.582 li
694.764 279.582 li
694.764 287.413 li
cp
f
682.261 287.413 mo
674.43 287.413 li
674.43 279.582 li
682.261 279.582 li
682.261 287.413 li
cp
f
669.757 287.413 mo
661.927 287.413 li
661.927 279.582 li
669.757 279.582 li
669.757 287.413 li
cp
f
657.253 287.413 mo
649.422 287.413 li
649.422 279.582 li
657.253 279.582 li
657.253 287.413 li
cp
f
644.75 287.413 mo
636.919 287.413 li
636.919 279.582 li
644.75 279.582 li
644.75 287.413 li
cp
f
632.247 287.413 mo
624.415 287.413 li
624.415 279.582 li
632.247 279.582 li
632.247 287.413 li
cp
f
594.736 287.413 mo
586.905 287.413 li
586.905 279.582 li
594.736 279.582 li
594.736 287.413 li
cp
f
582.232 287.413 mo
574.402 287.413 li
574.402 279.582 li
582.232 279.582 li
582.232 287.413 li
cp
f
569.729 287.413 mo
561.899 287.413 li
561.899 279.582 li
569.729 279.582 li
569.729 287.413 li
cp
f
557.226 287.413 mo
549.395 287.413 li
549.395 279.582 li
557.226 279.582 li
557.226 287.413 li
cp
f
507.212 287.413 mo
499.382 287.413 li
499.382 279.582 li
507.212 279.582 li
507.212 287.413 li
cp
f
494.708 287.413 mo
486.878 287.413 li
486.878 279.582 li
494.708 279.582 li
494.708 287.413 li
cp
f
482.205 287.413 mo
474.375 287.413 li
474.375 279.582 li
482.205 279.582 li
482.205 287.413 li
cp
f
469.702 287.413 mo
461.871 287.413 li
461.871 279.582 li
469.702 279.582 li
469.702 287.413 li
cp
f
457.197 287.413 mo
449.367 287.413 li
449.367 279.582 li
457.197 279.582 li
457.197 287.413 li
cp
f
444.694 287.413 mo
436.864 287.413 li
436.864 279.582 li
444.694 279.582 li
444.694 287.413 li
cp
f
432.19 287.413 mo
424.361 287.413 li
424.361 279.582 li
432.19 279.582 li
432.19 287.413 li
cp
f
419.688 287.413 mo
411.857 287.413 li
411.857 279.582 li
419.688 279.582 li
419.688 287.413 li
cp
f
407.184 287.413 mo
399.354 287.413 li
399.354 279.582 li
407.184 279.582 li
407.184 287.413 li
cp
f
394.68 287.413 mo
386.85 287.413 li
386.85 279.582 li
394.68 279.582 li
394.68 287.413 li
cp
f
382.176 287.413 mo
374.347 287.413 li
374.347 279.582 li
382.176 279.582 li
382.176 287.413 li
cp
f
369.673 287.413 mo
361.843 287.413 li
361.843 279.582 li
369.673 279.582 li
369.673 287.413 li
cp
f
357.17 287.413 mo
349.34 287.413 li
349.34 279.582 li
357.17 279.582 li
357.17 287.413 li
cp
f
344.667 287.413 mo
336.836 287.413 li
336.836 279.582 li
344.667 279.582 li
344.667 287.413 li
cp
f
332.163 287.413 mo
324.333 287.413 li
324.333 279.582 li
332.163 279.582 li
332.163 287.413 li
cp
f
319.66 287.413 mo
311.83 287.413 li
311.83 279.582 li
319.66 279.582 li
319.66 287.413 li
cp
f
207.128 287.413 mo
199.298 287.413 li
199.298 279.582 li
207.128 279.582 li
207.128 287.413 li
cp
f
744.778 299.917 mo
736.947 299.917 li
736.947 292.085 li
744.778 292.085 li
744.778 299.917 li
cp
f
732.273 299.917 mo
724.444 299.917 li
724.444 292.085 li
732.273 292.085 li
732.273 299.917 li
cp
f
719.771 299.917 mo
711.94 299.917 li
711.94 292.085 li
719.771 292.085 li
719.771 299.917 li
cp
f
682.261 299.917 mo
674.43 299.917 li
674.43 292.085 li
682.261 292.085 li
682.261 299.917 li
cp
f
644.75 299.917 mo
636.919 299.917 li
636.919 292.085 li
644.75 292.085 li
644.75 299.917 li
cp
f
632.247 299.917 mo
624.415 299.917 li
624.415 292.085 li
632.247 292.085 li
632.247 299.917 li
cp
f
607.239 299.917 mo
599.409 299.917 li
599.409 292.085 li
607.239 292.085 li
607.239 299.917 li
cp
f
594.736 299.917 mo
586.905 299.917 li
586.905 292.085 li
594.736 292.085 li
594.736 299.917 li
cp
f
582.232 299.917 mo
574.402 299.917 li
574.402 292.085 li
582.232 292.085 li
582.232 299.917 li
cp
f
569.729 299.917 mo
561.899 299.917 li
561.899 292.085 li
569.729 292.085 li
569.729 299.917 li
cp
f
557.226 299.917 mo
549.395 299.917 li
549.395 292.085 li
557.226 292.085 li
557.226 299.917 li
cp
f
532.219 299.917 mo
524.389 299.917 li
524.389 292.085 li
532.219 292.085 li
532.219 299.917 li
cp
f
519.715 299.917 mo
511.885 299.917 li
511.885 292.085 li
519.715 292.085 li
519.715 299.917 li
cp
f
507.212 299.917 mo
499.382 299.917 li
499.382 292.085 li
507.212 292.085 li
507.212 299.917 li
cp
f
494.708 299.917 mo
486.878 299.917 li
486.878 292.085 li
494.708 292.085 li
494.708 299.917 li
cp
f
482.205 299.917 mo
474.375 299.917 li
474.375 292.085 li
482.205 292.085 li
482.205 299.917 li
cp
f
469.702 299.917 mo
461.871 299.917 li
461.871 292.085 li
469.702 292.085 li
469.702 299.917 li
cp
f
457.197 299.917 mo
449.367 299.917 li
449.367 292.085 li
457.197 292.085 li
457.197 299.917 li
cp
f
444.694 299.917 mo
436.864 299.917 li
436.864 292.085 li
444.694 292.085 li
444.694 299.917 li
cp
f
432.19 299.917 mo
424.361 299.917 li
424.361 292.085 li
432.19 292.085 li
432.19 299.917 li
cp
f
419.688 299.917 mo
411.857 299.917 li
411.857 292.085 li
419.688 292.085 li
419.688 299.917 li
cp
f
407.184 299.917 mo
399.354 299.917 li
399.354 292.085 li
407.184 292.085 li
407.184 299.917 li
cp
f
394.68 299.917 mo
386.85 299.917 li
386.85 292.085 li
394.68 292.085 li
394.68 299.917 li
cp
f
382.176 299.917 mo
374.347 299.917 li
374.347 292.085 li
382.176 292.085 li
382.176 299.917 li
cp
f
369.673 299.917 mo
361.843 299.917 li
361.843 292.085 li
369.673 292.085 li
369.673 299.917 li
cp
f
357.17 299.917 mo
349.34 299.917 li
349.34 292.085 li
357.17 292.085 li
357.17 299.917 li
cp
f
344.667 299.917 mo
336.836 299.917 li
336.836 292.085 li
344.667 292.085 li
344.667 299.917 li
cp
f
332.163 299.917 mo
324.333 299.917 li
324.333 292.085 li
332.163 292.085 li
332.163 299.917 li
cp
f
319.66 299.917 mo
311.83 299.917 li
311.83 292.085 li
319.66 292.085 li
319.66 299.917 li
cp
f
307.156 299.917 mo
299.326 299.917 li
299.326 292.085 li
307.156 292.085 li
307.156 299.917 li
cp
f
244.639 299.917 mo
236.809 299.917 li
236.809 292.085 li
244.639 292.085 li
244.639 299.917 li
cp
f
232.135 299.917 mo
224.305 299.917 li
224.305 292.085 li
232.135 292.085 li
232.135 299.917 li
cp
f
219.632 299.917 mo
211.801 299.917 li
211.801 292.085 li
219.632 292.085 li
219.632 299.917 li
cp
f
744.778 312.419 mo
736.947 312.419 li
736.947 304.589 li
744.778 304.589 li
744.778 312.419 li
cp
f
719.771 312.419 mo
711.94 312.419 li
711.94 304.589 li
719.771 304.589 li
719.771 312.419 li
cp
f
694.764 312.419 mo
686.934 312.419 li
686.934 304.589 li
694.764 304.589 li
694.764 312.419 li
cp
f
682.261 312.419 mo
674.43 312.419 li
674.43 304.589 li
682.261 304.589 li
682.261 312.419 li
cp
f
669.757 312.419 mo
661.927 312.419 li
661.927 304.589 li
669.757 304.589 li
669.757 312.419 li
cp
f
657.253 312.419 mo
649.422 312.419 li
649.422 304.589 li
657.253 304.589 li
657.253 312.419 li
cp
f
644.75 312.419 mo
636.919 312.419 li
636.919 304.589 li
644.75 304.589 li
644.75 312.419 li
cp
f
632.247 312.419 mo
624.415 312.419 li
624.415 304.589 li
632.247 304.589 li
632.247 312.419 li
cp
f
607.239 312.419 mo
599.409 312.419 li
599.409 304.589 li
607.239 304.589 li
607.239 312.419 li
cp
f
594.736 312.419 mo
586.905 312.419 li
586.905 304.589 li
594.736 304.589 li
594.736 312.419 li
cp
f
582.232 312.419 mo
574.402 312.419 li
574.402 304.589 li
582.232 304.589 li
582.232 312.419 li
cp
f
569.729 312.419 mo
561.899 312.419 li
561.899 304.589 li
569.729 304.589 li
569.729 312.419 li
cp
f
544.723 312.419 mo
536.892 312.419 li
536.892 304.589 li
544.723 304.589 li
544.723 312.419 li
cp
f
532.219 312.419 mo
524.389 312.419 li
524.389 304.589 li
532.219 304.589 li
532.219 312.419 li
cp
f
519.715 312.419 mo
511.885 312.419 li
511.885 304.589 li
519.715 304.589 li
519.715 312.419 li
cp
f
507.212 312.419 mo
499.382 312.419 li
499.382 304.589 li
507.212 304.589 li
507.212 312.419 li
cp
f
494.708 312.419 mo
486.878 312.419 li
486.878 304.589 li
494.708 304.589 li
494.708 312.419 li
cp
f
482.205 312.419 mo
474.375 312.419 li
474.375 304.589 li
482.205 304.589 li
482.205 312.419 li
cp
f
469.702 312.419 mo
461.871 312.419 li
461.871 304.589 li
469.702 304.589 li
469.702 312.419 li
cp
f
457.197 312.419 mo
449.367 312.419 li
449.367 304.589 li
457.197 304.589 li
457.197 312.419 li
cp
f
444.694 312.419 mo
436.864 312.419 li
436.864 304.589 li
444.694 304.589 li
444.694 312.419 li
cp
f
432.19 312.419 mo
424.361 312.419 li
424.361 304.589 li
432.19 304.589 li
432.19 312.419 li
cp
f
419.688 312.419 mo
411.857 312.419 li
411.857 304.589 li
419.688 304.589 li
419.688 312.419 li
cp
f
407.184 312.419 mo
399.354 312.419 li
399.354 304.589 li
407.184 304.589 li
407.184 312.419 li
cp
f
394.68 312.419 mo
386.85 312.419 li
386.85 304.589 li
394.68 304.589 li
394.68 312.419 li
cp
f
382.176 312.419 mo
374.347 312.419 li
374.347 304.589 li
382.176 304.589 li
382.176 312.419 li
cp
f
369.673 312.419 mo
361.843 312.419 li
361.843 304.589 li
369.673 304.589 li
369.673 312.419 li
cp
f
357.17 312.419 mo
349.34 312.419 li
349.34 304.589 li
357.17 304.589 li
357.17 312.419 li
cp
f
344.667 312.419 mo
336.836 312.419 li
336.836 304.589 li
344.667 304.589 li
344.667 312.419 li
cp
f
332.163 312.419 mo
324.333 312.419 li
324.333 304.589 li
332.163 304.589 li
332.163 312.419 li
cp
f
319.66 312.419 mo
311.83 312.419 li
311.83 304.589 li
319.66 304.589 li
319.66 312.419 li
cp
f
257.143 312.419 mo
249.313 312.419 li
249.313 304.589 li
257.143 304.589 li
257.143 312.419 li
cp
f
244.639 312.419 mo
236.809 312.419 li
236.809 304.589 li
244.639 304.589 li
244.639 312.419 li
cp
f
744.778 324.923 mo
736.947 324.923 li
736.947 317.093 li
744.778 317.093 li
744.778 324.923 li
cp
f
694.764 324.923 mo
686.934 324.923 li
686.934 317.093 li
694.764 317.093 li
694.764 324.923 li
cp
f
682.261 324.923 mo
674.43 324.923 li
674.43 317.093 li
682.261 317.093 li
682.261 324.923 li
cp
f
669.757 324.923 mo
661.927 324.923 li
661.927 317.093 li
669.757 317.093 li
669.757 324.923 li
cp
f
657.253 324.923 mo
649.422 324.923 li
649.422 317.093 li
657.253 317.093 li
657.253 324.923 li
cp
f
644.75 324.923 mo
636.919 324.923 li
636.919 317.093 li
644.75 317.093 li
644.75 324.923 li
cp
f
632.247 324.923 mo
624.415 324.923 li
624.415 317.093 li
632.247 317.093 li
632.247 324.923 li
cp
f
594.736 324.923 mo
586.905 324.923 li
586.905 317.093 li
594.736 317.093 li
594.736 324.923 li
cp
f
582.232 324.923 mo
574.402 324.923 li
574.402 317.093 li
582.232 317.093 li
582.232 324.923 li
cp
f
557.226 324.923 mo
549.395 324.923 li
549.395 317.093 li
557.226 317.093 li
557.226 324.923 li
cp
f
544.723 324.923 mo
536.892 324.923 li
536.892 317.093 li
544.723 317.093 li
544.723 324.923 li
cp
f
532.219 324.923 mo
524.389 324.923 li
524.389 317.093 li
532.219 317.093 li
532.219 324.923 li
cp
f
519.715 324.923 mo
511.885 324.923 li
511.885 317.093 li
519.715 317.093 li
519.715 324.923 li
cp
f
507.212 324.923 mo
499.382 324.923 li
499.382 317.093 li
507.212 317.093 li
507.212 324.923 li
cp
f
494.708 324.923 mo
486.878 324.923 li
486.878 317.093 li
494.708 317.093 li
494.708 324.923 li
cp
f
482.205 324.923 mo
474.375 324.923 li
474.375 317.093 li
482.205 317.093 li
482.205 324.923 li
cp
f
469.702 324.923 mo
461.871 324.923 li
461.871 317.093 li
469.702 317.093 li
469.702 324.923 li
cp
f
457.197 324.923 mo
449.367 324.923 li
449.367 317.093 li
457.197 317.093 li
457.197 324.923 li
cp
f
444.694 324.923 mo
436.864 324.923 li
436.864 317.093 li
444.694 317.093 li
444.694 324.923 li
cp
f
432.19 324.923 mo
424.361 324.923 li
424.361 317.093 li
432.19 317.093 li
432.19 324.923 li
cp
f
419.688 324.923 mo
411.857 324.923 li
411.857 317.093 li
419.688 317.093 li
419.688 324.923 li
cp
f
407.184 324.923 mo
399.354 324.923 li
399.354 317.093 li
407.184 317.093 li
407.184 324.923 li
cp
f
394.68 324.923 mo
386.85 324.923 li
386.85 317.093 li
394.68 317.093 li
394.68 324.923 li
cp
f
382.176 324.923 mo
374.347 324.923 li
374.347 317.093 li
382.176 317.093 li
382.176 324.923 li
cp
f
369.673 324.923 mo
361.843 324.923 li
361.843 317.093 li
369.673 317.093 li
369.673 324.923 li
cp
f
357.17 324.923 mo
349.34 324.923 li
349.34 317.093 li
357.17 317.093 li
357.17 324.923 li
cp
f
344.667 324.923 mo
336.836 324.923 li
336.836 317.093 li
344.667 317.093 li
344.667 324.923 li
cp
f
332.163 324.923 mo
324.333 324.923 li
324.333 317.093 li
332.163 317.093 li
332.163 324.923 li
cp
f
319.66 324.923 mo
311.83 324.923 li
311.83 317.093 li
319.66 317.093 li
319.66 324.923 li
cp
f
307.156 324.923 mo
299.326 324.923 li
299.326 317.093 li
307.156 317.093 li
307.156 324.923 li
cp
f
294.653 324.923 mo
286.823 324.923 li
286.823 317.093 li
294.653 317.093 li
294.653 324.923 li
cp
f
282.149 324.923 mo
274.319 324.923 li
274.319 317.093 li
282.149 317.093 li
282.149 324.923 li
cp
f
269.646 324.923 mo
261.815 324.923 li
261.815 317.093 li
269.646 317.093 li
269.646 324.923 li
cp
f
744.778 337.427 mo
736.947 337.427 li
736.947 329.596 li
744.778 329.596 li
744.778 337.427 li
cp
f
732.273 337.427 mo
724.444 337.427 li
724.444 329.596 li
732.273 329.596 li
732.273 337.427 li
cp
f
694.764 337.427 mo
686.934 337.427 li
686.934 329.596 li
694.764 329.596 li
694.764 337.427 li
cp
f
682.261 337.427 mo
674.43 337.427 li
674.43 329.596 li
682.261 329.596 li
682.261 337.427 li
cp
f
669.757 337.427 mo
661.927 337.427 li
661.927 329.596 li
669.757 329.596 li
669.757 337.427 li
cp
f
657.253 337.427 mo
649.422 337.427 li
649.422 329.596 li
657.253 329.596 li
657.253 337.427 li
cp
f
644.75 337.427 mo
636.919 337.427 li
636.919 329.596 li
644.75 329.596 li
644.75 337.427 li
cp
f
632.247 337.427 mo
624.415 337.427 li
624.415 329.596 li
632.247 329.596 li
632.247 337.427 li
cp
f
619.744 337.427 mo
611.913 337.427 li
611.913 329.596 li
619.744 329.596 li
619.744 337.427 li
cp
f
607.239 337.427 mo
599.409 337.427 li
599.409 329.596 li
607.239 329.596 li
607.239 337.427 li
cp
f
594.736 337.427 mo
586.905 337.427 li
586.905 329.596 li
594.736 329.596 li
594.736 337.427 li
cp
f
582.232 337.427 mo
574.402 337.427 li
574.402 329.596 li
582.232 329.596 li
582.232 337.427 li
cp
f
569.729 337.427 mo
561.899 337.427 li
561.899 329.596 li
569.729 329.596 li
569.729 337.427 li
cp
f
557.226 337.427 mo
549.395 337.427 li
549.395 329.596 li
557.226 329.596 li
557.226 337.427 li
cp
f
544.723 337.427 mo
536.892 337.427 li
536.892 329.596 li
544.723 329.596 li
544.723 337.427 li
cp
f
507.212 337.427 mo
499.382 337.427 li
499.382 329.596 li
507.212 329.596 li
507.212 337.427 li
cp
f
494.708 337.427 mo
486.878 337.427 li
486.878 329.596 li
494.708 329.596 li
494.708 337.427 li
cp
f
482.205 337.427 mo
474.375 337.427 li
474.375 329.596 li
482.205 329.596 li
482.205 337.427 li
cp
f
469.702 337.427 mo
461.871 337.427 li
461.871 329.596 li
469.702 329.596 li
469.702 337.427 li
cp
f
457.197 337.427 mo
449.367 337.427 li
449.367 329.596 li
457.197 329.596 li
457.197 337.427 li
cp
f
444.694 337.427 mo
436.864 337.427 li
436.864 329.596 li
444.694 329.596 li
444.694 337.427 li
cp
f
432.19 337.427 mo
424.361 337.427 li
424.361 329.596 li
432.19 329.596 li
432.19 337.427 li
cp
f
419.688 337.427 mo
411.857 337.427 li
411.857 329.596 li
419.688 329.596 li
419.688 337.427 li
cp
f
407.184 337.427 mo
399.354 337.427 li
399.354 329.596 li
407.184 329.596 li
407.184 337.427 li
cp
f
394.68 337.427 mo
386.85 337.427 li
386.85 329.596 li
394.68 329.596 li
394.68 337.427 li
cp
f
382.176 337.427 mo
374.347 337.427 li
374.347 329.596 li
382.176 329.596 li
382.176 337.427 li
cp
f
369.673 337.427 mo
361.843 337.427 li
361.843 329.596 li
369.673 329.596 li
369.673 337.427 li
cp
f
357.17 337.427 mo
349.34 337.427 li
349.34 329.596 li
357.17 329.596 li
357.17 337.427 li
cp
f
332.163 337.427 mo
324.333 337.427 li
324.333 329.596 li
332.163 329.596 li
332.163 337.427 li
cp
f
319.66 337.427 mo
311.83 337.427 li
311.83 329.596 li
319.66 329.596 li
319.66 337.427 li
cp
f
732.273 349.93 mo
724.444 349.93 li
724.444 342.1 li
732.273 342.1 li
732.273 349.93 li
cp
f
694.764 349.93 mo
686.934 349.93 li
686.934 342.1 li
694.764 342.1 li
694.764 349.93 li
cp
f
682.261 349.93 mo
674.43 349.93 li
674.43 342.1 li
682.261 342.1 li
682.261 349.93 li
cp
f
669.757 349.93 mo
661.927 349.93 li
661.927 342.1 li
669.757 342.1 li
669.757 349.93 li
cp
f
657.253 349.93 mo
649.422 349.93 li
649.422 342.1 li
657.253 342.1 li
657.253 349.93 li
cp
f
644.75 349.93 mo
636.919 349.93 li
636.919 342.1 li
644.75 342.1 li
644.75 349.93 li
cp
f
632.247 349.93 mo
624.415 349.93 li
624.415 342.1 li
632.247 342.1 li
632.247 349.93 li
cp
f
619.744 349.93 mo
611.913 349.93 li
611.913 342.1 li
619.744 342.1 li
619.744 349.93 li
cp
f
607.239 349.93 mo
599.409 349.93 li
599.409 342.1 li
607.239 342.1 li
607.239 349.93 li
cp
f
594.736 349.93 mo
586.905 349.93 li
586.905 342.1 li
594.736 342.1 li
594.736 349.93 li
cp
f
582.232 349.93 mo
574.402 349.93 li
574.402 342.1 li
582.232 342.1 li
582.232 349.93 li
cp
f
569.729 349.93 mo
561.899 349.93 li
561.899 342.1 li
569.729 342.1 li
569.729 349.93 li
cp
f
557.226 349.93 mo
549.395 349.93 li
549.395 342.1 li
557.226 342.1 li
557.226 349.93 li
cp
f
544.723 349.93 mo
536.892 349.93 li
536.892 342.1 li
544.723 342.1 li
544.723 349.93 li
cp
f
532.219 349.93 mo
524.389 349.93 li
524.389 342.1 li
532.219 342.1 li
532.219 349.93 li
cp
f
519.715 349.93 mo
511.885 349.93 li
511.885 342.1 li
519.715 342.1 li
519.715 349.93 li
cp
f
507.212 349.93 mo
499.382 349.93 li
499.382 342.1 li
507.212 342.1 li
507.212 349.93 li
cp
f
494.708 349.93 mo
486.878 349.93 li
486.878 342.1 li
494.708 342.1 li
494.708 349.93 li
cp
f
482.205 349.93 mo
474.375 349.93 li
474.375 342.1 li
482.205 342.1 li
482.205 349.93 li
cp
f
469.702 349.93 mo
461.871 349.93 li
461.871 342.1 li
469.702 342.1 li
469.702 349.93 li
cp
f
457.197 349.93 mo
449.367 349.93 li
449.367 342.1 li
457.197 342.1 li
457.197 349.93 li
cp
f
444.694 349.93 mo
436.864 349.93 li
436.864 342.1 li
444.694 342.1 li
444.694 349.93 li
cp
f
432.19 349.93 mo
424.361 349.93 li
424.361 342.1 li
432.19 342.1 li
432.19 349.93 li
cp
f
419.688 349.93 mo
411.857 349.93 li
411.857 342.1 li
419.688 342.1 li
419.688 349.93 li
cp
f
407.184 349.93 mo
399.354 349.93 li
399.354 342.1 li
407.184 342.1 li
407.184 349.93 li
cp
f
394.68 349.93 mo
386.85 349.93 li
386.85 342.1 li
394.68 342.1 li
394.68 349.93 li
cp
f
332.163 349.93 mo
324.333 349.93 li
324.333 342.1 li
332.163 342.1 li
332.163 349.93 li
cp
f
319.66 349.93 mo
311.83 349.93 li
311.83 342.1 li
319.66 342.1 li
319.66 349.93 li
cp
f
707.267 362.434 mo
699.438 362.434 li
699.438 354.604 li
707.267 354.604 li
707.267 362.434 li
cp
f
694.764 362.434 mo
686.934 362.434 li
686.934 354.604 li
694.764 354.604 li
694.764 362.434 li
cp
f
682.261 362.434 mo
674.43 362.434 li
674.43 354.604 li
682.261 354.604 li
682.261 362.434 li
cp
f
669.757 362.434 mo
661.927 362.434 li
661.927 354.604 li
669.757 354.604 li
669.757 362.434 li
cp
f
657.253 362.434 mo
649.422 362.434 li
649.422 354.604 li
657.253 354.604 li
657.253 362.434 li
cp
f
644.75 362.434 mo
636.919 362.434 li
636.919 354.604 li
644.75 354.604 li
644.75 362.434 li
cp
f
632.247 362.434 mo
624.415 362.434 li
624.415 354.604 li
632.247 354.604 li
632.247 362.434 li
cp
f
619.744 362.434 mo
611.913 362.434 li
611.913 354.604 li
619.744 354.604 li
619.744 362.434 li
cp
f
607.239 362.434 mo
599.409 362.434 li
599.409 354.604 li
607.239 354.604 li
607.239 362.434 li
cp
f
594.736 362.434 mo
586.905 362.434 li
586.905 354.604 li
594.736 354.604 li
594.736 362.434 li
cp
f
582.232 362.434 mo
574.402 362.434 li
574.402 354.604 li
582.232 354.604 li
582.232 362.434 li
cp
f
569.729 362.434 mo
561.899 362.434 li
561.899 354.604 li
569.729 354.604 li
569.729 362.434 li
cp
f
557.226 362.434 mo
549.395 362.434 li
549.395 354.604 li
557.226 354.604 li
557.226 362.434 li
cp
f
544.723 362.434 mo
536.892 362.434 li
536.892 354.604 li
544.723 354.604 li
544.723 362.434 li
cp
f
532.219 362.434 mo
524.389 362.434 li
524.389 354.604 li
532.219 354.604 li
532.219 362.434 li
cp
f
519.715 362.434 mo
511.885 362.434 li
511.885 354.604 li
519.715 354.604 li
519.715 362.434 li
cp
f
507.212 362.434 mo
499.382 362.434 li
499.382 354.604 li
507.212 354.604 li
507.212 362.434 li
cp
f
494.708 362.434 mo
486.878 362.434 li
486.878 354.604 li
494.708 354.604 li
494.708 362.434 li
cp
f
482.205 362.434 mo
474.375 362.434 li
474.375 354.604 li
482.205 354.604 li
482.205 362.434 li
cp
f
469.702 362.434 mo
461.871 362.434 li
461.871 354.604 li
469.702 354.604 li
469.702 362.434 li
cp
f
457.197 362.434 mo
449.367 362.434 li
449.367 354.604 li
457.197 354.604 li
457.197 362.434 li
cp
f
444.694 362.434 mo
436.864 362.434 li
436.864 354.604 li
444.694 354.604 li
444.694 362.434 li
cp
f
432.19 362.434 mo
424.361 362.434 li
424.361 354.604 li
432.19 354.604 li
432.19 362.434 li
cp
f
419.688 362.434 mo
411.857 362.434 li
411.857 354.604 li
419.688 354.604 li
419.688 362.434 li
cp
f
407.184 362.434 mo
399.354 362.434 li
399.354 354.604 li
407.184 354.604 li
407.184 362.434 li
cp
f
744.778 374.938 mo
736.947 374.938 li
736.947 367.107 li
744.778 367.107 li
744.778 374.938 li
cp
f
732.273 374.938 mo
724.444 374.938 li
724.444 367.107 li
732.273 367.107 li
732.273 374.938 li
cp
f
707.267 374.938 mo
699.438 374.938 li
699.438 367.107 li
707.267 367.107 li
707.267 374.938 li
cp
f
669.757 374.938 mo
661.927 374.938 li
661.927 367.107 li
669.757 367.107 li
669.757 374.938 li
cp
f
657.253 374.938 mo
649.422 374.938 li
649.422 367.107 li
657.253 367.107 li
657.253 374.938 li
cp
f
644.75 374.938 mo
636.919 374.938 li
636.919 367.107 li
644.75 367.107 li
644.75 374.938 li
cp
f
632.247 374.938 mo
624.415 374.938 li
624.415 367.107 li
632.247 367.107 li
632.247 374.938 li
cp
f
619.744 374.938 mo
611.913 374.938 li
611.913 367.107 li
619.744 367.107 li
619.744 374.938 li
cp
f
607.239 374.938 mo
599.409 374.938 li
599.409 367.107 li
607.239 367.107 li
607.239 374.938 li
cp
f
594.736 374.938 mo
586.905 374.938 li
586.905 367.107 li
594.736 367.107 li
594.736 374.938 li
cp
f
582.232 374.938 mo
574.402 374.938 li
574.402 367.107 li
582.232 367.107 li
582.232 374.938 li
cp
f
569.729 374.938 mo
561.899 374.938 li
561.899 367.107 li
569.729 367.107 li
569.729 374.938 li
cp
f
557.226 374.938 mo
549.395 374.938 li
549.395 367.107 li
557.226 367.107 li
557.226 374.938 li
cp
f
544.723 374.938 mo
536.892 374.938 li
536.892 367.107 li
544.723 367.107 li
544.723 374.938 li
cp
f
532.219 374.938 mo
524.389 374.938 li
524.389 367.107 li
532.219 367.107 li
532.219 374.938 li
cp
f
519.715 374.938 mo
511.885 374.938 li
511.885 367.107 li
519.715 367.107 li
519.715 374.938 li
cp
f
507.212 374.938 mo
499.382 374.938 li
499.382 367.107 li
507.212 367.107 li
507.212 374.938 li
cp
f
494.708 374.938 mo
486.878 374.938 li
486.878 367.107 li
494.708 367.107 li
494.708 374.938 li
cp
f
482.205 374.938 mo
474.375 374.938 li
474.375 367.107 li
482.205 367.107 li
482.205 374.938 li
cp
f
469.702 374.938 mo
461.871 374.938 li
461.871 367.107 li
469.702 367.107 li
469.702 374.938 li
cp
f
457.197 374.938 mo
449.367 374.938 li
449.367 367.107 li
457.197 367.107 li
457.197 374.938 li
cp
f
444.694 374.938 mo
436.864 374.938 li
436.864 367.107 li
444.694 367.107 li
444.694 374.938 li
cp
f
432.19 374.938 mo
424.361 374.938 li
424.361 367.107 li
432.19 367.107 li
432.19 374.938 li
cp
f
419.688 374.938 mo
411.857 374.938 li
411.857 367.107 li
419.688 367.107 li
419.688 374.938 li
cp
f
407.184 374.938 mo
399.354 374.938 li
399.354 367.107 li
407.184 367.107 li
407.184 374.938 li
cp
f
744.778 387.44 mo
736.947 387.44 li
736.947 379.611 li
744.778 379.611 li
744.778 387.44 li
cp
f
657.253 387.44 mo
649.422 387.44 li
649.422 379.611 li
657.253 379.611 li
657.253 387.44 li
cp
f
644.75 387.44 mo
636.919 387.44 li
636.919 379.611 li
644.75 379.611 li
644.75 387.44 li
cp
f
632.247 387.44 mo
624.415 387.44 li
624.415 379.611 li
632.247 379.611 li
632.247 387.44 li
cp
f
619.744 387.44 mo
611.913 387.44 li
611.913 379.611 li
619.744 379.611 li
619.744 387.44 li
cp
f
607.239 387.44 mo
599.409 387.44 li
599.409 379.611 li
607.239 379.611 li
607.239 387.44 li
cp
f
594.736 387.44 mo
586.905 387.44 li
586.905 379.611 li
594.736 379.611 li
594.736 387.44 li
cp
f
582.232 387.44 mo
574.402 387.44 li
574.402 379.611 li
582.232 379.611 li
582.232 387.44 li
cp
f
569.729 387.44 mo
561.899 387.44 li
561.899 379.611 li
569.729 379.611 li
569.729 387.44 li
cp
f
557.226 387.44 mo
549.395 387.44 li
549.395 379.611 li
557.226 379.611 li
557.226 387.44 li
cp
f
544.723 387.44 mo
536.892 387.44 li
536.892 379.611 li
544.723 379.611 li
544.723 387.44 li
cp
f
532.219 387.44 mo
524.389 387.44 li
524.389 379.611 li
532.219 379.611 li
532.219 387.44 li
cp
f
519.715 387.44 mo
511.885 387.44 li
511.885 379.611 li
519.715 379.611 li
519.715 387.44 li
cp
f
507.212 387.44 mo
499.382 387.44 li
499.382 379.611 li
507.212 379.611 li
507.212 387.44 li
cp
f
494.708 387.44 mo
486.878 387.44 li
486.878 379.611 li
494.708 379.611 li
494.708 387.44 li
cp
f
482.205 387.44 mo
474.375 387.44 li
474.375 379.611 li
482.205 379.611 li
482.205 387.44 li
cp
f
469.702 387.44 mo
461.871 387.44 li
461.871 379.611 li
469.702 379.611 li
469.702 387.44 li
cp
f
457.197 387.44 mo
449.367 387.44 li
449.367 379.611 li
457.197 379.611 li
457.197 387.44 li
cp
f
444.694 387.44 mo
436.864 387.44 li
436.864 379.611 li
444.694 379.611 li
444.694 387.44 li
cp
f
432.19 387.44 mo
424.361 387.44 li
424.361 379.611 li
432.19 379.611 li
432.19 387.44 li
cp
f
419.688 387.44 mo
411.857 387.44 li
411.857 379.611 li
419.688 379.611 li
419.688 387.44 li
cp
f
744.778 399.944 mo
736.947 399.944 li
736.947 392.113 li
744.778 392.113 li
744.778 399.944 li
cp
f
644.75 399.944 mo
636.919 399.944 li
636.919 392.113 li
644.75 392.113 li
644.75 399.944 li
cp
f
632.247 399.944 mo
624.415 399.944 li
624.415 392.113 li
632.247 392.113 li
632.247 399.944 li
cp
f
619.744 399.944 mo
611.913 399.944 li
611.913 392.113 li
619.744 392.113 li
619.744 399.944 li
cp
f
607.239 399.944 mo
599.409 399.944 li
599.409 392.113 li
607.239 392.113 li
607.239 399.944 li
cp
f
594.736 399.944 mo
586.905 399.944 li
586.905 392.113 li
594.736 392.113 li
594.736 399.944 li
cp
f
582.232 399.944 mo
574.402 399.944 li
574.402 392.113 li
582.232 392.113 li
582.232 399.944 li
cp
f
569.729 399.944 mo
561.899 399.944 li
561.899 392.113 li
569.729 392.113 li
569.729 399.944 li
cp
f
557.226 399.944 mo
549.395 399.944 li
549.395 392.113 li
557.226 392.113 li
557.226 399.944 li
cp
f
544.723 399.944 mo
536.892 399.944 li
536.892 392.113 li
544.723 392.113 li
544.723 399.944 li
cp
f
532.219 399.944 mo
524.389 399.944 li
524.389 392.113 li
532.219 392.113 li
532.219 399.944 li
cp
f
519.715 399.944 mo
511.885 399.944 li
511.885 392.113 li
519.715 392.113 li
519.715 399.944 li
cp
f
507.212 399.944 mo
499.382 399.944 li
499.382 392.113 li
507.212 392.113 li
507.212 399.944 li
cp
f
494.708 399.944 mo
486.878 399.944 li
486.878 392.113 li
494.708 392.113 li
494.708 399.944 li
cp
f
482.205 399.944 mo
474.375 399.944 li
474.375 392.113 li
482.205 392.113 li
482.205 399.944 li
cp
f
469.702 399.944 mo
461.871 399.944 li
461.871 392.113 li
469.702 392.113 li
469.702 399.944 li
cp
f
457.197 399.944 mo
449.367 399.944 li
449.367 392.113 li
457.197 392.113 li
457.197 399.944 li
cp
f
444.694 399.944 mo
436.864 399.944 li
436.864 392.113 li
444.694 392.113 li
444.694 399.944 li
cp
f
432.19 399.944 mo
424.361 399.944 li
424.361 392.113 li
432.19 392.113 li
432.19 399.944 li
cp
f
419.688 399.944 mo
411.857 399.944 li
411.857 392.113 li
419.688 392.113 li
419.688 399.944 li
cp
f
744.778 412.448 mo
736.947 412.448 li
736.947 404.617 li
744.778 404.617 li
744.778 412.448 li
cp
f
644.75 412.448 mo
636.919 412.448 li
636.919 404.617 li
644.75 404.617 li
644.75 412.448 li
cp
f
632.247 412.448 mo
624.415 412.448 li
624.415 404.617 li
632.247 404.617 li
632.247 412.448 li
cp
f
619.744 412.448 mo
611.913 412.448 li
611.913 404.617 li
619.744 404.617 li
619.744 412.448 li
cp
f
607.239 412.448 mo
599.409 412.448 li
599.409 404.617 li
607.239 404.617 li
607.239 412.448 li
cp
f
594.736 412.448 mo
586.905 412.448 li
586.905 404.617 li
594.736 404.617 li
594.736 412.448 li
cp
f
582.232 412.448 mo
574.402 412.448 li
574.402 404.617 li
582.232 404.617 li
582.232 412.448 li
cp
f
569.729 412.448 mo
561.899 412.448 li
561.899 404.617 li
569.729 404.617 li
569.729 412.448 li
cp
f
557.226 412.448 mo
549.395 412.448 li
549.395 404.617 li
557.226 404.617 li
557.226 412.448 li
cp
f
544.723 412.448 mo
536.892 412.448 li
536.892 404.617 li
544.723 404.617 li
544.723 412.448 li
cp
f
532.219 412.448 mo
524.389 412.448 li
524.389 404.617 li
532.219 404.617 li
532.219 412.448 li
cp
f
519.715 412.448 mo
511.885 412.448 li
511.885 404.617 li
519.715 404.617 li
519.715 412.448 li
cp
f
507.212 412.448 mo
499.382 412.448 li
499.382 404.617 li
507.212 404.617 li
507.212 412.448 li
cp
f
494.708 412.448 mo
486.878 412.448 li
486.878 404.617 li
494.708 404.617 li
494.708 412.448 li
cp
f
482.205 412.448 mo
474.375 412.448 li
474.375 404.617 li
482.205 404.617 li
482.205 412.448 li
cp
f
469.702 412.448 mo
461.871 412.448 li
461.871 404.617 li
469.702 404.617 li
469.702 412.448 li
cp
f
457.197 412.448 mo
449.367 412.448 li
449.367 404.617 li
457.197 404.617 li
457.197 412.448 li
cp
f
444.694 412.448 mo
436.864 412.448 li
436.864 404.617 li
444.694 404.617 li
444.694 412.448 li
cp
f
432.19 412.448 mo
424.361 412.448 li
424.361 404.617 li
432.19 404.617 li
432.19 412.448 li
cp
f
419.688 412.448 mo
411.857 412.448 li
411.857 404.617 li
419.688 404.617 li
419.688 412.448 li
cp
f
644.75 424.951 mo
636.919 424.951 li
636.919 417.121 li
644.75 417.121 li
644.75 424.951 li
cp
f
632.247 424.951 mo
624.415 424.951 li
624.415 417.121 li
632.247 417.121 li
632.247 424.951 li
cp
f
619.744 424.951 mo
611.913 424.951 li
611.913 417.121 li
619.744 417.121 li
619.744 424.951 li
cp
f
607.239 424.951 mo
599.409 424.951 li
599.409 417.121 li
607.239 417.121 li
607.239 424.951 li
cp
f
594.736 424.951 mo
586.905 424.951 li
586.905 417.121 li
594.736 417.121 li
594.736 424.951 li
cp
f
582.232 424.951 mo
574.402 424.951 li
574.402 417.121 li
582.232 417.121 li
582.232 424.951 li
cp
f
569.729 424.951 mo
561.899 424.951 li
561.899 417.121 li
569.729 417.121 li
569.729 424.951 li
cp
f
557.226 424.951 mo
549.395 424.951 li
549.395 417.121 li
557.226 417.121 li
557.226 424.951 li
cp
f
544.723 424.951 mo
536.892 424.951 li
536.892 417.121 li
544.723 417.121 li
544.723 424.951 li
cp
f
532.219 424.951 mo
524.389 424.951 li
524.389 417.121 li
532.219 417.121 li
532.219 424.951 li
cp
f
519.715 424.951 mo
511.885 424.951 li
511.885 417.121 li
519.715 417.121 li
519.715 424.951 li
cp
f
507.212 424.951 mo
499.382 424.951 li
499.382 417.121 li
507.212 417.121 li
507.212 424.951 li
cp
f
494.708 424.951 mo
486.878 424.951 li
486.878 417.121 li
494.708 417.121 li
494.708 424.951 li
cp
f
482.205 424.951 mo
474.375 424.951 li
474.375 417.121 li
482.205 417.121 li
482.205 424.951 li
cp
f
469.702 424.951 mo
461.871 424.951 li
461.871 417.121 li
469.702 417.121 li
469.702 424.951 li
cp
f
457.197 424.951 mo
449.367 424.951 li
449.367 417.121 li
457.197 417.121 li
457.197 424.951 li
cp
f
444.694 424.951 mo
436.864 424.951 li
436.864 417.121 li
444.694 417.121 li
444.694 424.951 li
cp
f
432.19 424.951 mo
424.361 424.951 li
424.361 417.121 li
432.19 417.121 li
432.19 424.951 li
cp
f
657.253 437.455 mo
649.422 437.455 li
649.422 429.624 li
657.253 429.624 li
657.253 437.455 li
cp
f
644.75 437.455 mo
636.919 437.455 li
636.919 429.624 li
644.75 429.624 li
644.75 437.455 li
cp
f
632.247 437.455 mo
624.415 437.455 li
624.415 429.624 li
632.247 429.624 li
632.247 437.455 li
cp
f
619.744 437.455 mo
611.913 437.455 li
611.913 429.624 li
619.744 429.624 li
619.744 437.455 li
cp
f
607.239 437.455 mo
599.409 437.455 li
599.409 429.624 li
607.239 429.624 li
607.239 437.455 li
cp
f
594.736 437.455 mo
586.905 437.455 li
586.905 429.624 li
594.736 429.624 li
594.736 437.455 li
cp
f
582.232 437.455 mo
574.402 437.455 li
574.402 429.624 li
582.232 429.624 li
582.232 437.455 li
cp
f
569.729 437.455 mo
561.899 437.455 li
561.899 429.624 li
569.729 429.624 li
569.729 437.455 li
cp
f
557.226 437.455 mo
549.395 437.455 li
549.395 429.624 li
557.226 429.624 li
557.226 437.455 li
cp
f
544.723 437.455 mo
536.892 437.455 li
536.892 429.624 li
544.723 429.624 li
544.723 437.455 li
cp
f
532.219 437.455 mo
524.389 437.455 li
524.389 429.624 li
532.219 429.624 li
532.219 437.455 li
cp
f
519.715 437.455 mo
511.885 437.455 li
511.885 429.624 li
519.715 429.624 li
519.715 437.455 li
cp
f
507.212 437.455 mo
499.382 437.455 li
499.382 429.624 li
507.212 429.624 li
507.212 437.455 li
cp
f
494.708 437.455 mo
486.878 437.455 li
486.878 429.624 li
494.708 429.624 li
494.708 437.455 li
cp
f
482.205 437.455 mo
474.375 437.455 li
474.375 429.624 li
482.205 429.624 li
482.205 437.455 li
cp
f
469.702 437.455 mo
461.871 437.455 li
461.871 429.624 li
469.702 429.624 li
469.702 437.455 li
cp
f
457.197 437.455 mo
449.367 437.455 li
449.367 429.624 li
457.197 429.624 li
457.197 437.455 li
cp
f
444.694 437.455 mo
436.864 437.455 li
436.864 429.624 li
444.694 429.624 li
444.694 437.455 li
cp
f
432.19 437.455 mo
424.361 437.455 li
424.361 429.624 li
432.19 429.624 li
432.19 437.455 li
cp
f
694.764 449.958 mo
686.934 449.958 li
686.934 442.127 li
694.764 442.127 li
694.764 449.958 li
cp
f
682.261 449.958 mo
674.43 449.958 li
674.43 442.127 li
682.261 442.127 li
682.261 449.958 li
cp
f
669.757 449.958 mo
661.927 449.958 li
661.927 442.127 li
669.757 442.127 li
669.757 449.958 li
cp
f
657.253 449.958 mo
649.422 449.958 li
649.422 442.127 li
657.253 442.127 li
657.253 449.958 li
cp
f
644.75 449.958 mo
636.919 449.958 li
636.919 442.127 li
644.75 442.127 li
644.75 449.958 li
cp
f
632.247 449.958 mo
624.415 449.958 li
624.415 442.127 li
632.247 442.127 li
632.247 449.958 li
cp
f
619.744 449.958 mo
611.913 449.958 li
611.913 442.127 li
619.744 442.127 li
619.744 449.958 li
cp
f
607.239 449.958 mo
599.409 449.958 li
599.409 442.127 li
607.239 442.127 li
607.239 449.958 li
cp
f
594.736 449.958 mo
586.905 449.958 li
586.905 442.127 li
594.736 442.127 li
594.736 449.958 li
cp
f
582.232 449.958 mo
574.402 449.958 li
574.402 442.127 li
582.232 442.127 li
582.232 449.958 li
cp
f
569.729 449.958 mo
561.899 449.958 li
561.899 442.127 li
569.729 442.127 li
569.729 449.958 li
cp
f
557.226 449.958 mo
549.395 449.958 li
549.395 442.127 li
557.226 442.127 li
557.226 449.958 li
cp
f
544.723 449.958 mo
536.892 449.958 li
536.892 442.127 li
544.723 442.127 li
544.723 449.958 li
cp
f
532.219 449.958 mo
524.389 449.958 li
524.389 442.127 li
532.219 442.127 li
532.219 449.958 li
cp
f
519.715 449.958 mo
511.885 449.958 li
511.885 442.127 li
519.715 442.127 li
519.715 449.958 li
cp
f
507.212 449.958 mo
499.382 449.958 li
499.382 442.127 li
507.212 442.127 li
507.212 449.958 li
cp
f
494.708 449.958 mo
486.878 449.958 li
486.878 442.127 li
494.708 442.127 li
494.708 449.958 li
cp
f
482.205 449.958 mo
474.375 449.958 li
474.375 442.127 li
482.205 442.127 li
482.205 449.958 li
cp
f
469.702 449.958 mo
461.871 449.958 li
461.871 442.127 li
469.702 442.127 li
469.702 449.958 li
cp
f
457.197 449.958 mo
449.367 449.958 li
449.367 442.127 li
457.197 442.127 li
457.197 449.958 li
cp
f
444.694 449.958 mo
436.864 449.958 li
436.864 442.127 li
444.694 442.127 li
444.694 449.958 li
cp
f
432.19 449.958 mo
424.361 449.958 li
424.361 442.127 li
432.19 442.127 li
432.19 449.958 li
cp
f
419.688 449.958 mo
411.857 449.958 li
411.857 442.127 li
419.688 442.127 li
419.688 449.958 li
cp
f
744.778 462.461 mo
736.947 462.461 li
736.947 454.63 li
744.778 454.63 li
744.778 462.461 li
cp
f
732.273 462.461 mo
724.444 462.461 li
724.444 454.63 li
732.273 454.63 li
732.273 462.461 li
cp
f
719.771 462.461 mo
711.94 462.461 li
711.94 454.63 li
719.771 454.63 li
719.771 462.461 li
cp
f
707.267 462.461 mo
699.438 462.461 li
699.438 454.63 li
707.267 454.63 li
707.267 462.461 li
cp
f
694.764 462.461 mo
686.934 462.461 li
686.934 454.63 li
694.764 454.63 li
694.764 462.461 li
cp
f
682.261 462.461 mo
674.43 462.461 li
674.43 454.63 li
682.261 454.63 li
682.261 462.461 li
cp
f
669.757 462.461 mo
661.927 462.461 li
661.927 454.63 li
669.757 454.63 li
669.757 462.461 li
cp
f
657.253 462.461 mo
649.422 462.461 li
649.422 454.63 li
657.253 454.63 li
657.253 462.461 li
cp
f
644.75 462.461 mo
636.919 462.461 li
636.919 454.63 li
644.75 454.63 li
644.75 462.461 li
cp
f
632.247 462.461 mo
624.415 462.461 li
624.415 454.63 li
632.247 454.63 li
632.247 462.461 li
cp
f
619.744 462.461 mo
611.913 462.461 li
611.913 454.63 li
619.744 454.63 li
619.744 462.461 li
cp
f
607.239 462.461 mo
599.409 462.461 li
599.409 454.63 li
607.239 454.63 li
607.239 462.461 li
cp
f
594.736 462.461 mo
586.905 462.461 li
586.905 454.63 li
594.736 454.63 li
594.736 462.461 li
cp
f
582.232 462.461 mo
574.402 462.461 li
574.402 454.63 li
582.232 454.63 li
582.232 462.461 li
cp
f
569.729 462.461 mo
561.899 462.461 li
561.899 454.63 li
569.729 454.63 li
569.729 462.461 li
cp
f
557.226 462.461 mo
549.395 462.461 li
549.395 454.63 li
557.226 454.63 li
557.226 462.461 li
cp
f
544.723 462.461 mo
536.892 462.461 li
536.892 454.63 li
544.723 454.63 li
544.723 462.461 li
cp
f
532.219 462.461 mo
524.389 462.461 li
524.389 454.63 li
532.219 454.63 li
532.219 462.461 li
cp
f
519.715 462.461 mo
511.885 462.461 li
511.885 454.63 li
519.715 454.63 li
519.715 462.461 li
cp
f
507.212 462.461 mo
499.382 462.461 li
499.382 454.63 li
507.212 454.63 li
507.212 462.461 li
cp
f
494.708 462.461 mo
486.878 462.461 li
486.878 454.63 li
494.708 454.63 li
494.708 462.461 li
cp
f
482.205 462.461 mo
474.375 462.461 li
474.375 454.63 li
482.205 454.63 li
482.205 462.461 li
cp
f
469.702 462.461 mo
461.871 462.461 li
461.871 454.63 li
469.702 454.63 li
469.702 462.461 li
cp
f
457.197 462.461 mo
449.367 462.461 li
449.367 454.63 li
457.197 454.63 li
457.197 462.461 li
cp
f
444.694 462.461 mo
436.864 462.461 li
436.864 454.63 li
444.694 454.63 li
444.694 462.461 li
cp
f
432.19 462.461 mo
424.361 462.461 li
424.361 454.63 li
432.19 454.63 li
432.19 462.461 li
cp
f
744.778 474.965 mo
736.947 474.965 li
736.947 467.134 li
744.778 467.134 li
744.778 474.965 li
cp
f
732.273 474.965 mo
724.444 474.965 li
724.444 467.134 li
732.273 467.134 li
732.273 474.965 li
cp
f
719.771 474.965 mo
711.94 474.965 li
711.94 467.134 li
719.771 467.134 li
719.771 474.965 li
cp
f
707.267 474.965 mo
699.438 474.965 li
699.438 467.134 li
707.267 467.134 li
707.267 474.965 li
cp
f
694.764 474.965 mo
686.934 474.965 li
686.934 467.134 li
694.764 467.134 li
694.764 474.965 li
cp
f
682.261 474.965 mo
674.43 474.965 li
674.43 467.134 li
682.261 467.134 li
682.261 474.965 li
cp
f
669.757 474.965 mo
661.927 474.965 li
661.927 467.134 li
669.757 467.134 li
669.757 474.965 li
cp
f
657.253 474.965 mo
649.422 474.965 li
649.422 467.134 li
657.253 467.134 li
657.253 474.965 li
cp
f
644.75 474.965 mo
636.919 474.965 li
636.919 467.134 li
644.75 467.134 li
644.75 474.965 li
cp
f
632.247 474.965 mo
624.415 474.965 li
624.415 467.134 li
632.247 467.134 li
632.247 474.965 li
cp
f
619.744 474.965 mo
611.913 474.965 li
611.913 467.134 li
619.744 467.134 li
619.744 474.965 li
cp
f
607.239 474.965 mo
599.409 474.965 li
599.409 467.134 li
607.239 467.134 li
607.239 474.965 li
cp
f
594.736 474.965 mo
586.905 474.965 li
586.905 467.134 li
594.736 467.134 li
594.736 474.965 li
cp
f
582.232 474.965 mo
574.402 474.965 li
574.402 467.134 li
582.232 467.134 li
582.232 474.965 li
cp
f
569.729 474.965 mo
561.899 474.965 li
561.899 467.134 li
569.729 467.134 li
569.729 474.965 li
cp
f
557.226 474.965 mo
549.395 474.965 li
549.395 467.134 li
557.226 467.134 li
557.226 474.965 li
cp
f
544.723 474.965 mo
536.892 474.965 li
536.892 467.134 li
544.723 467.134 li
544.723 474.965 li
cp
f
532.219 474.965 mo
524.389 474.965 li
524.389 467.134 li
532.219 467.134 li
532.219 474.965 li
cp
f
519.715 474.965 mo
511.885 474.965 li
511.885 467.134 li
519.715 467.134 li
519.715 474.965 li
cp
f
507.212 474.965 mo
499.382 474.965 li
499.382 467.134 li
507.212 467.134 li
507.212 474.965 li
cp
f
494.708 474.965 mo
486.878 474.965 li
486.878 467.134 li
494.708 467.134 li
494.708 474.965 li
cp
f
482.205 474.965 mo
474.375 474.965 li
474.375 467.134 li
482.205 467.134 li
482.205 474.965 li
cp
f
469.702 474.965 mo
461.871 474.965 li
461.871 467.134 li
469.702 467.134 li
469.702 474.965 li
cp
f
457.197 474.965 mo
449.367 474.965 li
449.367 467.134 li
457.197 467.134 li
457.197 474.965 li
cp
f
444.694 474.965 mo
436.864 474.965 li
436.864 467.134 li
444.694 467.134 li
444.694 474.965 li
cp
f
744.778 487.469 mo
736.947 487.469 li
736.947 479.638 li
744.778 479.638 li
744.778 487.469 li
cp
f
732.273 487.469 mo
724.444 487.469 li
724.444 479.638 li
732.273 479.638 li
732.273 487.469 li
cp
f
719.771 487.469 mo
711.94 487.469 li
711.94 479.638 li
719.771 479.638 li
719.771 487.469 li
cp
f
707.267 487.469 mo
699.438 487.469 li
699.438 479.638 li
707.267 479.638 li
707.267 487.469 li
cp
f
694.764 487.469 mo
686.934 487.469 li
686.934 479.638 li
694.764 479.638 li
694.764 487.469 li
cp
f
682.261 487.469 mo
674.43 487.469 li
674.43 479.638 li
682.261 479.638 li
682.261 487.469 li
cp
f
669.757 487.469 mo
661.927 487.469 li
661.927 479.638 li
669.757 479.638 li
669.757 487.469 li
cp
f
657.253 487.469 mo
649.422 487.469 li
649.422 479.638 li
657.253 479.638 li
657.253 487.469 li
cp
f
644.75 487.469 mo
636.919 487.469 li
636.919 479.638 li
644.75 479.638 li
644.75 487.469 li
cp
f
632.247 487.469 mo
624.415 487.469 li
624.415 479.638 li
632.247 479.638 li
632.247 487.469 li
cp
f
619.744 487.469 mo
611.913 487.469 li
611.913 479.638 li
619.744 479.638 li
619.744 487.469 li
cp
f
607.239 487.469 mo
599.409 487.469 li
599.409 479.638 li
607.239 479.638 li
607.239 487.469 li
cp
f
594.736 487.469 mo
586.905 487.469 li
586.905 479.638 li
594.736 479.638 li
594.736 487.469 li
cp
f
582.232 487.469 mo
574.402 487.469 li
574.402 479.638 li
582.232 479.638 li
582.232 487.469 li
cp
f
569.729 487.469 mo
561.899 487.469 li
561.899 479.638 li
569.729 479.638 li
569.729 487.469 li
cp
f
557.226 487.469 mo
549.395 487.469 li
549.395 479.638 li
557.226 479.638 li
557.226 487.469 li
cp
f
544.723 487.469 mo
536.892 487.469 li
536.892 479.638 li
544.723 479.638 li
544.723 487.469 li
cp
f
532.219 487.469 mo
524.389 487.469 li
524.389 479.638 li
532.219 479.638 li
532.219 487.469 li
cp
f
519.715 487.469 mo
511.885 487.469 li
511.885 479.638 li
519.715 479.638 li
519.715 487.469 li
cp
f
507.212 487.469 mo
499.382 487.469 li
499.382 479.638 li
507.212 479.638 li
507.212 487.469 li
cp
f
494.708 487.469 mo
486.878 487.469 li
486.878 479.638 li
494.708 479.638 li
494.708 487.469 li
cp
f
482.205 487.469 mo
474.375 487.469 li
474.375 479.638 li
482.205 479.638 li
482.205 487.469 li
cp
f
469.702 487.469 mo
461.871 487.469 li
461.871 479.638 li
469.702 479.638 li
469.702 487.469 li
cp
f
457.197 487.469 mo
449.367 487.469 li
449.367 479.638 li
457.197 479.638 li
457.197 487.469 li
cp
f
444.694 487.469 mo
436.864 487.469 li
436.864 479.638 li
444.694 479.638 li
444.694 487.469 li
cp
f
432.19 487.469 mo
424.361 487.469 li
424.361 479.638 li
432.19 479.638 li
432.19 487.469 li
cp
f
744.778 499.972 mo
736.947 499.972 li
736.947 492.141 li
744.778 492.141 li
744.778 499.972 li
cp
f
732.273 499.972 mo
724.444 499.972 li
724.444 492.141 li
732.273 492.141 li
732.273 499.972 li
cp
f
719.771 499.972 mo
711.94 499.972 li
711.94 492.141 li
719.771 492.141 li
719.771 499.972 li
cp
f
707.267 499.972 mo
699.438 499.972 li
699.438 492.141 li
707.267 492.141 li
707.267 499.972 li
cp
f
694.764 499.972 mo
686.934 499.972 li
686.934 492.141 li
694.764 492.141 li
694.764 499.972 li
cp
f
682.261 499.972 mo
674.43 499.972 li
674.43 492.141 li
682.261 492.141 li
682.261 499.972 li
cp
f
669.757 499.972 mo
661.927 499.972 li
661.927 492.141 li
669.757 492.141 li
669.757 499.972 li
cp
f
657.253 499.972 mo
649.422 499.972 li
649.422 492.141 li
657.253 492.141 li
657.253 499.972 li
cp
f
644.75 499.972 mo
636.919 499.972 li
636.919 492.141 li
644.75 492.141 li
644.75 499.972 li
cp
f
632.247 499.972 mo
624.415 499.972 li
624.415 492.141 li
632.247 492.141 li
632.247 499.972 li
cp
f
619.744 499.972 mo
611.913 499.972 li
611.913 492.141 li
619.744 492.141 li
619.744 499.972 li
cp
f
607.239 499.972 mo
599.409 499.972 li
599.409 492.141 li
607.239 492.141 li
607.239 499.972 li
cp
f
594.736 499.972 mo
586.905 499.972 li
586.905 492.141 li
594.736 492.141 li
594.736 499.972 li
cp
f
582.232 499.972 mo
574.402 499.972 li
574.402 492.141 li
582.232 492.141 li
582.232 499.972 li
cp
f
569.729 499.972 mo
561.899 499.972 li
561.899 492.141 li
569.729 492.141 li
569.729 499.972 li
cp
f
557.226 499.972 mo
549.395 499.972 li
549.395 492.141 li
557.226 492.141 li
557.226 499.972 li
cp
f
544.723 499.972 mo
536.892 499.972 li
536.892 492.141 li
544.723 492.141 li
544.723 499.972 li
cp
f
532.219 499.972 mo
524.389 499.972 li
524.389 492.141 li
532.219 492.141 li
532.219 499.972 li
cp
f
519.715 499.972 mo
511.885 499.972 li
511.885 492.141 li
519.715 492.141 li
519.715 499.972 li
cp
f
507.212 499.972 mo
499.382 499.972 li
499.382 492.141 li
507.212 492.141 li
507.212 499.972 li
cp
f
494.708 499.972 mo
486.878 499.972 li
486.878 492.141 li
494.708 492.141 li
494.708 499.972 li
cp
f
482.205 499.972 mo
474.375 499.972 li
474.375 492.141 li
482.205 492.141 li
482.205 499.972 li
cp
f
469.702 499.972 mo
461.871 499.972 li
461.871 492.141 li
469.702 492.141 li
469.702 499.972 li
cp
f
457.197 499.972 mo
449.367 499.972 li
449.367 492.141 li
457.197 492.141 li
457.197 499.972 li
cp
f
444.694 499.972 mo
436.864 499.972 li
436.864 492.141 li
444.694 492.141 li
444.694 499.972 li
cp
f
744.778 512.476 mo
736.947 512.476 li
736.947 504.645 li
744.778 504.645 li
744.778 512.476 li
cp
f
732.273 512.476 mo
724.444 512.476 li
724.444 504.645 li
732.273 504.645 li
732.273 512.476 li
cp
f
719.771 512.476 mo
711.94 512.476 li
711.94 504.645 li
719.771 504.645 li
719.771 512.476 li
cp
f
707.267 512.476 mo
699.438 512.476 li
699.438 504.645 li
707.267 504.645 li
707.267 512.476 li
cp
f
694.764 512.476 mo
686.934 512.476 li
686.934 504.645 li
694.764 504.645 li
694.764 512.476 li
cp
f
682.261 512.476 mo
674.43 512.476 li
674.43 504.645 li
682.261 504.645 li
682.261 512.476 li
cp
f
669.757 512.476 mo
661.927 512.476 li
661.927 504.645 li
669.757 504.645 li
669.757 512.476 li
cp
f
657.253 512.476 mo
649.422 512.476 li
649.422 504.645 li
657.253 504.645 li
657.253 512.476 li
cp
f
644.75 512.476 mo
636.919 512.476 li
636.919 504.645 li
644.75 504.645 li
644.75 512.476 li
cp
f
632.247 512.476 mo
624.415 512.476 li
624.415 504.645 li
632.247 504.645 li
632.247 512.476 li
cp
f
619.744 512.476 mo
611.913 512.476 li
611.913 504.645 li
619.744 504.645 li
619.744 512.476 li
cp
f
607.239 512.476 mo
599.409 512.476 li
599.409 504.645 li
607.239 504.645 li
607.239 512.476 li
cp
f
594.736 512.476 mo
586.905 512.476 li
586.905 504.645 li
594.736 504.645 li
594.736 512.476 li
cp
f
582.232 512.476 mo
574.402 512.476 li
574.402 504.645 li
582.232 504.645 li
582.232 512.476 li
cp
f
569.729 512.476 mo
561.899 512.476 li
561.899 504.645 li
569.729 504.645 li
569.729 512.476 li
cp
f
557.226 512.476 mo
549.395 512.476 li
549.395 504.645 li
557.226 504.645 li
557.226 512.476 li
cp
f
544.723 512.476 mo
536.892 512.476 li
536.892 504.645 li
544.723 504.645 li
544.723 512.476 li
cp
f
532.219 512.476 mo
524.389 512.476 li
524.389 504.645 li
532.219 504.645 li
532.219 512.476 li
cp
f
519.715 512.476 mo
511.885 512.476 li
511.885 504.645 li
519.715 504.645 li
519.715 512.476 li
cp
f
507.212 512.476 mo
499.382 512.476 li
499.382 504.645 li
507.212 504.645 li
507.212 512.476 li
cp
f
494.708 512.476 mo
486.878 512.476 li
486.878 504.645 li
494.708 504.645 li
494.708 512.476 li
cp
f
482.205 512.476 mo
474.375 512.476 li
474.375 504.645 li
482.205 504.645 li
482.205 512.476 li
cp
f
469.702 512.476 mo
461.871 512.476 li
461.871 504.645 li
469.702 504.645 li
469.702 512.476 li
cp
f
457.197 512.476 mo
449.367 512.476 li
449.367 504.645 li
457.197 504.645 li
457.197 512.476 li
cp
f
444.694 512.476 mo
436.864 512.476 li
436.864 504.645 li
444.694 504.645 li
444.694 512.476 li
cp
f
744.778 524.979 mo
736.947 524.979 li
736.947 517.148 li
744.778 517.148 li
744.778 524.979 li
cp
f
732.273 524.979 mo
724.444 524.979 li
724.444 517.148 li
732.273 517.148 li
732.273 524.979 li
cp
f
719.771 524.979 mo
711.94 524.979 li
711.94 517.148 li
719.771 517.148 li
719.771 524.979 li
cp
f
707.267 524.979 mo
699.438 524.979 li
699.438 517.148 li
707.267 517.148 li
707.267 524.979 li
cp
f
694.764 524.979 mo
686.934 524.979 li
686.934 517.148 li
694.764 517.148 li
694.764 524.979 li
cp
f
682.261 524.979 mo
674.43 524.979 li
674.43 517.148 li
682.261 517.148 li
682.261 524.979 li
cp
f
669.757 524.979 mo
661.927 524.979 li
661.927 517.148 li
669.757 517.148 li
669.757 524.979 li
cp
f
657.253 524.979 mo
649.422 524.979 li
649.422 517.148 li
657.253 517.148 li
657.253 524.979 li
cp
f
644.75 524.979 mo
636.919 524.979 li
636.919 517.148 li
644.75 517.148 li
644.75 524.979 li
cp
f
632.247 524.979 mo
624.415 524.979 li
624.415 517.148 li
632.247 517.148 li
632.247 524.979 li
cp
f
619.744 524.979 mo
611.913 524.979 li
611.913 517.148 li
619.744 517.148 li
619.744 524.979 li
cp
f
607.239 524.979 mo
599.409 524.979 li
599.409 517.148 li
607.239 517.148 li
607.239 524.979 li
cp
f
594.736 524.979 mo
586.905 524.979 li
586.905 517.148 li
594.736 517.148 li
594.736 524.979 li
cp
f
582.232 524.979 mo
574.402 524.979 li
574.402 517.148 li
582.232 517.148 li
582.232 524.979 li
cp
f
569.729 524.979 mo
561.899 524.979 li
561.899 517.148 li
569.729 517.148 li
569.729 524.979 li
cp
f
557.226 524.979 mo
549.395 524.979 li
549.395 517.148 li
557.226 517.148 li
557.226 524.979 li
cp
f
544.723 524.979 mo
536.892 524.979 li
536.892 517.148 li
544.723 517.148 li
544.723 524.979 li
cp
f
532.219 524.979 mo
524.389 524.979 li
524.389 517.148 li
532.219 517.148 li
532.219 524.979 li
cp
f
519.715 524.979 mo
511.885 524.979 li
511.885 517.148 li
519.715 517.148 li
519.715 524.979 li
cp
f
507.212 524.979 mo
499.382 524.979 li
499.382 517.148 li
507.212 517.148 li
507.212 524.979 li
cp
f
494.708 524.979 mo
486.878 524.979 li
486.878 517.148 li
494.708 517.148 li
494.708 524.979 li
cp
f
482.205 524.979 mo
474.375 524.979 li
474.375 517.148 li
482.205 517.148 li
482.205 524.979 li
cp
f
469.702 524.979 mo
461.871 524.979 li
461.871 517.148 li
469.702 517.148 li
469.702 524.979 li
cp
f
457.197 524.979 mo
449.367 524.979 li
449.367 517.148 li
457.197 517.148 li
457.197 524.979 li
cp
f
744.778 537.481 mo
736.947 537.481 li
736.947 529.651 li
744.778 529.651 li
744.778 537.481 li
cp
f
732.273 537.481 mo
724.444 537.481 li
724.444 529.651 li
732.273 529.651 li
732.273 537.481 li
cp
f
719.771 537.481 mo
711.94 537.481 li
711.94 529.651 li
719.771 529.651 li
719.771 537.481 li
cp
f
707.267 537.481 mo
699.438 537.481 li
699.438 529.651 li
707.267 529.651 li
707.267 537.481 li
cp
f
694.764 537.481 mo
686.934 537.481 li
686.934 529.651 li
694.764 529.651 li
694.764 537.481 li
cp
f
682.261 537.481 mo
674.43 537.481 li
674.43 529.651 li
682.261 529.651 li
682.261 537.481 li
cp
f
669.757 537.481 mo
661.927 537.481 li
661.927 529.651 li
669.757 529.651 li
669.757 537.481 li
cp
f
657.253 537.481 mo
649.422 537.481 li
649.422 529.651 li
657.253 529.651 li
657.253 537.481 li
cp
f
644.75 537.481 mo
636.919 537.481 li
636.919 529.651 li
644.75 529.651 li
644.75 537.481 li
cp
f
632.247 537.481 mo
624.415 537.481 li
624.415 529.651 li
632.247 529.651 li
632.247 537.481 li
cp
f
619.744 537.481 mo
611.913 537.481 li
611.913 529.651 li
619.744 529.651 li
619.744 537.481 li
cp
f
607.239 537.481 mo
599.409 537.481 li
599.409 529.651 li
607.239 529.651 li
607.239 537.481 li
cp
f
594.736 537.481 mo
586.905 537.481 li
586.905 529.651 li
594.736 529.651 li
594.736 537.481 li
cp
f
582.232 537.481 mo
574.402 537.481 li
574.402 529.651 li
582.232 529.651 li
582.232 537.481 li
cp
f
569.729 537.481 mo
561.899 537.481 li
561.899 529.651 li
569.729 529.651 li
569.729 537.481 li
cp
f
557.226 537.481 mo
549.395 537.481 li
549.395 529.651 li
557.226 529.651 li
557.226 537.481 li
cp
f
544.723 537.481 mo
536.892 537.481 li
536.892 529.651 li
544.723 529.651 li
544.723 537.481 li
cp
f
532.219 537.481 mo
524.389 537.481 li
524.389 529.651 li
532.219 529.651 li
532.219 537.481 li
cp
f
519.715 537.481 mo
511.885 537.481 li
511.885 529.651 li
519.715 529.651 li
519.715 537.481 li
cp
f
507.212 537.481 mo
499.382 537.481 li
499.382 529.651 li
507.212 529.651 li
507.212 537.481 li
cp
f
494.708 537.481 mo
486.878 537.481 li
486.878 529.651 li
494.708 529.651 li
494.708 537.481 li
cp
f
482.205 537.481 mo
474.375 537.481 li
474.375 529.651 li
482.205 529.651 li
482.205 537.481 li
cp
f
469.702 537.481 mo
461.871 537.481 li
461.871 529.651 li
469.702 529.651 li
469.702 537.481 li
cp
f
457.197 537.481 mo
449.367 537.481 li
449.367 529.651 li
457.197 529.651 li
457.197 537.481 li
cp
f
444.694 537.481 mo
436.864 537.481 li
436.864 529.651 li
444.694 529.651 li
444.694 537.481 li
cp
f
744.778 549.986 mo
736.947 549.986 li
736.947 542.154 li
744.778 542.154 li
744.778 549.986 li
cp
f
732.273 549.986 mo
724.444 549.986 li
724.444 542.154 li
732.273 542.154 li
732.273 549.986 li
cp
f
719.771 549.986 mo
711.94 549.986 li
711.94 542.154 li
719.771 542.154 li
719.771 549.986 li
cp
f
707.267 549.986 mo
699.438 549.986 li
699.438 542.154 li
707.267 542.154 li
707.267 549.986 li
cp
f
694.764 549.986 mo
686.934 549.986 li
686.934 542.154 li
694.764 542.154 li
694.764 549.986 li
cp
f
682.261 549.986 mo
674.43 549.986 li
674.43 542.154 li
682.261 542.154 li
682.261 549.986 li
cp
f
669.757 549.986 mo
661.927 549.986 li
661.927 542.154 li
669.757 542.154 li
669.757 549.986 li
cp
f
657.253 549.986 mo
649.422 549.986 li
649.422 542.154 li
657.253 542.154 li
657.253 549.986 li
cp
f
644.75 549.986 mo
636.919 549.986 li
636.919 542.154 li
644.75 542.154 li
644.75 549.986 li
cp
f
632.247 549.986 mo
624.415 549.986 li
624.415 542.154 li
632.247 542.154 li
632.247 549.986 li
cp
f
619.744 549.986 mo
611.913 549.986 li
611.913 542.154 li
619.744 542.154 li
619.744 549.986 li
cp
f
607.239 549.986 mo
599.409 549.986 li
599.409 542.154 li
607.239 542.154 li
607.239 549.986 li
cp
f
594.736 549.986 mo
586.905 549.986 li
586.905 542.154 li
594.736 542.154 li
594.736 549.986 li
cp
f
582.232 549.986 mo
574.402 549.986 li
574.402 542.154 li
582.232 542.154 li
582.232 549.986 li
cp
f
569.729 549.986 mo
561.899 549.986 li
561.899 542.154 li
569.729 542.154 li
569.729 549.986 li
cp
f
557.226 549.986 mo
549.395 549.986 li
549.395 542.154 li
557.226 542.154 li
557.226 549.986 li
cp
f
544.723 549.986 mo
536.892 549.986 li
536.892 542.154 li
544.723 542.154 li
544.723 549.986 li
cp
f
532.219 549.986 mo
524.389 549.986 li
524.389 542.154 li
532.219 542.154 li
532.219 549.986 li
cp
f
519.715 549.986 mo
511.885 549.986 li
511.885 542.154 li
519.715 542.154 li
519.715 549.986 li
cp
f
507.212 549.986 mo
499.382 549.986 li
499.382 542.154 li
507.212 542.154 li
507.212 549.986 li
cp
f
494.708 549.986 mo
486.878 549.986 li
486.878 542.154 li
494.708 542.154 li
494.708 549.986 li
cp
f
482.205 549.986 mo
474.375 549.986 li
474.375 542.154 li
482.205 542.154 li
482.205 549.986 li
cp
f
469.702 549.986 mo
461.871 549.986 li
461.871 542.154 li
469.702 542.154 li
469.702 549.986 li
cp
f
457.197 549.986 mo
449.367 549.986 li
449.367 542.154 li
457.197 542.154 li
457.197 549.986 li
cp
f
444.694 549.986 mo
436.864 549.986 li
436.864 542.154 li
444.694 542.154 li
444.694 549.986 li
cp
f
744.778 562.49 mo
736.947 562.49 li
736.947 554.658 li
744.778 554.658 li
744.778 562.49 li
cp
f
732.273 562.49 mo
724.444 562.49 li
724.444 554.658 li
732.273 554.658 li
732.273 562.49 li
cp
f
719.771 562.49 mo
711.94 562.49 li
711.94 554.658 li
719.771 554.658 li
719.771 562.49 li
cp
f
707.267 562.49 mo
699.438 562.49 li
699.438 554.658 li
707.267 554.658 li
707.267 562.49 li
cp
f
694.764 562.49 mo
686.934 562.49 li
686.934 554.658 li
694.764 554.658 li
694.764 562.49 li
cp
f
682.261 562.49 mo
674.43 562.49 li
674.43 554.658 li
682.261 554.658 li
682.261 562.49 li
cp
f
669.757 562.49 mo
661.927 562.49 li
661.927 554.658 li
669.757 554.658 li
669.757 562.49 li
cp
f
657.253 562.49 mo
649.422 562.49 li
649.422 554.658 li
657.253 554.658 li
657.253 562.49 li
cp
f
644.75 562.49 mo
636.919 562.49 li
636.919 554.658 li
644.75 554.658 li
644.75 562.49 li
cp
f
632.247 562.49 mo
624.415 562.49 li
624.415 554.658 li
632.247 554.658 li
632.247 562.49 li
cp
f
619.744 562.49 mo
611.913 562.49 li
611.913 554.658 li
619.744 554.658 li
619.744 562.49 li
cp
f
607.239 562.49 mo
599.409 562.49 li
599.409 554.658 li
607.239 554.658 li
607.239 562.49 li
cp
f
594.736 562.49 mo
586.905 562.49 li
586.905 554.658 li
594.736 554.658 li
594.736 562.49 li
cp
f
582.232 562.49 mo
574.402 562.49 li
574.402 554.658 li
582.232 554.658 li
582.232 562.49 li
cp
f
569.729 562.49 mo
561.899 562.49 li
561.899 554.658 li
569.729 554.658 li
569.729 562.49 li
cp
f
557.226 562.49 mo
549.395 562.49 li
549.395 554.658 li
557.226 554.658 li
557.226 562.49 li
cp
f
544.723 562.49 mo
536.892 562.49 li
536.892 554.658 li
544.723 554.658 li
544.723 562.49 li
cp
f
532.219 562.49 mo
524.389 562.49 li
524.389 554.658 li
532.219 554.658 li
532.219 562.49 li
cp
f
519.715 562.49 mo
511.885 562.49 li
511.885 554.658 li
519.715 554.658 li
519.715 562.49 li
cp
f
507.212 562.49 mo
499.382 562.49 li
499.382 554.658 li
507.212 554.658 li
507.212 562.49 li
cp
f
494.708 562.49 mo
486.878 562.49 li
486.878 554.658 li
494.708 554.658 li
494.708 562.49 li
cp
f
482.205 562.49 mo
474.375 562.49 li
474.375 554.658 li
482.205 554.658 li
482.205 562.49 li
cp
f
469.702 562.49 mo
461.871 562.49 li
461.871 554.658 li
469.702 554.658 li
469.702 562.49 li
cp
f
457.197 562.49 mo
449.367 562.49 li
449.367 554.658 li
457.197 554.658 li
457.197 562.49 li
cp
f
444.694 562.49 mo
436.864 562.49 li
436.864 554.658 li
444.694 554.658 li
444.694 562.49 li
cp
f
744.778 574.993 mo
736.947 574.993 li
736.947 567.162 li
744.778 567.162 li
744.778 574.993 li
cp
f
732.273 574.993 mo
724.444 574.993 li
724.444 567.162 li
732.273 567.162 li
732.273 574.993 li
cp
f
719.771 574.993 mo
711.94 574.993 li
711.94 567.162 li
719.771 567.162 li
719.771 574.993 li
cp
f
707.267 574.993 mo
699.438 574.993 li
699.438 567.162 li
707.267 567.162 li
707.267 574.993 li
cp
f
694.764 574.993 mo
686.934 574.993 li
686.934 567.162 li
694.764 567.162 li
694.764 574.993 li
cp
f
682.261 574.993 mo
674.43 574.993 li
674.43 567.162 li
682.261 567.162 li
682.261 574.993 li
cp
f
669.757 574.993 mo
661.927 574.993 li
661.927 567.162 li
669.757 567.162 li
669.757 574.993 li
cp
f
657.253 574.993 mo
649.422 574.993 li
649.422 567.162 li
657.253 567.162 li
657.253 574.993 li
cp
f
644.75 574.993 mo
636.919 574.993 li
636.919 567.162 li
644.75 567.162 li
644.75 574.993 li
cp
f
632.247 574.993 mo
624.415 574.993 li
624.415 567.162 li
632.247 567.162 li
632.247 574.993 li
cp
f
619.744 574.993 mo
611.913 574.993 li
611.913 567.162 li
619.744 567.162 li
619.744 574.993 li
cp
f
607.239 574.993 mo
599.409 574.993 li
599.409 567.162 li
607.239 567.162 li
607.239 574.993 li
cp
f
594.736 574.993 mo
586.905 574.993 li
586.905 567.162 li
594.736 567.162 li
594.736 574.993 li
cp
f
582.232 574.993 mo
574.402 574.993 li
574.402 567.162 li
582.232 567.162 li
582.232 574.993 li
cp
f
569.729 574.993 mo
561.899 574.993 li
561.899 567.162 li
569.729 567.162 li
569.729 574.993 li
cp
f
557.226 574.993 mo
549.395 574.993 li
549.395 567.162 li
557.226 567.162 li
557.226 574.993 li
cp
f
544.723 574.993 mo
536.892 574.993 li
536.892 567.162 li
544.723 567.162 li
544.723 574.993 li
cp
f
532.219 574.993 mo
524.389 574.993 li
524.389 567.162 li
532.219 567.162 li
532.219 574.993 li
cp
f
519.715 574.993 mo
511.885 574.993 li
511.885 567.162 li
519.715 567.162 li
519.715 574.993 li
cp
f
507.212 574.993 mo
499.382 574.993 li
499.382 567.162 li
507.212 567.162 li
507.212 574.993 li
cp
f
494.708 574.993 mo
486.878 574.993 li
486.878 567.162 li
494.708 567.162 li
494.708 574.993 li
cp
f
482.205 574.993 mo
474.375 574.993 li
474.375 567.162 li
482.205 567.162 li
482.205 574.993 li
cp
f
469.702 574.993 mo
461.871 574.993 li
461.871 567.162 li
469.702 567.162 li
469.702 574.993 li
cp
f
457.197 574.993 mo
449.367 574.993 li
449.367 567.162 li
457.197 567.162 li
457.197 574.993 li
cp
f
444.694 574.993 mo
436.864 574.993 li
436.864 567.162 li
444.694 567.162 li
444.694 574.993 li
cp
f
432.19 574.993 mo
424.361 574.993 li
424.361 567.162 li
432.19 567.162 li
432.19 574.993 li
cp
f
744.778 587.497 mo
736.947 587.497 li
736.947 579.666 li
744.778 579.666 li
744.778 587.497 li
cp
f
732.273 587.497 mo
724.444 587.497 li
724.444 579.666 li
732.273 579.666 li
732.273 587.497 li
cp
f
719.771 587.497 mo
711.94 587.497 li
711.94 579.666 li
719.771 579.666 li
719.771 587.497 li
cp
f
707.267 587.497 mo
699.438 587.497 li
699.438 579.666 li
707.267 579.666 li
707.267 587.497 li
cp
f
694.764 587.497 mo
686.934 587.497 li
686.934 579.666 li
694.764 579.666 li
694.764 587.497 li
cp
f
682.261 587.497 mo
674.43 587.497 li
674.43 579.666 li
682.261 579.666 li
682.261 587.497 li
cp
f
669.757 587.497 mo
661.927 587.497 li
661.927 579.666 li
669.757 579.666 li
669.757 587.497 li
cp
f
657.253 587.497 mo
649.422 587.497 li
649.422 579.666 li
657.253 579.666 li
657.253 587.497 li
cp
f
644.75 587.497 mo
636.919 587.497 li
636.919 579.666 li
644.75 579.666 li
644.75 587.497 li
cp
f
632.247 587.497 mo
624.415 587.497 li
624.415 579.666 li
632.247 579.666 li
632.247 587.497 li
cp
f
619.744 587.497 mo
611.913 587.497 li
611.913 579.666 li
619.744 579.666 li
619.744 587.497 li
cp
f
607.239 587.497 mo
599.409 587.497 li
599.409 579.666 li
607.239 579.666 li
607.239 587.497 li
cp
f
594.736 587.497 mo
586.905 587.497 li
586.905 579.666 li
594.736 579.666 li
594.736 587.497 li
cp
f
582.232 587.497 mo
574.402 587.497 li
574.402 579.666 li
582.232 579.666 li
582.232 587.497 li
cp
f
569.729 587.497 mo
561.899 587.497 li
561.899 579.666 li
569.729 579.666 li
569.729 587.497 li
cp
f
557.226 587.497 mo
549.395 587.497 li
549.395 579.666 li
557.226 579.666 li
557.226 587.497 li
cp
f
544.723 587.497 mo
536.892 587.497 li
536.892 579.666 li
544.723 579.666 li
544.723 587.497 li
cp
f
532.219 587.497 mo
524.389 587.497 li
524.389 579.666 li
532.219 579.666 li
532.219 587.497 li
cp
f
519.715 587.497 mo
511.885 587.497 li
511.885 579.666 li
519.715 579.666 li
519.715 587.497 li
cp
f
507.212 587.497 mo
499.382 587.497 li
499.382 579.666 li
507.212 579.666 li
507.212 587.497 li
cp
f
494.708 587.497 mo
486.878 587.497 li
486.878 579.666 li
494.708 579.666 li
494.708 587.497 li
cp
f
482.205 587.497 mo
474.375 587.497 li
474.375 579.666 li
482.205 579.666 li
482.205 587.497 li
cp
f
469.702 587.497 mo
461.871 587.497 li
461.871 579.666 li
469.702 579.666 li
469.702 587.497 li
cp
f
457.197 587.497 mo
449.367 587.497 li
449.367 579.666 li
457.197 579.666 li
457.197 587.497 li
cp
f
444.694 587.497 mo
436.864 587.497 li
436.864 579.666 li
444.694 579.666 li
444.694 587.497 li
cp
f
432.19 587.497 mo
424.361 587.497 li
424.361 579.666 li
432.19 579.666 li
432.19 587.497 li
cp
f
744.778 600 mo
736.947 600 li
736.947 592.169 li
744.778 592.169 li
744.778 600 li
cp
f
732.273 600 mo
724.444 600 li
724.444 592.169 li
732.273 592.169 li
732.273 600 li
cp
f
719.771 600 mo
711.94 600 li
711.94 592.169 li
719.771 592.169 li
719.771 600 li
cp
f
707.267 600 mo
699.438 600 li
699.438 592.169 li
707.267 592.169 li
707.267 600 li
cp
f
694.764 600 mo
686.934 600 li
686.934 592.169 li
694.764 592.169 li
694.764 600 li
cp
f
682.261 600 mo
674.43 600 li
674.43 592.169 li
682.261 592.169 li
682.261 600 li
cp
f
669.757 600 mo
661.927 600 li
661.927 592.169 li
669.757 592.169 li
669.757 600 li
cp
f
657.253 600 mo
649.422 600 li
649.422 592.169 li
657.253 592.169 li
657.253 600 li
cp
f
644.75 600 mo
636.919 600 li
636.919 592.169 li
644.75 592.169 li
644.75 600 li
cp
f
632.247 600 mo
624.415 600 li
624.415 592.169 li
632.247 592.169 li
632.247 600 li
cp
f
619.744 600 mo
611.913 600 li
611.913 592.169 li
619.744 592.169 li
619.744 600 li
cp
f
607.239 600 mo
599.409 600 li
599.409 592.169 li
607.239 592.169 li
607.239 600 li
cp
f
594.736 600 mo
586.905 600 li
586.905 592.169 li
594.736 592.169 li
594.736 600 li
cp
f
582.232 600 mo
574.402 600 li
574.402 592.169 li
582.232 592.169 li
582.232 600 li
cp
f
569.729 600 mo
561.899 600 li
561.899 592.169 li
569.729 592.169 li
569.729 600 li
cp
f
557.226 600 mo
549.395 600 li
549.395 592.169 li
557.226 592.169 li
557.226 600 li
cp
f
544.723 600 mo
536.892 600 li
536.892 592.169 li
544.723 592.169 li
544.723 600 li
cp
f
532.219 600 mo
524.389 600 li
524.389 592.169 li
532.219 592.169 li
532.219 600 li
cp
f
519.715 600 mo
511.885 600 li
511.885 592.169 li
519.715 592.169 li
519.715 600 li
cp
f
507.212 600 mo
499.382 600 li
499.382 592.169 li
507.212 592.169 li
507.212 600 li
cp
f
494.708 600 mo
486.878 600 li
486.878 592.169 li
494.708 592.169 li
494.708 600 li
cp
f
482.205 600 mo
474.375 600 li
474.375 592.169 li
482.205 592.169 li
482.205 600 li
cp
f
469.702 600 mo
461.871 600 li
461.871 592.169 li
469.702 592.169 li
469.702 600 li
cp
f
457.197 600 mo
449.367 600 li
449.367 592.169 li
457.197 592.169 li
457.197 600 li
cp
f
444.694 600 mo
436.864 600 li
436.864 592.169 li
444.694 592.169 li
444.694 600 li
cp
f
432.19 600 mo
424.361 600 li
424.361 592.169 li
432.19 592.169 li
432.19 600 li
cp
f
744.778 612.504 mo
736.947 612.504 li
736.947 604.673 li
744.778 604.673 li
744.778 612.504 li
cp
f
732.273 612.504 mo
724.444 612.504 li
724.444 604.673 li
732.273 604.673 li
732.273 612.504 li
cp
f
719.771 612.504 mo
711.94 612.504 li
711.94 604.673 li
719.771 604.673 li
719.771 612.504 li
cp
f
707.267 612.504 mo
699.438 612.504 li
699.438 604.673 li
707.267 604.673 li
707.267 612.504 li
cp
f
694.764 612.504 mo
686.934 612.504 li
686.934 604.673 li
694.764 604.673 li
694.764 612.504 li
cp
f
682.261 612.504 mo
674.43 612.504 li
674.43 604.673 li
682.261 604.673 li
682.261 612.504 li
cp
f
669.757 612.504 mo
661.927 612.504 li
661.927 604.673 li
669.757 604.673 li
669.757 612.504 li
cp
f
657.253 612.504 mo
649.422 612.504 li
649.422 604.673 li
657.253 604.673 li
657.253 612.504 li
cp
f
644.75 612.504 mo
636.919 612.504 li
636.919 604.673 li
644.75 604.673 li
644.75 612.504 li
cp
f
632.247 612.504 mo
624.415 612.504 li
624.415 604.673 li
632.247 604.673 li
632.247 612.504 li
cp
f
619.744 612.504 mo
611.913 612.504 li
611.913 604.673 li
619.744 604.673 li
619.744 612.504 li
cp
f
607.239 612.504 mo
599.409 612.504 li
599.409 604.673 li
607.239 604.673 li
607.239 612.504 li
cp
f
594.736 612.504 mo
586.905 612.504 li
586.905 604.673 li
594.736 604.673 li
594.736 612.504 li
cp
f
582.232 612.504 mo
574.402 612.504 li
574.402 604.673 li
582.232 604.673 li
582.232 612.504 li
cp
f
569.729 612.504 mo
561.899 612.504 li
561.899 604.673 li
569.729 604.673 li
569.729 612.504 li
cp
f
557.226 612.504 mo
549.395 612.504 li
549.395 604.673 li
557.226 604.673 li
557.226 612.504 li
cp
f
544.723 612.504 mo
536.892 612.504 li
536.892 604.673 li
544.723 604.673 li
544.723 612.504 li
cp
f
532.219 612.504 mo
524.389 612.504 li
524.389 604.673 li
532.219 604.673 li
532.219 612.504 li
cp
f
519.715 612.504 mo
511.885 612.504 li
511.885 604.673 li
519.715 604.673 li
519.715 612.504 li
cp
f
507.212 612.504 mo
499.382 612.504 li
499.382 604.673 li
507.212 604.673 li
507.212 612.504 li
cp
f
494.708 612.504 mo
486.878 612.504 li
486.878 604.673 li
494.708 604.673 li
494.708 612.504 li
cp
f
482.205 612.504 mo
474.375 612.504 li
474.375 604.673 li
482.205 604.673 li
482.205 612.504 li
cp
f
469.702 612.504 mo
461.871 612.504 li
461.871 604.673 li
469.702 604.673 li
469.702 612.504 li
cp
f
457.197 612.504 mo
449.367 612.504 li
449.367 604.673 li
457.197 604.673 li
457.197 612.504 li
cp
f
444.694 612.504 mo
436.864 612.504 li
436.864 604.673 li
444.694 604.673 li
444.694 612.504 li
cp
f
432.19 612.504 mo
424.361 612.504 li
424.361 604.673 li
432.19 604.673 li
432.19 612.504 li
cp
f
744.778 625.008 mo
736.947 625.008 li
736.947 617.175 li
744.778 617.175 li
744.778 625.008 li
cp
f
732.273 625.008 mo
724.444 625.008 li
724.444 617.175 li
732.273 617.175 li
732.273 625.008 li
cp
f
719.771 625.008 mo
711.94 625.008 li
711.94 617.175 li
719.771 617.175 li
719.771 625.008 li
cp
f
707.267 625.008 mo
699.438 625.008 li
699.438 617.175 li
707.267 617.175 li
707.267 625.008 li
cp
f
694.764 625.008 mo
686.934 625.008 li
686.934 617.175 li
694.764 617.175 li
694.764 625.008 li
cp
f
682.261 625.008 mo
674.43 625.008 li
674.43 617.175 li
682.261 617.175 li
682.261 625.008 li
cp
f
669.757 625.008 mo
661.927 625.008 li
661.927 617.175 li
669.757 617.175 li
669.757 625.008 li
cp
f
657.253 625.008 mo
649.422 625.008 li
649.422 617.175 li
657.253 617.175 li
657.253 625.008 li
cp
f
644.75 625.008 mo
636.919 625.008 li
636.919 617.175 li
644.75 617.175 li
644.75 625.008 li
cp
f
632.247 625.008 mo
624.415 625.008 li
624.415 617.175 li
632.247 617.175 li
632.247 625.008 li
cp
f
619.744 625.008 mo
611.913 625.008 li
611.913 617.175 li
619.744 617.175 li
619.744 625.008 li
cp
f
607.239 625.008 mo
599.409 625.008 li
599.409 617.175 li
607.239 617.175 li
607.239 625.008 li
cp
f
594.736 625.008 mo
586.905 625.008 li
586.905 617.175 li
594.736 617.175 li
594.736 625.008 li
cp
f
582.232 625.008 mo
574.402 625.008 li
574.402 617.175 li
582.232 617.175 li
582.232 625.008 li
cp
f
569.729 625.008 mo
561.899 625.008 li
561.899 617.175 li
569.729 617.175 li
569.729 625.008 li
cp
f
557.226 625.008 mo
549.395 625.008 li
549.395 617.175 li
557.226 617.175 li
557.226 625.008 li
cp
f
544.723 625.008 mo
536.892 625.008 li
536.892 617.175 li
544.723 617.175 li
544.723 625.008 li
cp
f
532.219 625.008 mo
524.389 625.008 li
524.389 617.175 li
532.219 617.175 li
532.219 625.008 li
cp
f
519.715 625.008 mo
511.885 625.008 li
511.885 617.175 li
519.715 617.175 li
519.715 625.008 li
cp
f
507.212 625.008 mo
499.382 625.008 li
499.382 617.175 li
507.212 617.175 li
507.212 625.008 li
cp
f
494.708 625.008 mo
486.878 625.008 li
486.878 617.175 li
494.708 617.175 li
494.708 625.008 li
cp
f
482.205 625.008 mo
474.375 625.008 li
474.375 617.175 li
482.205 617.175 li
482.205 625.008 li
cp
f
469.702 625.008 mo
461.871 625.008 li
461.871 617.175 li
469.702 617.175 li
469.702 625.008 li
cp
f
457.197 625.008 mo
449.367 625.008 li
449.367 617.175 li
457.197 617.175 li
457.197 625.008 li
cp
f
444.694 625.008 mo
436.864 625.008 li
436.864 617.175 li
444.694 617.175 li
444.694 625.008 li
cp
f
432.19 625.008 mo
424.361 625.008 li
424.361 617.175 li
432.19 617.175 li
432.19 625.008 li
cp
f
744.778 637.51 mo
736.947 637.51 li
736.947 629.68 li
744.778 629.68 li
744.778 637.51 li
cp
f
732.273 637.51 mo
724.444 637.51 li
724.444 629.68 li
732.273 629.68 li
732.273 637.51 li
cp
f
719.771 637.51 mo
711.94 637.51 li
711.94 629.68 li
719.771 629.68 li
719.771 637.51 li
cp
f
707.267 637.51 mo
699.438 637.51 li
699.438 629.68 li
707.267 629.68 li
707.267 637.51 li
cp
f
694.764 637.51 mo
686.934 637.51 li
686.934 629.68 li
694.764 629.68 li
694.764 637.51 li
cp
f
682.261 637.51 mo
674.43 637.51 li
674.43 629.68 li
682.261 629.68 li
682.261 637.51 li
cp
f
669.757 637.51 mo
661.927 637.51 li
661.927 629.68 li
669.757 629.68 li
669.757 637.51 li
cp
f
657.253 637.51 mo
649.422 637.51 li
649.422 629.68 li
657.253 629.68 li
657.253 637.51 li
cp
f
644.75 637.51 mo
636.919 637.51 li
636.919 629.68 li
644.75 629.68 li
644.75 637.51 li
cp
f
632.247 637.51 mo
624.415 637.51 li
624.415 629.68 li
632.247 629.68 li
632.247 637.51 li
cp
f
619.744 637.51 mo
611.913 637.51 li
611.913 629.68 li
619.744 629.68 li
619.744 637.51 li
cp
f
607.239 637.51 mo
599.409 637.51 li
599.409 629.68 li
607.239 629.68 li
607.239 637.51 li
cp
f
594.736 637.51 mo
586.905 637.51 li
586.905 629.68 li
594.736 629.68 li
594.736 637.51 li
cp
f
582.232 637.51 mo
574.402 637.51 li
574.402 629.68 li
582.232 629.68 li
582.232 637.51 li
cp
f
569.729 637.51 mo
561.899 637.51 li
561.899 629.68 li
569.729 629.68 li
569.729 637.51 li
cp
f
557.226 637.51 mo
549.395 637.51 li
549.395 629.68 li
557.226 629.68 li
557.226 637.51 li
cp
f
544.723 637.51 mo
536.892 637.51 li
536.892 629.68 li
544.723 629.68 li
544.723 637.51 li
cp
f
532.219 637.51 mo
524.389 637.51 li
524.389 629.68 li
532.219 629.68 li
532.219 637.51 li
cp
f
519.715 637.51 mo
511.885 637.51 li
511.885 629.68 li
519.715 629.68 li
519.715 637.51 li
cp
f
507.212 637.51 mo
499.382 637.51 li
499.382 629.68 li
507.212 629.68 li
507.212 637.51 li
cp
f
494.708 637.51 mo
486.878 637.51 li
486.878 629.68 li
494.708 629.68 li
494.708 637.51 li
cp
f
482.205 637.51 mo
474.375 637.51 li
474.375 629.68 li
482.205 629.68 li
482.205 637.51 li
cp
f
469.702 637.51 mo
461.871 637.51 li
461.871 629.68 li
469.702 629.68 li
469.702 637.51 li
cp
f
457.197 637.51 mo
449.367 637.51 li
449.367 629.68 li
457.197 629.68 li
457.197 637.51 li
cp
f
444.694 637.51 mo
436.864 637.51 li
436.864 629.68 li
444.694 629.68 li
444.694 637.51 li
cp
f
432.19 637.51 mo
424.361 637.51 li
424.361 629.68 li
432.19 629.68 li
432.19 637.51 li
cp
f
744.778 650.013 mo
736.947 650.013 li
736.947 642.183 li
744.778 642.183 li
744.778 650.013 li
cp
f
732.273 650.013 mo
724.444 650.013 li
724.444 642.183 li
732.273 642.183 li
732.273 650.013 li
cp
f
719.771 650.013 mo
711.94 650.013 li
711.94 642.183 li
719.771 642.183 li
719.771 650.013 li
cp
f
707.267 650.013 mo
699.438 650.013 li
699.438 642.183 li
707.267 642.183 li
707.267 650.013 li
cp
f
694.764 650.013 mo
686.934 650.013 li
686.934 642.183 li
694.764 642.183 li
694.764 650.013 li
cp
f
682.261 650.013 mo
674.43 650.013 li
674.43 642.183 li
682.261 642.183 li
682.261 650.013 li
cp
f
669.757 650.013 mo
661.927 650.013 li
661.927 642.183 li
669.757 642.183 li
669.757 650.013 li
cp
f
657.253 650.013 mo
649.422 650.013 li
649.422 642.183 li
657.253 642.183 li
657.253 650.013 li
cp
f
644.75 650.013 mo
636.919 650.013 li
636.919 642.183 li
644.75 642.183 li
644.75 650.013 li
cp
f
632.247 650.013 mo
624.415 650.013 li
624.415 642.183 li
632.247 642.183 li
632.247 650.013 li
cp
f
619.744 650.013 mo
611.913 650.013 li
611.913 642.183 li
619.744 642.183 li
619.744 650.013 li
cp
f
607.239 650.013 mo
599.409 650.013 li
599.409 642.183 li
607.239 642.183 li
607.239 650.013 li
cp
f
594.736 650.013 mo
586.905 650.013 li
586.905 642.183 li
594.736 642.183 li
594.736 650.013 li
cp
f
582.232 650.013 mo
574.402 650.013 li
574.402 642.183 li
582.232 642.183 li
582.232 650.013 li
cp
f
569.729 650.013 mo
561.899 650.013 li
561.899 642.183 li
569.729 642.183 li
569.729 650.013 li
cp
f
557.226 650.013 mo
549.395 650.013 li
549.395 642.183 li
557.226 642.183 li
557.226 650.013 li
cp
f
544.723 650.013 mo
536.892 650.013 li
536.892 642.183 li
544.723 642.183 li
544.723 650.013 li
cp
f
532.219 650.013 mo
524.389 650.013 li
524.389 642.183 li
532.219 642.183 li
532.219 650.013 li
cp
f
519.715 650.013 mo
511.885 650.013 li
511.885 642.183 li
519.715 642.183 li
519.715 650.013 li
cp
f
507.212 650.013 mo
499.382 650.013 li
499.382 642.183 li
507.212 642.183 li
507.212 650.013 li
cp
f
494.708 650.013 mo
486.878 650.013 li
486.878 642.183 li
494.708 642.183 li
494.708 650.013 li
cp
f
482.205 650.013 mo
474.375 650.013 li
474.375 642.183 li
482.205 642.183 li
482.205 650.013 li
cp
f
469.702 650.013 mo
461.871 650.013 li
461.871 642.183 li
469.702 642.183 li
469.702 650.013 li
cp
f
457.197 650.013 mo
449.367 650.013 li
449.367 642.183 li
457.197 642.183 li
457.197 650.013 li
cp
f
444.694 650.013 mo
436.864 650.013 li
436.864 642.183 li
444.694 642.183 li
444.694 650.013 li
cp
f
432.19 650.013 mo
424.361 650.013 li
424.361 642.183 li
432.19 642.183 li
432.19 650.013 li
cp
f
744.778 662.516 mo
736.947 662.516 li
736.947 654.686 li
744.778 654.686 li
744.778 662.516 li
cp
f
732.273 662.516 mo
724.444 662.516 li
724.444 654.686 li
732.273 654.686 li
732.273 662.516 li
cp
f
719.771 662.516 mo
711.94 662.516 li
711.94 654.686 li
719.771 654.686 li
719.771 662.516 li
cp
f
707.267 662.516 mo
699.438 662.516 li
699.438 654.686 li
707.267 654.686 li
707.267 662.516 li
cp
f
694.764 662.516 mo
686.934 662.516 li
686.934 654.686 li
694.764 654.686 li
694.764 662.516 li
cp
f
682.261 662.516 mo
674.43 662.516 li
674.43 654.686 li
682.261 654.686 li
682.261 662.516 li
cp
f
669.757 662.516 mo
661.927 662.516 li
661.927 654.686 li
669.757 654.686 li
669.757 662.516 li
cp
f
657.253 662.516 mo
649.422 662.516 li
649.422 654.686 li
657.253 654.686 li
657.253 662.516 li
cp
f
644.75 662.516 mo
636.919 662.516 li
636.919 654.686 li
644.75 654.686 li
644.75 662.516 li
cp
f
632.247 662.516 mo
624.415 662.516 li
624.415 654.686 li
632.247 654.686 li
632.247 662.516 li
cp
f
619.744 662.516 mo
611.913 662.516 li
611.913 654.686 li
619.744 654.686 li
619.744 662.516 li
cp
f
607.239 662.516 mo
599.409 662.516 li
599.409 654.686 li
607.239 654.686 li
607.239 662.516 li
cp
f
594.736 662.516 mo
586.905 662.516 li
586.905 654.686 li
594.736 654.686 li
594.736 662.516 li
cp
f
582.232 662.516 mo
574.402 662.516 li
574.402 654.686 li
582.232 654.686 li
582.232 662.516 li
cp
f
569.729 662.516 mo
561.899 662.516 li
561.899 654.686 li
569.729 654.686 li
569.729 662.516 li
cp
f
557.226 662.516 mo
549.395 662.516 li
549.395 654.686 li
557.226 654.686 li
557.226 662.516 li
cp
f
544.723 662.516 mo
536.892 662.516 li
536.892 654.686 li
544.723 654.686 li
544.723 662.516 li
cp
f
532.219 662.516 mo
524.389 662.516 li
524.389 654.686 li
532.219 654.686 li
532.219 662.516 li
cp
f
519.715 662.516 mo
511.885 662.516 li
511.885 654.686 li
519.715 654.686 li
519.715 662.516 li
cp
f
507.212 662.516 mo
499.382 662.516 li
499.382 654.686 li
507.212 654.686 li
507.212 662.516 li
cp
f
494.708 662.516 mo
486.878 662.516 li
486.878 654.686 li
494.708 654.686 li
494.708 662.516 li
cp
f
482.205 662.516 mo
474.375 662.516 li
474.375 654.686 li
482.205 654.686 li
482.205 662.516 li
cp
f
469.702 662.516 mo
461.871 662.516 li
461.871 654.686 li
469.702 654.686 li
469.702 662.516 li
cp
f
457.197 662.516 mo
449.367 662.516 li
449.367 654.686 li
457.197 654.686 li
457.197 662.516 li
cp
f
444.694 662.516 mo
436.864 662.516 li
436.864 654.686 li
444.694 654.686 li
444.694 662.516 li
cp
f
744.778 675.021 mo
736.947 675.021 li
736.947 667.19 li
744.778 667.19 li
744.778 675.021 li
cp
f
732.273 675.021 mo
724.444 675.021 li
724.444 667.19 li
732.273 667.19 li
732.273 675.021 li
cp
f
719.771 675.021 mo
711.94 675.021 li
711.94 667.19 li
719.771 667.19 li
719.771 675.021 li
cp
f
707.267 675.021 mo
699.438 675.021 li
699.438 667.19 li
707.267 667.19 li
707.267 675.021 li
cp
f
694.764 675.021 mo
686.934 675.021 li
686.934 667.19 li
694.764 667.19 li
694.764 675.021 li
cp
f
682.261 675.021 mo
674.43 675.021 li
674.43 667.19 li
682.261 667.19 li
682.261 675.021 li
cp
f
669.757 675.021 mo
661.927 675.021 li
661.927 667.19 li
669.757 667.19 li
669.757 675.021 li
cp
f
657.253 675.021 mo
649.422 675.021 li
649.422 667.19 li
657.253 667.19 li
657.253 675.021 li
cp
f
644.75 675.021 mo
636.919 675.021 li
636.919 667.19 li
644.75 667.19 li
644.75 675.021 li
cp
f
632.247 675.021 mo
624.415 675.021 li
624.415 667.19 li
632.247 667.19 li
632.247 675.021 li
cp
f
619.744 675.021 mo
611.913 675.021 li
611.913 667.19 li
619.744 667.19 li
619.744 675.021 li
cp
f
607.239 675.021 mo
599.409 675.021 li
599.409 667.19 li
607.239 667.19 li
607.239 675.021 li
cp
f
594.736 675.021 mo
586.905 675.021 li
586.905 667.19 li
594.736 667.19 li
594.736 675.021 li
cp
f
582.232 675.021 mo
574.402 675.021 li
574.402 667.19 li
582.232 667.19 li
582.232 675.021 li
cp
f
569.729 675.021 mo
561.899 675.021 li
561.899 667.19 li
569.729 667.19 li
569.729 675.021 li
cp
f
557.226 675.021 mo
549.395 675.021 li
549.395 667.19 li
557.226 667.19 li
557.226 675.021 li
cp
f
544.723 675.021 mo
536.892 675.021 li
536.892 667.19 li
544.723 667.19 li
544.723 675.021 li
cp
f
532.219 675.021 mo
524.389 675.021 li
524.389 667.19 li
532.219 667.19 li
532.219 675.021 li
cp
f
519.715 675.021 mo
511.885 675.021 li
511.885 667.19 li
519.715 667.19 li
519.715 675.021 li
cp
f
507.212 675.021 mo
499.382 675.021 li
499.382 667.19 li
507.212 667.19 li
507.212 675.021 li
cp
f
494.708 675.021 mo
486.878 675.021 li
486.878 667.19 li
494.708 667.19 li
494.708 675.021 li
cp
f
482.205 675.021 mo
474.375 675.021 li
474.375 667.19 li
482.205 667.19 li
482.205 675.021 li
cp
f
469.702 675.021 mo
461.871 675.021 li
461.871 667.19 li
469.702 667.19 li
469.702 675.021 li
cp
f
457.197 675.021 mo
449.367 675.021 li
449.367 667.19 li
457.197 667.19 li
457.197 675.021 li
cp
f
444.694 675.021 mo
436.864 675.021 li
436.864 667.19 li
444.694 667.19 li
444.694 675.021 li
cp
f
744.778 687.524 mo
736.947 687.524 li
736.947 679.694 li
744.778 679.694 li
744.778 687.524 li
cp
f
732.273 687.524 mo
724.444 687.524 li
724.444 679.694 li
732.273 679.694 li
732.273 687.524 li
cp
f
719.771 687.524 mo
711.94 687.524 li
711.94 679.694 li
719.771 679.694 li
719.771 687.524 li
cp
f
707.267 687.524 mo
699.438 687.524 li
699.438 679.694 li
707.267 679.694 li
707.267 687.524 li
cp
f
694.764 687.524 mo
686.934 687.524 li
686.934 679.694 li
694.764 679.694 li
694.764 687.524 li
cp
f
682.261 687.524 mo
674.43 687.524 li
674.43 679.694 li
682.261 679.694 li
682.261 687.524 li
cp
f
669.757 687.524 mo
661.927 687.524 li
661.927 679.694 li
669.757 679.694 li
669.757 687.524 li
cp
f
657.253 687.524 mo
649.422 687.524 li
649.422 679.694 li
657.253 679.694 li
657.253 687.524 li
cp
f
644.75 687.524 mo
636.919 687.524 li
636.919 679.694 li
644.75 679.694 li
644.75 687.524 li
cp
f
632.247 687.524 mo
624.415 687.524 li
624.415 679.694 li
632.247 679.694 li
632.247 687.524 li
cp
f
619.744 687.524 mo
611.913 687.524 li
611.913 679.694 li
619.744 679.694 li
619.744 687.524 li
cp
f
607.239 687.524 mo
599.409 687.524 li
599.409 679.694 li
607.239 679.694 li
607.239 687.524 li
cp
f
594.736 687.524 mo
586.905 687.524 li
586.905 679.694 li
594.736 679.694 li
594.736 687.524 li
cp
f
582.232 687.524 mo
574.402 687.524 li
574.402 679.694 li
582.232 679.694 li
582.232 687.524 li
cp
f
569.729 687.524 mo
561.899 687.524 li
561.899 679.694 li
569.729 679.694 li
569.729 687.524 li
cp
f
557.226 687.524 mo
549.395 687.524 li
549.395 679.694 li
557.226 679.694 li
557.226 687.524 li
cp
f
544.723 687.524 mo
536.892 687.524 li
536.892 679.694 li
544.723 679.694 li
544.723 687.524 li
cp
f
532.219 687.524 mo
524.389 687.524 li
524.389 679.694 li
532.219 679.694 li
532.219 687.524 li
cp
f
519.715 687.524 mo
511.885 687.524 li
511.885 679.694 li
519.715 679.694 li
519.715 687.524 li
cp
f
507.212 687.524 mo
499.382 687.524 li
499.382 679.694 li
507.212 679.694 li
507.212 687.524 li
cp
f
494.708 687.524 mo
486.878 687.524 li
486.878 679.694 li
494.708 679.694 li
494.708 687.524 li
cp
f
482.205 687.524 mo
474.375 687.524 li
474.375 679.694 li
482.205 679.694 li
482.205 687.524 li
cp
f
469.702 687.524 mo
461.871 687.524 li
461.871 679.694 li
469.702 679.694 li
469.702 687.524 li
cp
f
457.197 687.524 mo
449.367 687.524 li
449.367 679.694 li
457.197 679.694 li
457.197 687.524 li
cp
f
744.778 700.027 mo
736.947 700.027 li
736.947 692.198 li
744.778 692.198 li
744.778 700.027 li
cp
f
732.273 700.027 mo
724.444 700.027 li
724.444 692.198 li
732.273 692.198 li
732.273 700.027 li
cp
f
719.771 700.027 mo
711.94 700.027 li
711.94 692.198 li
719.771 692.198 li
719.771 700.027 li
cp
f
707.267 700.027 mo
699.438 700.027 li
699.438 692.198 li
707.267 692.198 li
707.267 700.027 li
cp
f
694.764 700.027 mo
686.934 700.027 li
686.934 692.198 li
694.764 692.198 li
694.764 700.027 li
cp
f
682.261 700.027 mo
674.43 700.027 li
674.43 692.198 li
682.261 692.198 li
682.261 700.027 li
cp
f
669.757 700.027 mo
661.927 700.027 li
661.927 692.198 li
669.757 692.198 li
669.757 700.027 li
cp
f
657.253 700.027 mo
649.422 700.027 li
649.422 692.198 li
657.253 692.198 li
657.253 700.027 li
cp
f
644.75 700.027 mo
636.919 700.027 li
636.919 692.198 li
644.75 692.198 li
644.75 700.027 li
cp
f
632.247 700.027 mo
624.415 700.027 li
624.415 692.198 li
632.247 692.198 li
632.247 700.027 li
cp
f
619.744 700.027 mo
611.913 700.027 li
611.913 692.198 li
619.744 692.198 li
619.744 700.027 li
cp
f
607.239 700.027 mo
599.409 700.027 li
599.409 692.198 li
607.239 692.198 li
607.239 700.027 li
cp
f
594.736 700.027 mo
586.905 700.027 li
586.905 692.198 li
594.736 692.198 li
594.736 700.027 li
cp
f
582.232 700.027 mo
574.402 700.027 li
574.402 692.198 li
582.232 692.198 li
582.232 700.027 li
cp
f
569.729 700.027 mo
561.899 700.027 li
561.899 692.198 li
569.729 692.198 li
569.729 700.027 li
cp
f
557.226 700.027 mo
549.395 700.027 li
549.395 692.198 li
557.226 692.198 li
557.226 700.027 li
cp
f
544.723 700.027 mo
536.892 700.027 li
536.892 692.198 li
544.723 692.198 li
544.723 700.027 li
cp
f
532.219 700.027 mo
524.389 700.027 li
524.389 692.198 li
532.219 692.198 li
532.219 700.027 li
cp
f
519.715 700.027 mo
511.885 700.027 li
511.885 692.198 li
519.715 692.198 li
519.715 700.027 li
cp
f
507.212 700.027 mo
499.382 700.027 li
499.382 692.198 li
507.212 692.198 li
507.212 700.027 li
cp
f
494.708 700.027 mo
486.878 700.027 li
486.878 692.198 li
494.708 692.198 li
494.708 700.027 li
cp
f
482.205 700.027 mo
474.375 700.027 li
474.375 692.198 li
482.205 692.198 li
482.205 700.027 li
cp
f
469.702 700.027 mo
461.871 700.027 li
461.871 692.198 li
469.702 692.198 li
469.702 700.027 li
cp
f
744.778 712.531 mo
736.947 712.531 li
736.947 704.701 li
744.778 704.701 li
744.778 712.531 li
cp
f
732.273 712.531 mo
724.444 712.531 li
724.444 704.701 li
732.273 704.701 li
732.273 712.531 li
cp
f
719.771 712.531 mo
711.94 712.531 li
711.94 704.701 li
719.771 704.701 li
719.771 712.531 li
cp
f
707.267 712.531 mo
699.438 712.531 li
699.438 704.701 li
707.267 704.701 li
707.267 712.531 li
cp
f
694.764 712.531 mo
686.934 712.531 li
686.934 704.701 li
694.764 704.701 li
694.764 712.531 li
cp
f
682.261 712.531 mo
674.43 712.531 li
674.43 704.701 li
682.261 704.701 li
682.261 712.531 li
cp
f
669.757 712.531 mo
661.927 712.531 li
661.927 704.701 li
669.757 704.701 li
669.757 712.531 li
cp
f
657.253 712.531 mo
649.422 712.531 li
649.422 704.701 li
657.253 704.701 li
657.253 712.531 li
cp
f
644.75 712.531 mo
636.919 712.531 li
636.919 704.701 li
644.75 704.701 li
644.75 712.531 li
cp
f
632.247 712.531 mo
624.415 712.531 li
624.415 704.701 li
632.247 704.701 li
632.247 712.531 li
cp
f
619.744 712.531 mo
611.913 712.531 li
611.913 704.701 li
619.744 704.701 li
619.744 712.531 li
cp
f
607.239 712.531 mo
599.409 712.531 li
599.409 704.701 li
607.239 704.701 li
607.239 712.531 li
cp
f
594.736 712.531 mo
586.905 712.531 li
586.905 704.701 li
594.736 704.701 li
594.736 712.531 li
cp
f
582.232 712.531 mo
574.402 712.531 li
574.402 704.701 li
582.232 704.701 li
582.232 712.531 li
cp
f
569.729 712.531 mo
561.899 712.531 li
561.899 704.701 li
569.729 704.701 li
569.729 712.531 li
cp
f
557.226 712.531 mo
549.395 712.531 li
549.395 704.701 li
557.226 704.701 li
557.226 712.531 li
cp
f
544.723 712.531 mo
536.892 712.531 li
536.892 704.701 li
544.723 704.701 li
544.723 712.531 li
cp
f
532.219 712.531 mo
524.389 712.531 li
524.389 704.701 li
532.219 704.701 li
532.219 712.531 li
cp
f
519.715 712.531 mo
511.885 712.531 li
511.885 704.701 li
519.715 704.701 li
519.715 712.531 li
cp
f
507.212 712.531 mo
499.382 712.531 li
499.382 704.701 li
507.212 704.701 li
507.212 712.531 li
cp
f
494.708 712.531 mo
486.878 712.531 li
486.878 704.701 li
494.708 704.701 li
494.708 712.531 li
cp
f
482.205 712.531 mo
474.375 712.531 li
474.375 704.701 li
482.205 704.701 li
482.205 712.531 li
cp
f
469.702 712.531 mo
461.871 712.531 li
461.871 704.701 li
469.702 704.701 li
469.702 712.531 li
cp
f
744.778 725.035 mo
736.947 725.035 li
736.947 717.205 li
744.778 717.205 li
744.778 725.035 li
cp
f
732.273 725.035 mo
724.444 725.035 li
724.444 717.205 li
732.273 717.205 li
732.273 725.035 li
cp
f
719.771 725.035 mo
711.94 725.035 li
711.94 717.205 li
719.771 717.205 li
719.771 725.035 li
cp
f
707.267 725.035 mo
699.438 725.035 li
699.438 717.205 li
707.267 717.205 li
707.267 725.035 li
cp
f
694.764 725.035 mo
686.934 725.035 li
686.934 717.205 li
694.764 717.205 li
694.764 725.035 li
cp
f
682.261 725.035 mo
674.43 725.035 li
674.43 717.205 li
682.261 717.205 li
682.261 725.035 li
cp
f
669.757 725.035 mo
661.927 725.035 li
661.927 717.205 li
669.757 717.205 li
669.757 725.035 li
cp
f
657.253 725.035 mo
649.422 725.035 li
649.422 717.205 li
657.253 717.205 li
657.253 725.035 li
cp
f
644.75 725.035 mo
636.919 725.035 li
636.919 717.205 li
644.75 717.205 li
644.75 725.035 li
cp
f
632.247 725.035 mo
624.415 725.035 li
624.415 717.205 li
632.247 717.205 li
632.247 725.035 li
cp
f
619.744 725.035 mo
611.913 725.035 li
611.913 717.205 li
619.744 717.205 li
619.744 725.035 li
cp
f
607.239 725.035 mo
599.409 725.035 li
599.409 717.205 li
607.239 717.205 li
607.239 725.035 li
cp
f
594.736 725.035 mo
586.905 725.035 li
586.905 717.205 li
594.736 717.205 li
594.736 725.035 li
cp
f
582.232 725.035 mo
574.402 725.035 li
574.402 717.205 li
582.232 717.205 li
582.232 725.035 li
cp
f
569.729 725.035 mo
561.899 725.035 li
561.899 717.205 li
569.729 717.205 li
569.729 725.035 li
cp
f
557.226 725.035 mo
549.395 725.035 li
549.395 717.205 li
557.226 717.205 li
557.226 725.035 li
cp
f
544.723 725.035 mo
536.892 725.035 li
536.892 717.205 li
544.723 717.205 li
544.723 725.035 li
cp
f
532.219 725.035 mo
524.389 725.035 li
524.389 717.205 li
532.219 717.205 li
532.219 725.035 li
cp
f
519.715 725.035 mo
511.885 725.035 li
511.885 717.205 li
519.715 717.205 li
519.715 725.035 li
cp
f
507.212 725.035 mo
499.382 725.035 li
499.382 717.205 li
507.212 717.205 li
507.212 725.035 li
cp
f
494.708 725.035 mo
486.878 725.035 li
486.878 717.205 li
494.708 717.205 li
494.708 725.035 li
cp
f
482.205 725.035 mo
474.375 725.035 li
474.375 717.205 li
482.205 717.205 li
482.205 725.035 li
cp
f
469.702 725.035 mo
461.871 725.035 li
461.871 717.205 li
469.702 717.205 li
469.702 725.035 li
cp
f
744.778 737.539 mo
736.947 737.539 li
736.947 729.708 li
744.778 729.708 li
744.778 737.539 li
cp
f
732.273 737.539 mo
724.444 737.539 li
724.444 729.708 li
732.273 729.708 li
732.273 737.539 li
cp
f
719.771 737.539 mo
711.94 737.539 li
711.94 729.708 li
719.771 729.708 li
719.771 737.539 li
cp
f
707.267 737.539 mo
699.438 737.539 li
699.438 729.708 li
707.267 729.708 li
707.267 737.539 li
cp
f
694.764 737.539 mo
686.934 737.539 li
686.934 729.708 li
694.764 729.708 li
694.764 737.539 li
cp
f
682.261 737.539 mo
674.43 737.539 li
674.43 729.708 li
682.261 729.708 li
682.261 737.539 li
cp
f
669.757 737.539 mo
661.927 737.539 li
661.927 729.708 li
669.757 729.708 li
669.757 737.539 li
cp
f
657.253 737.539 mo
649.422 737.539 li
649.422 729.708 li
657.253 729.708 li
657.253 737.539 li
cp
f
644.75 737.539 mo
636.919 737.539 li
636.919 729.708 li
644.75 729.708 li
644.75 737.539 li
cp
f
632.247 737.539 mo
624.415 737.539 li
624.415 729.708 li
632.247 729.708 li
632.247 737.539 li
cp
f
619.744 737.539 mo
611.913 737.539 li
611.913 729.708 li
619.744 729.708 li
619.744 737.539 li
cp
f
607.239 737.539 mo
599.409 737.539 li
599.409 729.708 li
607.239 729.708 li
607.239 737.539 li
cp
f
594.736 737.539 mo
586.905 737.539 li
586.905 729.708 li
594.736 729.708 li
594.736 737.539 li
cp
f
582.232 737.539 mo
574.402 737.539 li
574.402 729.708 li
582.232 729.708 li
582.232 737.539 li
cp
f
569.729 737.539 mo
561.899 737.539 li
561.899 729.708 li
569.729 729.708 li
569.729 737.539 li
cp
f
557.226 737.539 mo
549.395 737.539 li
549.395 729.708 li
557.226 729.708 li
557.226 737.539 li
cp
f
544.723 737.539 mo
536.892 737.539 li
536.892 729.708 li
544.723 729.708 li
544.723 737.539 li
cp
f
532.219 737.539 mo
524.389 737.539 li
524.389 729.708 li
532.219 729.708 li
532.219 737.539 li
cp
f
519.715 737.539 mo
511.885 737.539 li
511.885 729.708 li
519.715 729.708 li
519.715 737.539 li
cp
f
507.212 737.539 mo
499.382 737.539 li
499.382 729.708 li
507.212 729.708 li
507.212 737.539 li
cp
f
482.205 737.539 mo
474.375 737.539 li
474.375 729.708 li
482.205 729.708 li
482.205 737.539 li
cp
f
469.702 737.539 mo
461.871 737.539 li
461.871 729.708 li
469.702 729.708 li
469.702 737.539 li
cp
f
732.273 750.042 mo
724.444 750.042 li
724.444 742.21 li
732.273 742.21 li
732.273 750.042 li
cp
f
719.771 750.042 mo
711.94 750.042 li
711.94 742.21 li
719.771 742.21 li
719.771 750.042 li
cp
f
707.267 750.042 mo
699.438 750.042 li
699.438 742.21 li
707.267 742.21 li
707.267 750.042 li
cp
f
694.764 750.042 mo
686.934 750.042 li
686.934 742.21 li
694.764 742.21 li
694.764 750.042 li
cp
f
682.261 750.042 mo
674.43 750.042 li
674.43 742.21 li
682.261 742.21 li
682.261 750.042 li
cp
f
669.757 750.042 mo
661.927 750.042 li
661.927 742.21 li
669.757 742.21 li
669.757 750.042 li
cp
f
657.253 750.042 mo
649.422 750.042 li
649.422 742.21 li
657.253 742.21 li
657.253 750.042 li
cp
f
644.75 750.042 mo
636.919 750.042 li
636.919 742.21 li
644.75 742.21 li
644.75 750.042 li
cp
f
632.247 750.042 mo
624.415 750.042 li
624.415 742.21 li
632.247 742.21 li
632.247 750.042 li
cp
f
619.744 750.042 mo
611.913 750.042 li
611.913 742.21 li
619.744 742.21 li
619.744 750.042 li
cp
f
607.239 750.042 mo
599.409 750.042 li
599.409 742.21 li
607.239 742.21 li
607.239 750.042 li
cp
f
594.736 750.042 mo
586.905 750.042 li
586.905 742.21 li
594.736 742.21 li
594.736 750.042 li
cp
f
582.232 750.042 mo
574.402 750.042 li
574.402 742.21 li
582.232 742.21 li
582.232 750.042 li
cp
f
569.729 750.042 mo
561.899 750.042 li
561.899 742.21 li
569.729 742.21 li
569.729 750.042 li
cp
f
557.226 750.042 mo
549.395 750.042 li
549.395 742.21 li
557.226 742.21 li
557.226 750.042 li
cp
f
544.723 750.042 mo
536.892 750.042 li
536.892 742.21 li
544.723 742.21 li
544.723 750.042 li
cp
f
532.219 750.042 mo
524.389 750.042 li
524.389 742.21 li
532.219 742.21 li
532.219 750.042 li
cp
f
519.715 750.042 mo
511.885 750.042 li
511.885 742.21 li
519.715 742.21 li
519.715 750.042 li
cp
f
507.212 750.042 mo
499.382 750.042 li
499.382 742.21 li
507.212 742.21 li
507.212 750.042 li
cp
f
482.205 750.042 mo
474.375 750.042 li
474.375 742.21 li
482.205 742.21 li
482.205 750.042 li
cp
f
682.261 762.544 mo
674.43 762.544 li
674.43 754.714 li
682.261 754.714 li
682.261 762.544 li
cp
f
669.757 762.544 mo
661.927 762.544 li
661.927 754.714 li
669.757 754.714 li
669.757 762.544 li
cp
f
657.253 762.544 mo
649.422 762.544 li
649.422 754.714 li
657.253 754.714 li
657.253 762.544 li
cp
f
644.75 762.544 mo
636.919 762.544 li
636.919 754.714 li
644.75 754.714 li
644.75 762.544 li
cp
f
632.247 762.544 mo
624.415 762.544 li
624.415 754.714 li
632.247 754.714 li
632.247 762.544 li
cp
f
619.744 762.544 mo
611.913 762.544 li
611.913 754.714 li
619.744 754.714 li
619.744 762.544 li
cp
f
607.239 762.544 mo
599.409 762.544 li
599.409 754.714 li
607.239 754.714 li
607.239 762.544 li
cp
f
594.736 762.544 mo
586.905 762.544 li
586.905 754.714 li
594.736 754.714 li
594.736 762.544 li
cp
f
582.232 762.544 mo
574.402 762.544 li
574.402 754.714 li
582.232 754.714 li
582.232 762.544 li
cp
f
569.729 762.544 mo
561.899 762.544 li
561.899 754.714 li
569.729 754.714 li
569.729 762.544 li
cp
f
557.226 762.544 mo
549.395 762.544 li
549.395 754.714 li
557.226 754.714 li
557.226 762.544 li
cp
f
544.723 762.544 mo
536.892 762.544 li
536.892 754.714 li
544.723 754.714 li
544.723 762.544 li
cp
f
532.219 762.544 mo
524.389 762.544 li
524.389 754.714 li
532.219 754.714 li
532.219 762.544 li
cp
f
519.715 762.544 mo
511.885 762.544 li
511.885 754.714 li
519.715 754.714 li
519.715 762.544 li
cp
f
494.708 762.544 mo
486.878 762.544 li
486.878 754.714 li
494.708 754.714 li
494.708 762.544 li
cp
f
482.205 762.544 mo
474.375 762.544 li
474.375 754.714 li
482.205 754.714 li
482.205 762.544 li
cp
f
657.253 775.048 mo
649.422 775.048 li
649.422 767.218 li
657.253 767.218 li
657.253 775.048 li
cp
f
644.75 775.048 mo
636.919 775.048 li
636.919 767.218 li
644.75 767.218 li
644.75 775.048 li
cp
f
632.247 775.048 mo
624.415 775.048 li
624.415 767.218 li
632.247 767.218 li
632.247 775.048 li
cp
f
619.744 775.048 mo
611.913 775.048 li
611.913 767.218 li
619.744 767.218 li
619.744 775.048 li
cp
f
607.239 775.048 mo
599.409 775.048 li
599.409 767.218 li
607.239 767.218 li
607.239 775.048 li
cp
f
594.736 775.048 mo
586.905 775.048 li
586.905 767.218 li
594.736 767.218 li
594.736 775.048 li
cp
f
582.232 775.048 mo
574.402 775.048 li
574.402 767.218 li
582.232 767.218 li
582.232 775.048 li
cp
f
569.729 775.048 mo
561.899 775.048 li
561.899 767.218 li
569.729 767.218 li
569.729 775.048 li
cp
f
557.226 775.048 mo
549.395 775.048 li
549.395 767.218 li
557.226 767.218 li
557.226 775.048 li
cp
f
544.723 775.048 mo
536.892 775.048 li
536.892 767.218 li
544.723 767.218 li
544.723 775.048 li
cp
f
532.219 775.048 mo
524.389 775.048 li
524.389 767.218 li
532.219 767.218 li
532.219 775.048 li
cp
f
519.715 775.048 mo
511.885 775.048 li
511.885 767.218 li
519.715 767.218 li
519.715 775.048 li
cp
f
494.708 775.048 mo
486.878 775.048 li
486.878 767.218 li
494.708 767.218 li
494.708 775.048 li
cp
f
482.205 775.048 mo
474.375 775.048 li
474.375 767.218 li
482.205 767.218 li
482.205 775.048 li
cp
f
657.253 787.551 mo
649.422 787.551 li
649.422 779.72 li
657.253 779.72 li
657.253 787.551 li
cp
f
644.75 787.551 mo
636.919 787.551 li
636.919 779.72 li
644.75 779.72 li
644.75 787.551 li
cp
f
632.247 787.551 mo
624.415 787.551 li
624.415 779.72 li
632.247 779.72 li
632.247 787.551 li
cp
f
619.744 787.551 mo
611.913 787.551 li
611.913 779.72 li
619.744 779.72 li
619.744 787.551 li
cp
f
607.239 787.551 mo
599.409 787.551 li
599.409 779.72 li
607.239 779.72 li
607.239 787.551 li
cp
f
594.736 787.551 mo
586.905 787.551 li
586.905 779.72 li
594.736 779.72 li
594.736 787.551 li
cp
f
582.232 787.551 mo
574.402 787.551 li
574.402 779.72 li
582.232 779.72 li
582.232 787.551 li
cp
f
569.729 787.551 mo
561.899 787.551 li
561.899 779.72 li
569.729 779.72 li
569.729 787.551 li
cp
f
557.226 787.551 mo
549.395 787.551 li
549.395 779.72 li
557.226 779.72 li
557.226 787.551 li
cp
f
544.723 787.551 mo
536.892 787.551 li
536.892 779.72 li
544.723 779.72 li
544.723 787.551 li
cp
f
532.219 787.551 mo
524.389 787.551 li
524.389 779.72 li
532.219 779.72 li
532.219 787.551 li
cp
f
507.212 787.551 mo
499.382 787.551 li
499.382 779.72 li
507.212 779.72 li
507.212 787.551 li
cp
f
494.708 787.551 mo
486.878 787.551 li
486.878 779.72 li
494.708 779.72 li
494.708 787.551 li
cp
f
657.253 800.054 mo
649.422 800.054 li
649.422 792.225 li
657.253 792.225 li
657.253 800.054 li
cp
f
644.75 800.054 mo
636.919 800.054 li
636.919 792.225 li
644.75 792.225 li
644.75 800.054 li
cp
f
632.247 800.054 mo
624.415 800.054 li
624.415 792.225 li
632.247 792.225 li
632.247 800.054 li
cp
f
619.744 800.054 mo
611.913 800.054 li
611.913 792.225 li
619.744 792.225 li
619.744 800.054 li
cp
f
607.239 800.054 mo
599.409 800.054 li
599.409 792.225 li
607.239 792.225 li
607.239 800.054 li
cp
f
594.736 800.054 mo
586.905 800.054 li
586.905 792.225 li
594.736 792.225 li
594.736 800.054 li
cp
f
582.232 800.054 mo
574.402 800.054 li
574.402 792.225 li
582.232 792.225 li
582.232 800.054 li
cp
f
569.729 800.054 mo
561.899 800.054 li
561.899 792.225 li
569.729 792.225 li
569.729 800.054 li
cp
f
557.226 800.054 mo
549.395 800.054 li
549.395 792.225 li
557.226 792.225 li
557.226 800.054 li
cp
f
544.723 800.054 mo
536.892 800.054 li
536.892 792.225 li
544.723 792.225 li
544.723 800.054 li
cp
f
532.219 800.054 mo
524.389 800.054 li
524.389 792.225 li
532.219 792.225 li
532.219 800.054 li
cp
f
507.212 800.054 mo
499.382 800.054 li
499.382 792.225 li
507.212 792.225 li
507.212 800.054 li
cp
f
657.253 812.559 mo
649.422 812.559 li
649.422 804.728 li
657.253 804.728 li
657.253 812.559 li
cp
f
644.75 812.559 mo
636.919 812.559 li
636.919 804.728 li
644.75 804.728 li
644.75 812.559 li
cp
f
632.247 812.559 mo
624.415 812.559 li
624.415 804.728 li
632.247 804.728 li
632.247 812.559 li
cp
f
619.744 812.559 mo
611.913 812.559 li
611.913 804.728 li
619.744 804.728 li
619.744 812.559 li
cp
f
607.239 812.559 mo
599.409 812.559 li
599.409 804.728 li
607.239 804.728 li
607.239 812.559 li
cp
f
594.736 812.559 mo
586.905 812.559 li
586.905 804.728 li
594.736 804.728 li
594.736 812.559 li
cp
f
582.232 812.559 mo
574.402 812.559 li
574.402 804.728 li
582.232 804.728 li
582.232 812.559 li
cp
f
569.729 812.559 mo
561.899 812.559 li
561.899 804.728 li
569.729 804.728 li
569.729 812.559 li
cp
f
557.226 812.559 mo
549.395 812.559 li
549.395 804.728 li
557.226 804.728 li
557.226 812.559 li
cp
f
544.723 812.559 mo
536.892 812.559 li
536.892 804.728 li
544.723 804.728 li
544.723 812.559 li
cp
f
519.715 812.559 mo
511.885 812.559 li
511.885 804.728 li
519.715 804.728 li
519.715 812.559 li
cp
f
507.212 812.559 mo
499.382 812.559 li
499.382 804.728 li
507.212 804.728 li
507.212 812.559 li
cp
f
657.253 825.062 mo
649.422 825.062 li
649.422 817.232 li
657.253 817.232 li
657.253 825.062 li
cp
f
644.75 825.062 mo
636.919 825.062 li
636.919 817.232 li
644.75 817.232 li
644.75 825.062 li
cp
f
632.247 825.062 mo
624.415 825.062 li
624.415 817.232 li
632.247 817.232 li
632.247 825.062 li
cp
f
619.744 825.062 mo
611.913 825.062 li
611.913 817.232 li
619.744 817.232 li
619.744 825.062 li
cp
f
607.239 825.062 mo
599.409 825.062 li
599.409 817.232 li
607.239 817.232 li
607.239 825.062 li
cp
f
594.736 825.062 mo
586.905 825.062 li
586.905 817.232 li
594.736 817.232 li
594.736 825.062 li
cp
f
582.232 825.062 mo
574.402 825.062 li
574.402 817.232 li
582.232 817.232 li
582.232 825.062 li
cp
f
569.729 825.062 mo
561.899 825.062 li
561.899 817.232 li
569.729 817.232 li
569.729 825.062 li
cp
f
557.226 825.062 mo
549.395 825.062 li
549.395 817.232 li
557.226 817.232 li
557.226 825.062 li
cp
f
519.715 825.062 mo
511.885 825.062 li
511.885 817.232 li
519.715 817.232 li
519.715 825.062 li
cp
f
657.253 837.566 mo
649.422 837.566 li
649.422 829.736 li
657.253 829.736 li
657.253 837.566 li
cp
f
644.75 837.566 mo
636.919 837.566 li
636.919 829.736 li
644.75 829.736 li
644.75 837.566 li
cp
f
632.247 837.566 mo
624.415 837.566 li
624.415 829.736 li
632.247 829.736 li
632.247 837.566 li
cp
f
619.744 837.566 mo
611.913 837.566 li
611.913 829.736 li
619.744 829.736 li
619.744 837.566 li
cp
f
607.239 837.566 mo
599.409 837.566 li
599.409 829.736 li
607.239 829.736 li
607.239 837.566 li
cp
f
594.736 837.566 mo
586.905 837.566 li
586.905 829.736 li
594.736 829.736 li
594.736 837.566 li
cp
f
582.232 837.566 mo
574.402 837.566 li
574.402 829.736 li
582.232 829.736 li
582.232 837.566 li
cp
f
569.729 837.566 mo
561.899 837.566 li
561.899 829.736 li
569.729 829.736 li
569.729 837.566 li
cp
f
744.778 850.07 mo
736.947 850.07 li
736.947 842.24 li
744.778 842.24 li
744.778 850.07 li
cp
f
657.253 850.07 mo
649.422 850.07 li
649.422 842.24 li
657.253 842.24 li
657.253 850.07 li
cp
f
644.75 850.07 mo
636.919 850.07 li
636.919 842.24 li
644.75 842.24 li
644.75 850.07 li
cp
f
632.247 850.07 mo
624.415 850.07 li
624.415 842.24 li
632.247 842.24 li
632.247 850.07 li
cp
f
619.744 850.07 mo
611.913 850.07 li
611.913 842.24 li
619.744 842.24 li
619.744 850.07 li
cp
f
607.239 850.07 mo
599.409 850.07 li
599.409 842.24 li
607.239 842.24 li
607.239 850.07 li
cp
f
594.736 850.07 mo
586.905 850.07 li
586.905 842.24 li
594.736 842.24 li
594.736 850.07 li
cp
f
582.232 850.07 mo
574.402 850.07 li
574.402 842.24 li
582.232 842.24 li
582.232 850.07 li
cp
f
569.729 850.07 mo
561.899 850.07 li
561.899 842.24 li
569.729 842.24 li
569.729 850.07 li
cp
f
744.778 862.574 mo
736.947 862.574 li
736.947 854.743 li
744.778 854.743 li
744.778 862.574 li
cp
f
669.757 862.574 mo
661.927 862.574 li
661.927 854.743 li
669.757 854.743 li
669.757 862.574 li
cp
f
657.253 862.574 mo
649.422 862.574 li
649.422 854.743 li
657.253 854.743 li
657.253 862.574 li
cp
f
644.75 862.574 mo
636.919 862.574 li
636.919 854.743 li
644.75 854.743 li
644.75 862.574 li
cp
f
632.247 862.574 mo
624.415 862.574 li
624.415 854.743 li
632.247 854.743 li
632.247 862.574 li
cp
f
619.744 862.574 mo
611.913 862.574 li
611.913 854.743 li
619.744 854.743 li
619.744 862.574 li
cp
f
607.239 862.574 mo
599.409 862.574 li
599.409 854.743 li
607.239 854.743 li
607.239 862.574 li
cp
f
594.736 862.574 mo
586.905 862.574 li
586.905 854.743 li
594.736 854.743 li
594.736 862.574 li
cp
f
582.232 862.574 mo
574.402 862.574 li
574.402 854.743 li
582.232 854.743 li
582.232 862.574 li
cp
f
569.729 862.574 mo
561.899 862.574 li
561.899 854.743 li
569.729 854.743 li
569.729 862.574 li
cp
f
744.778 875.076 mo
736.947 875.076 li
736.947 867.245 li
744.778 867.245 li
744.778 875.076 li
cp
f
669.757 875.076 mo
661.927 875.076 li
661.927 867.245 li
669.757 867.245 li
669.757 875.076 li
cp
f
657.253 875.076 mo
649.422 875.076 li
649.422 867.245 li
657.253 867.245 li
657.253 875.076 li
cp
f
644.75 875.076 mo
636.919 875.076 li
636.919 867.245 li
644.75 867.245 li
644.75 875.076 li
cp
f
632.247 875.076 mo
624.415 875.076 li
624.415 867.245 li
632.247 867.245 li
632.247 875.076 li
cp
f
619.744 875.076 mo
611.913 875.076 li
611.913 867.245 li
619.744 867.245 li
619.744 875.076 li
cp
f
607.239 875.076 mo
599.409 875.076 li
599.409 867.245 li
607.239 867.245 li
607.239 875.076 li
cp
f
594.736 875.076 mo
586.905 875.076 li
586.905 867.245 li
594.736 867.245 li
594.736 875.076 li
cp
f
582.232 875.076 mo
574.402 875.076 li
574.402 867.245 li
582.232 867.245 li
582.232 875.076 li
cp
f
569.729 875.076 mo
561.899 875.076 li
561.899 867.245 li
569.729 867.245 li
569.729 875.076 li
cp
f
744.778 887.579 mo
736.947 887.579 li
736.947 879.749 li
744.778 879.749 li
744.778 887.579 li
cp
f
732.273 887.579 mo
724.444 887.579 li
724.444 879.749 li
732.273 879.749 li
732.273 887.579 li
cp
f
719.771 887.579 mo
711.94 887.579 li
711.94 879.749 li
719.771 879.749 li
719.771 887.579 li
cp
f
682.261 887.579 mo
674.43 887.579 li
674.43 879.749 li
682.261 879.749 li
682.261 887.579 li
cp
f
669.757 887.579 mo
661.927 887.579 li
661.927 879.749 li
669.757 879.749 li
669.757 887.579 li
cp
f
657.253 887.579 mo
649.422 887.579 li
649.422 879.749 li
657.253 879.749 li
657.253 887.579 li
cp
f
644.75 887.579 mo
636.919 887.579 li
636.919 879.749 li
644.75 879.749 li
644.75 887.579 li
cp
f
632.247 887.579 mo
624.415 887.579 li
624.415 879.749 li
632.247 879.749 li
632.247 887.579 li
cp
f
619.744 887.579 mo
611.913 887.579 li
611.913 879.749 li
619.744 879.749 li
619.744 887.579 li
cp
f
607.239 887.579 mo
599.409 887.579 li
599.409 879.749 li
607.239 879.749 li
607.239 887.579 li
cp
f
594.736 887.579 mo
586.905 887.579 li
586.905 879.749 li
594.736 879.749 li
594.736 887.579 li
cp
f
582.232 887.579 mo
574.402 887.579 li
574.402 879.749 li
582.232 879.749 li
582.232 887.579 li
cp
f
744.778 900.083 mo
736.947 900.083 li
736.947 892.251 li
744.778 892.251 li
744.778 900.083 li
cp
f
732.273 900.083 mo
724.444 900.083 li
724.444 892.251 li
732.273 892.251 li
732.273 900.083 li
cp
f
719.771 900.083 mo
711.94 900.083 li
711.94 892.251 li
719.771 892.251 li
719.771 900.083 li
cp
f
707.267 900.083 mo
699.438 900.083 li
699.438 892.251 li
707.267 892.251 li
707.267 900.083 li
cp
f
694.764 900.083 mo
686.934 900.083 li
686.934 892.251 li
694.764 892.251 li
694.764 900.083 li
cp
f
682.261 900.083 mo
674.43 900.083 li
674.43 892.251 li
682.261 892.251 li
682.261 900.083 li
cp
f
669.757 900.083 mo
661.927 900.083 li
661.927 892.251 li
669.757 892.251 li
669.757 900.083 li
cp
f
657.253 900.083 mo
649.422 900.083 li
649.422 892.251 li
657.253 892.251 li
657.253 900.083 li
cp
f
644.75 900.083 mo
636.919 900.083 li
636.919 892.251 li
644.75 892.251 li
644.75 900.083 li
cp
f
632.247 900.083 mo
624.415 900.083 li
624.415 892.251 li
632.247 892.251 li
632.247 900.083 li
cp
f
619.744 900.083 mo
611.913 900.083 li
611.913 892.251 li
619.744 892.251 li
619.744 900.083 li
cp
f
607.239 900.083 mo
599.409 900.083 li
599.409 892.251 li
607.239 892.251 li
607.239 900.083 li
cp
f
744.778 912.586 mo
736.947 912.586 li
736.947 904.755 li
744.778 904.755 li
744.778 912.586 li
cp
f
732.273 912.586 mo
724.444 912.586 li
724.444 904.755 li
732.273 904.755 li
732.273 912.586 li
cp
f
719.771 912.586 mo
711.94 912.586 li
711.94 904.755 li
719.771 904.755 li
719.771 912.586 li
cp
f
707.267 912.586 mo
699.438 912.586 li
699.438 904.755 li
707.267 904.755 li
707.267 912.586 li
cp
f
694.764 912.586 mo
686.934 912.586 li
686.934 904.755 li
694.764 904.755 li
694.764 912.586 li
cp
f
682.261 912.586 mo
674.43 912.586 li
674.43 904.755 li
682.261 904.755 li
682.261 912.586 li
cp
f
669.757 912.586 mo
661.927 912.586 li
661.927 904.755 li
669.757 904.755 li
669.757 912.586 li
cp
f
657.253 912.586 mo
649.422 912.586 li
649.422 904.755 li
657.253 904.755 li
657.253 912.586 li
cp
f
644.75 912.586 mo
636.919 912.586 li
636.919 904.755 li
644.75 904.755 li
644.75 912.586 li
cp
f
632.247 912.586 mo
624.415 912.586 li
624.415 904.755 li
632.247 904.755 li
632.247 912.586 li
cp
f
732.273 925.09 mo
724.444 925.09 li
724.444 917.258 li
732.273 917.258 li
732.273 925.09 li
cp
f
719.771 925.09 mo
711.94 925.09 li
711.94 917.258 li
719.771 917.258 li
719.771 925.09 li
cp
f
682.261 925.09 mo
674.43 925.09 li
674.43 917.258 li
682.261 917.258 li
682.261 925.09 li
cp
f
669.757 925.09 mo
661.927 925.09 li
661.927 917.258 li
669.757 917.258 li
669.757 925.09 li
cp
f
732.273 937.593 mo
724.444 937.593 li
724.444 929.763 li
732.273 929.763 li
732.273 937.593 li
cp
f
757.28 287.413 mo
749.451 287.413 li
749.451 279.582 li
757.28 279.582 li
757.28 287.413 li
cp
f
757.28 299.917 mo
749.451 299.917 li
749.451 292.085 li
757.28 292.085 li
757.28 299.917 li
cp
f
757.28 312.419 mo
749.451 312.419 li
749.451 304.589 li
757.28 304.589 li
757.28 312.419 li
cp
f
757.28 324.923 mo
749.451 324.923 li
749.451 317.093 li
757.28 317.093 li
757.28 324.923 li
cp
f
757.28 337.427 mo
749.451 337.427 li
749.451 329.596 li
757.28 329.596 li
757.28 337.427 li
cp
f
757.28 349.93 mo
749.451 349.93 li
749.451 342.1 li
757.28 342.1 li
757.28 349.93 li
cp
f
757.28 362.434 mo
749.451 362.434 li
749.451 354.604 li
757.28 354.604 li
757.28 362.434 li
cp
f
757.28 374.938 mo
749.451 374.938 li
749.451 367.107 li
757.28 367.107 li
757.28 374.938 li
cp
f
757.28 387.44 mo
749.451 387.44 li
749.451 379.611 li
757.28 379.611 li
757.28 387.44 li
cp
f
757.28 399.944 mo
749.451 399.944 li
749.451 392.113 li
757.28 392.113 li
757.28 399.944 li
cp
f
757.28 412.448 mo
749.451 412.448 li
749.451 404.617 li
757.28 404.617 li
757.28 412.448 li
cp
f
757.28 449.958 mo
749.451 449.958 li
749.451 442.127 li
757.28 442.127 li
757.28 449.958 li
cp
f
757.28 462.461 mo
749.451 462.461 li
749.451 454.63 li
757.28 454.63 li
757.28 462.461 li
cp
f
757.28 474.965 mo
749.451 474.965 li
749.451 467.134 li
757.28 467.134 li
757.28 474.965 li
cp
f
757.28 487.469 mo
749.451 487.469 li
749.451 479.638 li
757.28 479.638 li
757.28 487.469 li
cp
f
757.28 499.972 mo
749.451 499.972 li
749.451 492.141 li
757.28 492.141 li
757.28 499.972 li
cp
f
757.28 512.476 mo
749.451 512.476 li
749.451 504.645 li
757.28 504.645 li
757.28 512.476 li
cp
f
757.28 524.979 mo
749.451 524.979 li
749.451 517.148 li
757.28 517.148 li
757.28 524.979 li
cp
f
757.28 537.481 mo
749.451 537.481 li
749.451 529.651 li
757.28 529.651 li
757.28 537.481 li
cp
f
757.28 549.986 mo
749.451 549.986 li
749.451 542.154 li
757.28 542.154 li
757.28 549.986 li
cp
f
757.28 562.49 mo
749.451 562.49 li
749.451 554.658 li
757.28 554.658 li
757.28 562.49 li
cp
f
757.28 574.993 mo
749.451 574.993 li
749.451 567.162 li
757.28 567.162 li
757.28 574.993 li
cp
f
757.28 587.497 mo
749.451 587.497 li
749.451 579.666 li
757.28 579.666 li
757.28 587.497 li
cp
f
757.28 600 mo
749.451 600 li
749.451 592.169 li
757.28 592.169 li
757.28 600 li
cp
f
757.28 612.504 mo
749.451 612.504 li
749.451 604.673 li
757.28 604.673 li
757.28 612.504 li
cp
f
757.28 625.008 mo
749.451 625.008 li
749.451 617.175 li
757.28 617.175 li
757.28 625.008 li
cp
f
757.28 637.51 mo
749.451 637.51 li
749.451 629.68 li
757.28 629.68 li
757.28 637.51 li
cp
f
757.28 650.013 mo
749.451 650.013 li
749.451 642.183 li
757.28 642.183 li
757.28 650.013 li
cp
f
757.28 662.516 mo
749.451 662.516 li
749.451 654.686 li
757.28 654.686 li
757.28 662.516 li
cp
f
757.28 675.021 mo
749.451 675.021 li
749.451 667.19 li
757.28 667.19 li
757.28 675.021 li
cp
f
757.28 687.524 mo
749.451 687.524 li
749.451 679.694 li
757.28 679.694 li
757.28 687.524 li
cp
f
757.28 700.027 mo
749.451 700.027 li
749.451 692.198 li
757.28 692.198 li
757.28 700.027 li
cp
f
757.28 712.531 mo
749.451 712.531 li
749.451 704.701 li
757.28 704.701 li
757.28 712.531 li
cp
f
757.28 725.035 mo
749.451 725.035 li
749.451 717.205 li
757.28 717.205 li
757.28 725.035 li
cp
f
757.28 850.07 mo
749.451 850.07 li
749.451 842.24 li
757.28 842.24 li
757.28 850.07 li
cp
f
757.28 862.574 mo
749.451 862.574 li
749.451 854.743 li
757.28 854.743 li
757.28 862.574 li
cp
f
757.28 875.076 mo
749.451 875.076 li
749.451 867.245 li
757.28 867.245 li
757.28 875.076 li
cp
f
757.28 887.579 mo
749.451 887.579 li
749.451 879.749 li
757.28 879.749 li
757.28 887.579 li
cp
f
757.28 912.586 mo
749.451 912.586 li
749.451 904.755 li
757.28 904.755 li
757.28 912.586 li
cp
f
769.783 287.413 mo
761.954 287.413 li
761.954 279.582 li
769.783 279.582 li
769.783 287.413 li
cp
f
769.783 299.917 mo
761.954 299.917 li
761.954 292.085 li
769.783 292.085 li
769.783 299.917 li
cp
f
769.783 312.419 mo
761.954 312.419 li
761.954 304.589 li
769.783 304.589 li
769.783 312.419 li
cp
f
769.783 324.923 mo
761.954 324.923 li
761.954 317.093 li
769.783 317.093 li
769.783 324.923 li
cp
f
769.783 337.427 mo
761.954 337.427 li
761.954 329.596 li
769.783 329.596 li
769.783 337.427 li
cp
f
769.783 349.93 mo
761.954 349.93 li
761.954 342.1 li
769.783 342.1 li
769.783 349.93 li
cp
f
769.783 374.938 mo
761.954 374.938 li
761.954 367.107 li
769.783 367.107 li
769.783 374.938 li
cp
f
769.783 387.44 mo
761.954 387.44 li
761.954 379.611 li
769.783 379.611 li
769.783 387.44 li
cp
f
769.783 399.944 mo
761.954 399.944 li
761.954 392.113 li
769.783 392.113 li
769.783 399.944 li
cp
f
769.783 412.448 mo
761.954 412.448 li
761.954 404.617 li
769.783 404.617 li
769.783 412.448 li
cp
f
769.783 424.951 mo
761.954 424.951 li
761.954 417.121 li
769.783 417.121 li
769.783 424.951 li
cp
f
769.783 437.455 mo
761.954 437.455 li
761.954 429.624 li
769.783 429.624 li
769.783 437.455 li
cp
f
769.783 449.958 mo
761.954 449.958 li
761.954 442.127 li
769.783 442.127 li
769.783 449.958 li
cp
f
769.783 462.461 mo
761.954 462.461 li
761.954 454.63 li
769.783 454.63 li
769.783 462.461 li
cp
f
769.783 474.965 mo
761.954 474.965 li
761.954 467.134 li
769.783 467.134 li
769.783 474.965 li
cp
f
769.783 487.469 mo
761.954 487.469 li
761.954 479.638 li
769.783 479.638 li
769.783 487.469 li
cp
f
769.783 499.972 mo
761.954 499.972 li
761.954 492.141 li
769.783 492.141 li
769.783 499.972 li
cp
f
769.783 512.476 mo
761.954 512.476 li
761.954 504.645 li
769.783 504.645 li
769.783 512.476 li
cp
f
769.783 524.979 mo
761.954 524.979 li
761.954 517.148 li
769.783 517.148 li
769.783 524.979 li
cp
f
769.783 537.481 mo
761.954 537.481 li
761.954 529.651 li
769.783 529.651 li
769.783 537.481 li
cp
f
769.783 549.986 mo
761.954 549.986 li
761.954 542.154 li
769.783 542.154 li
769.783 549.986 li
cp
f
769.783 562.49 mo
761.954 562.49 li
761.954 554.658 li
769.783 554.658 li
769.783 562.49 li
cp
f
769.783 574.993 mo
761.954 574.993 li
761.954 567.162 li
769.783 567.162 li
769.783 574.993 li
cp
f
769.783 587.497 mo
761.954 587.497 li
761.954 579.666 li
769.783 579.666 li
769.783 587.497 li
cp
f
769.783 600 mo
761.954 600 li
761.954 592.169 li
769.783 592.169 li
769.783 600 li
cp
f
769.783 612.504 mo
761.954 612.504 li
761.954 604.673 li
769.783 604.673 li
769.783 612.504 li
cp
f
769.783 625.008 mo
761.954 625.008 li
761.954 617.175 li
769.783 617.175 li
769.783 625.008 li
cp
f
769.783 637.51 mo
761.954 637.51 li
761.954 629.68 li
769.783 629.68 li
769.783 637.51 li
cp
f
769.783 650.013 mo
761.954 650.013 li
761.954 642.183 li
769.783 642.183 li
769.783 650.013 li
cp
f
769.783 662.516 mo
761.954 662.516 li
761.954 654.686 li
769.783 654.686 li
769.783 662.516 li
cp
f
769.783 675.021 mo
761.954 675.021 li
761.954 667.19 li
769.783 667.19 li
769.783 675.021 li
cp
f
769.783 687.524 mo
761.954 687.524 li
761.954 679.694 li
769.783 679.694 li
769.783 687.524 li
cp
f
769.783 700.027 mo
761.954 700.027 li
761.954 692.198 li
769.783 692.198 li
769.783 700.027 li
cp
f
769.783 712.531 mo
761.954 712.531 li
761.954 704.701 li
769.783 704.701 li
769.783 712.531 li
cp
f
769.783 725.035 mo
761.954 725.035 li
761.954 717.205 li
769.783 717.205 li
769.783 725.035 li
cp
f
769.783 837.566 mo
761.954 837.566 li
761.954 829.736 li
769.783 829.736 li
769.783 837.566 li
cp
f
769.783 850.07 mo
761.954 850.07 li
761.954 842.24 li
769.783 842.24 li
769.783 850.07 li
cp
f
769.783 862.574 mo
761.954 862.574 li
761.954 854.743 li
769.783 854.743 li
769.783 862.574 li
cp
f
769.783 875.076 mo
761.954 875.076 li
761.954 867.245 li
769.783 867.245 li
769.783 875.076 li
cp
f
769.783 887.579 mo
761.954 887.579 li
761.954 879.749 li
769.783 879.749 li
769.783 887.579 li
cp
f
782.287 287.413 mo
774.457 287.413 li
774.457 279.582 li
782.287 279.582 li
782.287 287.413 li
cp
f
782.287 299.917 mo
774.457 299.917 li
774.457 292.085 li
782.287 292.085 li
782.287 299.917 li
cp
f
782.287 312.419 mo
774.457 312.419 li
774.457 304.589 li
782.287 304.589 li
782.287 312.419 li
cp
f
782.287 324.923 mo
774.457 324.923 li
774.457 317.093 li
782.287 317.093 li
782.287 324.923 li
cp
f
782.287 337.427 mo
774.457 337.427 li
774.457 329.596 li
782.287 329.596 li
782.287 337.427 li
cp
f
782.287 349.93 mo
774.457 349.93 li
774.457 342.1 li
782.287 342.1 li
782.287 349.93 li
cp
f
782.287 374.938 mo
774.457 374.938 li
774.457 367.107 li
782.287 367.107 li
782.287 374.938 li
cp
f
782.287 387.44 mo
774.457 387.44 li
774.457 379.611 li
782.287 379.611 li
782.287 387.44 li
cp
f
782.287 399.944 mo
774.457 399.944 li
774.457 392.113 li
782.287 392.113 li
782.287 399.944 li
cp
f
782.287 412.448 mo
774.457 412.448 li
774.457 404.617 li
782.287 404.617 li
782.287 412.448 li
cp
f
782.287 424.951 mo
774.457 424.951 li
774.457 417.121 li
782.287 417.121 li
782.287 424.951 li
cp
f
782.287 437.455 mo
774.457 437.455 li
774.457 429.624 li
782.287 429.624 li
782.287 437.455 li
cp
f
782.287 449.958 mo
774.457 449.958 li
774.457 442.127 li
782.287 442.127 li
782.287 449.958 li
cp
f
782.287 462.461 mo
774.457 462.461 li
774.457 454.63 li
782.287 454.63 li
782.287 462.461 li
cp
f
782.287 474.965 mo
774.457 474.965 li
774.457 467.134 li
782.287 467.134 li
782.287 474.965 li
cp
f
782.287 487.469 mo
774.457 487.469 li
774.457 479.638 li
782.287 479.638 li
782.287 487.469 li
cp
f
782.287 499.972 mo
774.457 499.972 li
774.457 492.141 li
782.287 492.141 li
782.287 499.972 li
cp
f
782.287 512.476 mo
774.457 512.476 li
774.457 504.645 li
782.287 504.645 li
782.287 512.476 li
cp
f
782.287 524.979 mo
774.457 524.979 li
774.457 517.148 li
782.287 517.148 li
782.287 524.979 li
cp
f
782.287 537.481 mo
774.457 537.481 li
774.457 529.651 li
782.287 529.651 li
782.287 537.481 li
cp
f
782.287 549.986 mo
774.457 549.986 li
774.457 542.154 li
782.287 542.154 li
782.287 549.986 li
cp
f
782.287 562.49 mo
774.457 562.49 li
774.457 554.658 li
782.287 554.658 li
782.287 562.49 li
cp
f
782.287 574.993 mo
774.457 574.993 li
774.457 567.162 li
782.287 567.162 li
782.287 574.993 li
cp
f
782.287 587.497 mo
774.457 587.497 li
774.457 579.666 li
782.287 579.666 li
782.287 587.497 li
cp
f
782.287 600 mo
774.457 600 li
774.457 592.169 li
782.287 592.169 li
782.287 600 li
cp
f
782.287 612.504 mo
774.457 612.504 li
774.457 604.673 li
782.287 604.673 li
782.287 612.504 li
cp
f
782.287 625.008 mo
774.457 625.008 li
774.457 617.175 li
782.287 617.175 li
782.287 625.008 li
cp
f
782.287 637.51 mo
774.457 637.51 li
774.457 629.68 li
782.287 629.68 li
782.287 637.51 li
cp
f
782.287 650.013 mo
774.457 650.013 li
774.457 642.183 li
782.287 642.183 li
782.287 650.013 li
cp
f
782.287 662.516 mo
774.457 662.516 li
774.457 654.686 li
782.287 654.686 li
782.287 662.516 li
cp
f
782.287 675.021 mo
774.457 675.021 li
774.457 667.19 li
782.287 667.19 li
782.287 675.021 li
cp
f
782.287 687.524 mo
774.457 687.524 li
774.457 679.694 li
782.287 679.694 li
782.287 687.524 li
cp
f
782.287 700.027 mo
774.457 700.027 li
774.457 692.198 li
782.287 692.198 li
782.287 700.027 li
cp
f
782.287 712.531 mo
774.457 712.531 li
774.457 704.701 li
782.287 704.701 li
782.287 712.531 li
cp
f
782.287 725.035 mo
774.457 725.035 li
774.457 717.205 li
782.287 717.205 li
782.287 725.035 li
cp
f
782.287 737.539 mo
774.457 737.539 li
774.457 729.708 li
782.287 729.708 li
782.287 737.539 li
cp
f
782.287 837.566 mo
774.457 837.566 li
774.457 829.736 li
782.287 829.736 li
782.287 837.566 li
cp
f
782.287 850.07 mo
774.457 850.07 li
774.457 842.24 li
782.287 842.24 li
782.287 850.07 li
cp
f
782.287 862.574 mo
774.457 862.574 li
774.457 854.743 li
782.287 854.743 li
782.287 862.574 li
cp
f
782.287 875.076 mo
774.457 875.076 li
774.457 867.245 li
782.287 867.245 li
782.287 875.076 li
cp
f
794.791 337.427 mo
786.961 337.427 li
786.961 329.596 li
794.791 329.596 li
794.791 337.427 li
cp
f
794.791 349.93 mo
786.961 349.93 li
786.961 342.1 li
794.791 342.1 li
794.791 349.93 li
cp
f
794.791 387.44 mo
786.961 387.44 li
786.961 379.611 li
794.791 379.611 li
794.791 387.44 li
cp
f
794.791 399.944 mo
786.961 399.944 li
786.961 392.113 li
794.791 392.113 li
794.791 399.944 li
cp
f
794.791 412.448 mo
786.961 412.448 li
786.961 404.617 li
794.791 404.617 li
794.791 412.448 li
cp
f
794.791 424.951 mo
786.961 424.951 li
786.961 417.121 li
794.791 417.121 li
794.791 424.951 li
cp
f
794.791 437.455 mo
786.961 437.455 li
786.961 429.624 li
794.791 429.624 li
794.791 437.455 li
cp
f
794.791 449.958 mo
786.961 449.958 li
786.961 442.127 li
794.791 442.127 li
794.791 449.958 li
cp
f
794.791 462.461 mo
786.961 462.461 li
786.961 454.63 li
794.791 454.63 li
794.791 462.461 li
cp
f
794.791 474.965 mo
786.961 474.965 li
786.961 467.134 li
794.791 467.134 li
794.791 474.965 li
cp
f
794.791 487.469 mo
786.961 487.469 li
786.961 479.638 li
794.791 479.638 li
794.791 487.469 li
cp
f
794.791 499.972 mo
786.961 499.972 li
786.961 492.141 li
794.791 492.141 li
794.791 499.972 li
cp
f
794.791 512.476 mo
786.961 512.476 li
786.961 504.645 li
794.791 504.645 li
794.791 512.476 li
cp
f
794.791 524.979 mo
786.961 524.979 li
786.961 517.148 li
794.791 517.148 li
794.791 524.979 li
cp
f
794.791 537.481 mo
786.961 537.481 li
786.961 529.651 li
794.791 529.651 li
794.791 537.481 li
cp
f
794.791 549.986 mo
786.961 549.986 li
786.961 542.154 li
794.791 542.154 li
794.791 549.986 li
cp
f
794.791 562.49 mo
786.961 562.49 li
786.961 554.658 li
794.791 554.658 li
794.791 562.49 li
cp
f
794.791 574.993 mo
786.961 574.993 li
786.961 567.162 li
794.791 567.162 li
794.791 574.993 li
cp
f
794.791 587.497 mo
786.961 587.497 li
786.961 579.666 li
794.791 579.666 li
794.791 587.497 li
cp
f
794.791 600 mo
786.961 600 li
786.961 592.169 li
794.791 592.169 li
794.791 600 li
cp
f
794.791 612.504 mo
786.961 612.504 li
786.961 604.673 li
794.791 604.673 li
794.791 612.504 li
cp
f
794.791 625.008 mo
786.961 625.008 li
786.961 617.175 li
794.791 617.175 li
794.791 625.008 li
cp
f
794.791 637.51 mo
786.961 637.51 li
786.961 629.68 li
794.791 629.68 li
794.791 637.51 li
cp
f
794.791 650.013 mo
786.961 650.013 li
786.961 642.183 li
794.791 642.183 li
794.791 650.013 li
cp
f
794.791 662.516 mo
786.961 662.516 li
786.961 654.686 li
794.791 654.686 li
794.791 662.516 li
cp
f
794.791 675.021 mo
786.961 675.021 li
786.961 667.19 li
794.791 667.19 li
794.791 675.021 li
cp
f
794.791 687.524 mo
786.961 687.524 li
786.961 679.694 li
794.791 679.694 li
794.791 687.524 li
cp
f
794.791 700.027 mo
786.961 700.027 li
786.961 692.198 li
794.791 692.198 li
794.791 700.027 li
cp
f
794.791 712.531 mo
786.961 712.531 li
786.961 704.701 li
794.791 704.701 li
794.791 712.531 li
cp
f
794.791 725.035 mo
786.961 725.035 li
786.961 717.205 li
794.791 717.205 li
794.791 725.035 li
cp
f
807.295 362.434 mo
799.464 362.434 li
799.464 354.604 li
807.295 354.604 li
807.295 362.434 li
cp
f
807.295 374.938 mo
799.464 374.938 li
799.464 367.107 li
807.295 367.107 li
807.295 374.938 li
cp
f
807.295 387.44 mo
799.464 387.44 li
799.464 379.611 li
807.295 379.611 li
807.295 387.44 li
cp
f
807.295 399.944 mo
799.464 399.944 li
799.464 392.113 li
807.295 392.113 li
807.295 399.944 li
cp
f
807.295 412.448 mo
799.464 412.448 li
799.464 404.617 li
807.295 404.617 li
807.295 412.448 li
cp
f
807.295 424.951 mo
799.464 424.951 li
799.464 417.121 li
807.295 417.121 li
807.295 424.951 li
cp
f
807.295 437.455 mo
799.464 437.455 li
799.464 429.624 li
807.295 429.624 li
807.295 437.455 li
cp
f
807.295 449.958 mo
799.464 449.958 li
799.464 442.127 li
807.295 442.127 li
807.295 449.958 li
cp
f
807.295 462.461 mo
799.464 462.461 li
799.464 454.63 li
807.295 454.63 li
807.295 462.461 li
cp
f
807.295 474.965 mo
799.464 474.965 li
799.464 467.134 li
807.295 467.134 li
807.295 474.965 li
cp
f
807.295 487.469 mo
799.464 487.469 li
799.464 479.638 li
807.295 479.638 li
807.295 487.469 li
cp
f
807.295 499.972 mo
799.464 499.972 li
799.464 492.141 li
807.295 492.141 li
807.295 499.972 li
cp
f
807.295 512.476 mo
799.464 512.476 li
799.464 504.645 li
807.295 504.645 li
807.295 512.476 li
cp
f
807.295 524.979 mo
799.464 524.979 li
799.464 517.148 li
807.295 517.148 li
807.295 524.979 li
cp
f
807.295 537.481 mo
799.464 537.481 li
799.464 529.651 li
807.295 529.651 li
807.295 537.481 li
cp
f
807.295 549.986 mo
799.464 549.986 li
799.464 542.154 li
807.295 542.154 li
807.295 549.986 li
cp
f
807.295 562.49 mo
799.464 562.49 li
799.464 554.658 li
807.295 554.658 li
807.295 562.49 li
cp
f
807.295 574.993 mo
799.464 574.993 li
799.464 567.162 li
807.295 567.162 li
807.295 574.993 li
cp
f
807.295 587.497 mo
799.464 587.497 li
799.464 579.666 li
807.295 579.666 li
807.295 587.497 li
cp
f
807.295 600 mo
799.464 600 li
799.464 592.169 li
807.295 592.169 li
807.295 600 li
cp
f
807.295 612.504 mo
799.464 612.504 li
799.464 604.673 li
807.295 604.673 li
807.295 612.504 li
cp
f
807.295 625.008 mo
799.464 625.008 li
799.464 617.175 li
807.295 617.175 li
807.295 625.008 li
cp
f
807.295 637.51 mo
799.464 637.51 li
799.464 629.68 li
807.295 629.68 li
807.295 637.51 li
cp
f
807.295 650.013 mo
799.464 650.013 li
799.464 642.183 li
807.295 642.183 li
807.295 650.013 li
cp
f
807.295 662.516 mo
799.464 662.516 li
799.464 654.686 li
807.295 654.686 li
807.295 662.516 li
cp
f
807.295 675.021 mo
799.464 675.021 li
799.464 667.19 li
807.295 667.19 li
807.295 675.021 li
cp
f
807.295 687.524 mo
799.464 687.524 li
799.464 679.694 li
807.295 679.694 li
807.295 687.524 li
cp
f
807.295 700.027 mo
799.464 700.027 li
799.464 692.198 li
807.295 692.198 li
807.295 700.027 li
cp
f
807.295 712.531 mo
799.464 712.531 li
799.464 704.701 li
807.295 704.701 li
807.295 712.531 li
cp
f
807.295 725.035 mo
799.464 725.035 li
799.464 717.205 li
807.295 717.205 li
807.295 725.035 li
cp
f
807.295 737.539 mo
799.464 737.539 li
799.464 729.708 li
807.295 729.708 li
807.295 737.539 li
cp
f
807.295 750.042 mo
799.464 750.042 li
799.464 742.21 li
807.295 742.21 li
807.295 750.042 li
cp
f
819.798 374.938 mo
811.969 374.938 li
811.969 367.107 li
819.798 367.107 li
819.798 374.938 li
cp
f
819.798 387.44 mo
811.969 387.44 li
811.969 379.611 li
819.798 379.611 li
819.798 387.44 li
cp
f
819.798 399.944 mo
811.969 399.944 li
811.969 392.113 li
819.798 392.113 li
819.798 399.944 li
cp
f
819.798 412.448 mo
811.969 412.448 li
811.969 404.617 li
819.798 404.617 li
819.798 412.448 li
cp
f
819.798 424.951 mo
811.969 424.951 li
811.969 417.121 li
819.798 417.121 li
819.798 424.951 li
cp
f
819.798 437.455 mo
811.969 437.455 li
811.969 429.624 li
819.798 429.624 li
819.798 437.455 li
cp
f
819.798 449.958 mo
811.969 449.958 li
811.969 442.127 li
819.798 442.127 li
819.798 449.958 li
cp
f
819.798 462.461 mo
811.969 462.461 li
811.969 454.63 li
819.798 454.63 li
819.798 462.461 li
cp
f
819.798 474.965 mo
811.969 474.965 li
811.969 467.134 li
819.798 467.134 li
819.798 474.965 li
cp
f
819.798 487.469 mo
811.969 487.469 li
811.969 479.638 li
819.798 479.638 li
819.798 487.469 li
cp
f
819.798 499.972 mo
811.969 499.972 li
811.969 492.141 li
819.798 492.141 li
819.798 499.972 li
cp
f
819.798 512.476 mo
811.969 512.476 li
811.969 504.645 li
819.798 504.645 li
819.798 512.476 li
cp
f
819.798 524.979 mo
811.969 524.979 li
811.969 517.148 li
819.798 517.148 li
819.798 524.979 li
cp
f
819.798 537.481 mo
811.969 537.481 li
811.969 529.651 li
819.798 529.651 li
819.798 537.481 li
cp
f
819.798 549.986 mo
811.969 549.986 li
811.969 542.154 li
819.798 542.154 li
819.798 549.986 li
cp
f
819.798 562.49 mo
811.969 562.49 li
811.969 554.658 li
819.798 554.658 li
819.798 562.49 li
cp
f
819.798 574.993 mo
811.969 574.993 li
811.969 567.162 li
819.798 567.162 li
819.798 574.993 li
cp
f
819.798 587.497 mo
811.969 587.497 li
811.969 579.666 li
819.798 579.666 li
819.798 587.497 li
cp
f
819.798 600 mo
811.969 600 li
811.969 592.169 li
819.798 592.169 li
819.798 600 li
cp
f
819.798 612.504 mo
811.969 612.504 li
811.969 604.673 li
819.798 604.673 li
819.798 612.504 li
cp
f
819.798 625.008 mo
811.969 625.008 li
811.969 617.175 li
819.798 617.175 li
819.798 625.008 li
cp
f
819.798 637.51 mo
811.969 637.51 li
811.969 629.68 li
819.798 629.68 li
819.798 637.51 li
cp
f
819.798 650.013 mo
811.969 650.013 li
811.969 642.183 li
819.798 642.183 li
819.798 650.013 li
cp
f
819.798 662.516 mo
811.969 662.516 li
811.969 654.686 li
819.798 654.686 li
819.798 662.516 li
cp
f
819.798 675.021 mo
811.969 675.021 li
811.969 667.19 li
819.798 667.19 li
819.798 675.021 li
cp
f
819.798 687.524 mo
811.969 687.524 li
811.969 679.694 li
819.798 679.694 li
819.798 687.524 li
cp
f
819.798 725.035 mo
811.969 725.035 li
811.969 717.205 li
819.798 717.205 li
819.798 725.035 li
cp
f
819.798 737.539 mo
811.969 737.539 li
811.969 729.708 li
819.798 729.708 li
819.798 737.539 li
cp
f
819.798 750.042 mo
811.969 750.042 li
811.969 742.21 li
819.798 742.21 li
819.798 750.042 li
cp
f
819.798 762.544 mo
811.969 762.544 li
811.969 754.714 li
819.798 754.714 li
819.798 762.544 li
cp
f
832.303 374.938 mo
824.472 374.938 li
824.472 367.107 li
832.303 367.107 li
832.303 374.938 li
cp
f
832.303 387.44 mo
824.472 387.44 li
824.472 379.611 li
832.303 379.611 li
832.303 387.44 li
cp
f
832.303 399.944 mo
824.472 399.944 li
824.472 392.113 li
832.303 392.113 li
832.303 399.944 li
cp
f
832.303 412.448 mo
824.472 412.448 li
824.472 404.617 li
832.303 404.617 li
832.303 412.448 li
cp
f
832.303 424.951 mo
824.472 424.951 li
824.472 417.121 li
832.303 417.121 li
832.303 424.951 li
cp
f
832.303 437.455 mo
824.472 437.455 li
824.472 429.624 li
832.303 429.624 li
832.303 437.455 li
cp
f
832.303 449.958 mo
824.472 449.958 li
824.472 442.127 li
832.303 442.127 li
832.303 449.958 li
cp
f
832.303 462.461 mo
824.472 462.461 li
824.472 454.63 li
832.303 454.63 li
832.303 462.461 li
cp
f
832.303 474.965 mo
824.472 474.965 li
824.472 467.134 li
832.303 467.134 li
832.303 474.965 li
cp
f
832.303 487.469 mo
824.472 487.469 li
824.472 479.638 li
832.303 479.638 li
832.303 487.469 li
cp
f
832.303 499.972 mo
824.472 499.972 li
824.472 492.141 li
832.303 492.141 li
832.303 499.972 li
cp
f
832.303 512.476 mo
824.472 512.476 li
824.472 504.645 li
832.303 504.645 li
832.303 512.476 li
cp
f
832.303 524.979 mo
824.472 524.979 li
824.472 517.148 li
832.303 517.148 li
832.303 524.979 li
cp
f
832.303 537.481 mo
824.472 537.481 li
824.472 529.651 li
832.303 529.651 li
832.303 537.481 li
cp
f
832.303 549.986 mo
824.472 549.986 li
824.472 542.154 li
832.303 542.154 li
832.303 549.986 li
cp
f
832.303 562.49 mo
824.472 562.49 li
824.472 554.658 li
832.303 554.658 li
832.303 562.49 li
cp
f
832.303 574.993 mo
824.472 574.993 li
824.472 567.162 li
832.303 567.162 li
832.303 574.993 li
cp
f
832.303 587.497 mo
824.472 587.497 li
824.472 579.666 li
832.303 579.666 li
832.303 587.497 li
cp
f
832.303 600 mo
824.472 600 li
824.472 592.169 li
832.303 592.169 li
832.303 600 li
cp
f
832.303 612.504 mo
824.472 612.504 li
824.472 604.673 li
832.303 604.673 li
832.303 612.504 li
cp
f
832.303 625.008 mo
824.472 625.008 li
824.472 617.175 li
832.303 617.175 li
832.303 625.008 li
cp
f
832.303 637.51 mo
824.472 637.51 li
824.472 629.68 li
832.303 629.68 li
832.303 637.51 li
cp
f
832.303 650.013 mo
824.472 650.013 li
824.472 642.183 li
832.303 642.183 li
832.303 650.013 li
cp
f
832.303 662.516 mo
824.472 662.516 li
824.472 654.686 li
832.303 654.686 li
832.303 662.516 li
cp
f
832.303 675.021 mo
824.472 675.021 li
824.472 667.19 li
832.303 667.19 li
832.303 675.021 li
cp
f
832.303 737.539 mo
824.472 737.539 li
824.472 729.708 li
832.303 729.708 li
832.303 737.539 li
cp
f
832.303 750.042 mo
824.472 750.042 li
824.472 742.21 li
832.303 742.21 li
832.303 750.042 li
cp
f
832.303 762.544 mo
824.472 762.544 li
824.472 754.714 li
832.303 754.714 li
832.303 762.544 li
cp
f
832.303 775.048 mo
824.472 775.048 li
824.472 767.218 li
832.303 767.218 li
832.303 775.048 li
cp
f
844.805 387.44 mo
836.975 387.44 li
836.975 379.611 li
844.805 379.611 li
844.805 387.44 li
cp
f
844.805 399.944 mo
836.975 399.944 li
836.975 392.113 li
844.805 392.113 li
844.805 399.944 li
cp
f
844.805 412.448 mo
836.975 412.448 li
836.975 404.617 li
844.805 404.617 li
844.805 412.448 li
cp
f
844.805 424.951 mo
836.975 424.951 li
836.975 417.121 li
844.805 417.121 li
844.805 424.951 li
cp
f
844.805 437.455 mo
836.975 437.455 li
836.975 429.624 li
844.805 429.624 li
844.805 437.455 li
cp
f
844.805 449.958 mo
836.975 449.958 li
836.975 442.127 li
844.805 442.127 li
844.805 449.958 li
cp
f
844.805 462.461 mo
836.975 462.461 li
836.975 454.63 li
844.805 454.63 li
844.805 462.461 li
cp
f
844.805 474.965 mo
836.975 474.965 li
836.975 467.134 li
844.805 467.134 li
844.805 474.965 li
cp
f
844.805 487.469 mo
836.975 487.469 li
836.975 479.638 li
844.805 479.638 li
844.805 487.469 li
cp
f
844.805 499.972 mo
836.975 499.972 li
836.975 492.141 li
844.805 492.141 li
844.805 499.972 li
cp
f
844.805 512.476 mo
836.975 512.476 li
836.975 504.645 li
844.805 504.645 li
844.805 512.476 li
cp
f
844.805 524.979 mo
836.975 524.979 li
836.975 517.148 li
844.805 517.148 li
844.805 524.979 li
cp
f
844.805 537.481 mo
836.975 537.481 li
836.975 529.651 li
844.805 529.651 li
844.805 537.481 li
cp
f
844.805 549.986 mo
836.975 549.986 li
836.975 542.154 li
844.805 542.154 li
844.805 549.986 li
cp
f
844.805 562.49 mo
836.975 562.49 li
836.975 554.658 li
844.805 554.658 li
844.805 562.49 li
cp
f
844.805 574.993 mo
836.975 574.993 li
836.975 567.162 li
844.805 567.162 li
844.805 574.993 li
cp
f
844.805 587.497 mo
836.975 587.497 li
836.975 579.666 li
844.805 579.666 li
844.805 587.497 li
cp
f
844.805 600 mo
836.975 600 li
836.975 592.169 li
844.805 592.169 li
844.805 600 li
cp
f
844.805 637.51 mo
836.975 637.51 li
836.975 629.68 li
844.805 629.68 li
844.805 637.51 li
cp
f
844.805 650.013 mo
836.975 650.013 li
836.975 642.183 li
844.805 642.183 li
844.805 650.013 li
cp
f
844.805 662.516 mo
836.975 662.516 li
836.975 654.686 li
844.805 654.686 li
844.805 662.516 li
cp
f
844.805 762.544 mo
836.975 762.544 li
836.975 754.714 li
844.805 754.714 li
844.805 762.544 li
cp
f
844.805 775.048 mo
836.975 775.048 li
836.975 767.218 li
844.805 767.218 li
844.805 775.048 li
cp
f
857.309 399.944 mo
849.479 399.944 li
849.479 392.113 li
857.309 392.113 li
857.309 399.944 li
cp
f
857.309 412.448 mo
849.479 412.448 li
849.479 404.617 li
857.309 404.617 li
857.309 412.448 li
cp
f
857.309 424.951 mo
849.479 424.951 li
849.479 417.121 li
857.309 417.121 li
857.309 424.951 li
cp
f
857.309 437.455 mo
849.479 437.455 li
849.479 429.624 li
857.309 429.624 li
857.309 437.455 li
cp
f
857.309 449.958 mo
849.479 449.958 li
849.479 442.127 li
857.309 442.127 li
857.309 449.958 li
cp
f
857.309 462.461 mo
849.479 462.461 li
849.479 454.63 li
857.309 454.63 li
857.309 462.461 li
cp
f
857.309 474.965 mo
849.479 474.965 li
849.479 467.134 li
857.309 467.134 li
857.309 474.965 li
cp
f
857.309 487.469 mo
849.479 487.469 li
849.479 479.638 li
857.309 479.638 li
857.309 487.469 li
cp
f
857.309 499.972 mo
849.479 499.972 li
849.479 492.141 li
857.309 492.141 li
857.309 499.972 li
cp
f
857.309 512.476 mo
849.479 512.476 li
849.479 504.645 li
857.309 504.645 li
857.309 512.476 li
cp
f
857.309 524.979 mo
849.479 524.979 li
849.479 517.148 li
857.309 517.148 li
857.309 524.979 li
cp
f
857.309 537.481 mo
849.479 537.481 li
849.479 529.651 li
857.309 529.651 li
857.309 537.481 li
cp
f
857.309 549.986 mo
849.479 549.986 li
849.479 542.154 li
857.309 542.154 li
857.309 549.986 li
cp
f
857.309 562.49 mo
849.479 562.49 li
849.479 554.658 li
857.309 554.658 li
857.309 562.49 li
cp
f
857.309 574.993 mo
849.479 574.993 li
849.479 567.162 li
857.309 567.162 li
857.309 574.993 li
cp
f
869.813 399.944 mo
861.981 399.944 li
861.981 392.113 li
869.813 392.113 li
869.813 399.944 li
cp
f
869.813 412.448 mo
861.981 412.448 li
861.981 404.617 li
869.813 404.617 li
869.813 412.448 li
cp
f
869.813 424.951 mo
861.981 424.951 li
861.981 417.121 li
869.813 417.121 li
869.813 424.951 li
cp
f
869.813 437.455 mo
861.981 437.455 li
861.981 429.624 li
869.813 429.624 li
869.813 437.455 li
cp
f
869.813 449.958 mo
861.981 449.958 li
861.981 442.127 li
869.813 442.127 li
869.813 449.958 li
cp
f
869.813 462.461 mo
861.981 462.461 li
861.981 454.63 li
869.813 454.63 li
869.813 462.461 li
cp
f
869.813 474.965 mo
861.981 474.965 li
861.981 467.134 li
869.813 467.134 li
869.813 474.965 li
cp
f
869.813 487.469 mo
861.981 487.469 li
861.981 479.638 li
869.813 479.638 li
869.813 487.469 li
cp
f
869.813 499.972 mo
861.981 499.972 li
861.981 492.141 li
869.813 492.141 li
869.813 499.972 li
cp
f
869.813 512.476 mo
861.981 512.476 li
861.981 504.645 li
869.813 504.645 li
869.813 512.476 li
cp
f
869.813 524.979 mo
861.981 524.979 li
861.981 517.148 li
869.813 517.148 li
869.813 524.979 li
cp
f
869.813 562.49 mo
861.981 562.49 li
861.981 554.658 li
869.813 554.658 li
869.813 562.49 li
cp
f
882.315 399.944 mo
874.486 399.944 li
874.486 392.113 li
882.315 392.113 li
882.315 399.944 li
cp
f
882.315 412.448 mo
874.486 412.448 li
874.486 404.617 li
882.315 404.617 li
882.315 412.448 li
cp
f
882.315 424.951 mo
874.486 424.951 li
874.486 417.121 li
882.315 417.121 li
882.315 424.951 li
cp
f
882.315 437.455 mo
874.486 437.455 li
874.486 429.624 li
882.315 429.624 li
882.315 437.455 li
cp
f
882.315 449.958 mo
874.486 449.958 li
874.486 442.127 li
882.315 442.127 li
882.315 449.958 li
cp
f
882.315 462.461 mo
874.486 462.461 li
874.486 454.63 li
882.315 454.63 li
882.315 462.461 li
cp
f
882.315 499.972 mo
874.486 499.972 li
874.486 492.141 li
882.315 492.141 li
882.315 499.972 li
cp
f
882.315 512.476 mo
874.486 512.476 li
874.486 504.645 li
882.315 504.645 li
882.315 512.476 li
cp
f
894.818 399.944 mo
886.988 399.944 li
886.988 392.113 li
894.818 392.113 li
894.818 399.944 li
cp
f
894.818 412.448 mo
886.988 412.448 li
886.988 404.617 li
894.818 404.617 li
894.818 412.448 li
cp
f
894.818 424.951 mo
886.988 424.951 li
886.988 417.121 li
894.818 417.121 li
894.818 424.951 li
cp
f
894.818 437.455 mo
886.988 437.455 li
886.988 429.624 li
894.818 429.624 li
894.818 437.455 li
cp
f
894.818 499.972 mo
886.988 499.972 li
886.988 492.141 li
894.818 492.141 li
894.818 499.972 li
cp
f
894.818 512.476 mo
886.988 512.476 li
886.988 504.645 li
894.818 504.645 li
894.818 512.476 li
cp
f
894.818 524.979 mo
886.988 524.979 li
886.988 517.148 li
894.818 517.148 li
894.818 524.979 li
cp
f
907.322 412.448 mo
899.492 412.448 li
899.492 404.617 li
907.322 404.617 li
907.322 412.448 li
cp
f
907.322 424.951 mo
899.492 424.951 li
899.492 417.121 li
907.322 417.121 li
907.322 424.951 li
cp
f
907.322 437.455 mo
899.492 437.455 li
899.492 429.624 li
907.322 429.624 li
907.322 437.455 li
cp
f
907.322 449.958 mo
899.492 449.958 li
899.492 442.127 li
907.322 442.127 li
907.322 449.958 li
cp
f
907.322 462.461 mo
899.492 462.461 li
899.492 454.63 li
907.322 454.63 li
907.322 462.461 li
cp
f
907.322 487.469 mo
899.492 487.469 li
899.492 479.638 li
907.322 479.638 li
907.322 487.469 li
cp
f
907.322 499.972 mo
899.492 499.972 li
899.492 492.141 li
907.322 492.141 li
907.322 499.972 li
cp
f
919.826 424.951 mo
911.995 424.951 li
911.995 417.121 li
919.826 417.121 li
919.826 424.951 li
cp
f
919.826 437.455 mo
911.995 437.455 li
911.995 429.624 li
919.826 429.624 li
919.826 437.455 li
cp
f
919.826 449.958 mo
911.995 449.958 li
911.995 442.127 li
919.826 442.127 li
919.826 449.958 li
cp
f
919.826 462.461 mo
911.995 462.461 li
911.995 454.63 li
919.826 454.63 li
919.826 462.461 li
cp
f
919.826 487.469 mo
911.995 487.469 li
911.995 479.638 li
919.826 479.638 li
919.826 487.469 li
cp
f
932.329 424.951 mo
924.498 424.951 li
924.498 417.121 li
932.329 417.121 li
932.329 424.951 li
cp
f
932.329 437.455 mo
924.498 437.455 li
924.498 429.624 li
932.329 429.624 li
932.329 437.455 li
cp
f
932.329 449.958 mo
924.498 449.958 li
924.498 442.127 li
932.329 442.127 li
932.329 449.958 li
cp
f
944.833 437.455 mo
937.002 437.455 li
937.002 429.624 li
944.833 429.624 li
944.833 437.455 li
cp
f
944.833 449.958 mo
937.002 449.958 li
937.002 442.127 li
944.833 442.127 li
944.833 449.958 li
cp
f
957.337 437.455 mo
949.506 437.455 li
949.506 429.624 li
957.337 429.624 li
957.337 437.455 li
cp
f
957.337 449.958 mo
949.506 449.958 li
949.506 442.127 li
957.337 442.127 li
957.337 449.958 li
cp
f
744.778 274.91 mo
736.947 274.91 li
736.947 267.079 li
744.778 267.079 li
744.778 274.91 li
cp
f
732.273 274.91 mo
724.444 274.91 li
724.444 267.079 li
732.273 267.079 li
732.273 274.91 li
cp
f
719.771 274.91 mo
711.94 274.91 li
711.94 267.079 li
719.771 267.079 li
719.771 274.91 li
cp
f
707.267 274.91 mo
699.438 274.91 li
699.438 267.079 li
707.267 267.079 li
707.267 274.91 li
cp
f
694.764 274.91 mo
686.934 274.91 li
686.934 267.079 li
694.764 267.079 li
694.764 274.91 li
cp
f
682.261 274.91 mo
674.43 274.91 li
674.43 267.079 li
682.261 267.079 li
682.261 274.91 li
cp
f
669.757 274.91 mo
661.927 274.91 li
661.927 267.079 li
669.757 267.079 li
669.757 274.91 li
cp
f
657.253 274.91 mo
649.422 274.91 li
649.422 267.079 li
657.253 267.079 li
657.253 274.91 li
cp
f
632.247 274.91 mo
624.415 274.91 li
624.415 267.079 li
632.247 267.079 li
632.247 274.91 li
cp
f
619.744 274.91 mo
611.913 274.91 li
611.913 267.079 li
619.744 267.079 li
619.744 274.91 li
cp
f
594.736 274.91 mo
586.905 274.91 li
586.905 267.079 li
594.736 267.079 li
594.736 274.91 li
cp
f
582.232 274.91 mo
574.402 274.91 li
574.402 267.079 li
582.232 267.079 li
582.232 274.91 li
cp
f
569.729 274.91 mo
561.899 274.91 li
561.899 267.079 li
569.729 267.079 li
569.729 274.91 li
cp
f
557.226 274.91 mo
549.395 274.91 li
549.395 267.079 li
557.226 267.079 li
557.226 274.91 li
cp
f
544.723 274.91 mo
536.892 274.91 li
536.892 267.079 li
544.723 267.079 li
544.723 274.91 li
cp
f
532.219 274.91 mo
524.389 274.91 li
524.389 267.079 li
532.219 267.079 li
532.219 274.91 li
cp
f
469.702 274.91 mo
461.871 274.91 li
461.871 267.079 li
469.702 267.079 li
469.702 274.91 li
cp
f
457.197 274.91 mo
449.367 274.91 li
449.367 267.079 li
457.197 267.079 li
457.197 274.91 li
cp
f
444.694 274.91 mo
436.864 274.91 li
436.864 267.079 li
444.694 267.079 li
444.694 274.91 li
cp
f
432.19 274.91 mo
424.361 274.91 li
424.361 267.079 li
432.19 267.079 li
432.19 274.91 li
cp
f
419.688 274.91 mo
411.857 274.91 li
411.857 267.079 li
419.688 267.079 li
419.688 274.91 li
cp
f
407.184 274.91 mo
399.354 274.91 li
399.354 267.079 li
407.184 267.079 li
407.184 274.91 li
cp
f
394.68 274.91 mo
386.85 274.91 li
386.85 267.079 li
394.68 267.079 li
394.68 274.91 li
cp
f
382.176 274.91 mo
374.347 274.91 li
374.347 267.079 li
382.176 267.079 li
382.176 274.91 li
cp
f
369.673 274.91 mo
361.843 274.91 li
361.843 267.079 li
369.673 267.079 li
369.673 274.91 li
cp
f
357.17 274.91 mo
349.34 274.91 li
349.34 267.079 li
357.17 267.079 li
357.17 274.91 li
cp
f
344.667 274.91 mo
336.836 274.91 li
336.836 267.079 li
344.667 267.079 li
344.667 274.91 li
cp
f
332.163 274.91 mo
324.333 274.91 li
324.333 267.079 li
332.163 267.079 li
332.163 274.91 li
cp
f
319.66 274.91 mo
311.83 274.91 li
311.83 267.079 li
319.66 267.079 li
319.66 274.91 li
cp
f
307.156 274.91 mo
299.326 274.91 li
299.326 267.079 li
307.156 267.079 li
307.156 274.91 li
cp
f
294.653 274.91 mo
286.823 274.91 li
286.823 267.079 li
294.653 267.079 li
294.653 274.91 li
cp
f
719.771 262.406 mo
711.94 262.406 li
711.94 254.576 li
719.771 254.576 li
719.771 262.406 li
cp
f
707.267 262.406 mo
699.438 262.406 li
699.438 254.576 li
707.267 254.576 li
707.267 262.406 li
cp
f
694.764 262.406 mo
686.934 262.406 li
686.934 254.576 li
694.764 254.576 li
694.764 262.406 li
cp
f
682.261 262.406 mo
674.43 262.406 li
674.43 254.576 li
682.261 254.576 li
682.261 262.406 li
cp
f
669.757 262.406 mo
661.927 262.406 li
661.927 254.576 li
669.757 254.576 li
669.757 262.406 li
cp
f
657.253 262.406 mo
649.422 262.406 li
649.422 254.576 li
657.253 254.576 li
657.253 262.406 li
cp
f
644.75 262.406 mo
636.919 262.406 li
636.919 254.576 li
644.75 254.576 li
644.75 262.406 li
cp
f
632.247 262.406 mo
624.415 262.406 li
624.415 254.576 li
632.247 254.576 li
632.247 262.406 li
cp
f
619.744 262.406 mo
611.913 262.406 li
611.913 254.576 li
619.744 254.576 li
619.744 262.406 li
cp
f
594.736 262.406 mo
586.905 262.406 li
586.905 254.576 li
594.736 254.576 li
594.736 262.406 li
cp
f
569.729 262.406 mo
561.899 262.406 li
561.899 254.576 li
569.729 254.576 li
569.729 262.406 li
cp
f
557.226 262.406 mo
549.395 262.406 li
549.395 254.576 li
557.226 254.576 li
557.226 262.406 li
cp
f
544.723 262.406 mo
536.892 262.406 li
536.892 254.576 li
544.723 254.576 li
544.723 262.406 li
cp
f
532.219 262.406 mo
524.389 262.406 li
524.389 254.576 li
532.219 254.576 li
532.219 262.406 li
cp
f
457.197 262.406 mo
449.367 262.406 li
449.367 254.576 li
457.197 254.576 li
457.197 262.406 li
cp
f
444.694 262.406 mo
436.864 262.406 li
436.864 254.576 li
444.694 254.576 li
444.694 262.406 li
cp
f
432.19 262.406 mo
424.361 262.406 li
424.361 254.576 li
432.19 254.576 li
432.19 262.406 li
cp
f
419.688 262.406 mo
411.857 262.406 li
411.857 254.576 li
419.688 254.576 li
419.688 262.406 li
cp
f
407.184 262.406 mo
399.354 262.406 li
399.354 254.576 li
407.184 254.576 li
407.184 262.406 li
cp
f
394.68 262.406 mo
386.85 262.406 li
386.85 254.576 li
394.68 254.576 li
394.68 262.406 li
cp
f
382.176 262.406 mo
374.347 262.406 li
374.347 254.576 li
382.176 254.576 li
382.176 262.406 li
cp
f
369.673 262.406 mo
361.843 262.406 li
361.843 254.576 li
369.673 254.576 li
369.673 262.406 li
cp
f
357.17 262.406 mo
349.34 262.406 li
349.34 254.576 li
357.17 254.576 li
357.17 262.406 li
cp
f
344.667 262.406 mo
336.836 262.406 li
336.836 254.576 li
344.667 254.576 li
344.667 262.406 li
cp
f
332.163 262.406 mo
324.333 262.406 li
324.333 254.576 li
332.163 254.576 li
332.163 262.406 li
cp
f
319.66 262.406 mo
311.83 262.406 li
311.83 254.576 li
319.66 254.576 li
319.66 262.406 li
cp
f
294.653 262.406 mo
286.823 262.406 li
286.823 254.576 li
294.653 254.576 li
294.653 262.406 li
cp
f
694.764 249.902 mo
686.934 249.902 li
686.934 242.072 li
694.764 242.072 li
694.764 249.902 li
cp
f
682.261 249.902 mo
674.43 249.902 li
674.43 242.072 li
682.261 242.072 li
682.261 249.902 li
cp
f
644.75 249.902 mo
636.919 249.902 li
636.919 242.072 li
644.75 242.072 li
644.75 249.902 li
cp
f
582.232 249.902 mo
574.402 249.902 li
574.402 242.072 li
582.232 242.072 li
582.232 249.902 li
cp
f
557.226 249.902 mo
549.395 249.902 li
549.395 242.072 li
557.226 242.072 li
557.226 249.902 li
cp
f
544.723 249.902 mo
536.892 249.902 li
536.892 242.072 li
544.723 242.072 li
544.723 249.902 li
cp
f
444.694 249.902 mo
436.864 249.902 li
436.864 242.072 li
444.694 242.072 li
444.694 249.902 li
cp
f
432.19 249.902 mo
424.361 249.902 li
424.361 242.072 li
432.19 242.072 li
432.19 249.902 li
cp
f
419.688 249.902 mo
411.857 249.902 li
411.857 242.072 li
419.688 242.072 li
419.688 249.902 li
cp
f
407.184 249.902 mo
399.354 249.902 li
399.354 242.072 li
407.184 242.072 li
407.184 249.902 li
cp
f
394.68 249.902 mo
386.85 249.902 li
386.85 242.072 li
394.68 242.072 li
394.68 249.902 li
cp
f
382.176 249.902 mo
374.347 249.902 li
374.347 242.072 li
382.176 242.072 li
382.176 249.902 li
cp
f
369.673 249.902 mo
361.843 249.902 li
361.843 242.072 li
369.673 242.072 li
369.673 249.902 li
cp
f
357.17 249.902 mo
349.34 249.902 li
349.34 242.072 li
357.17 242.072 li
357.17 249.902 li
cp
f
669.757 237.399 mo
661.927 237.399 li
661.927 229.569 li
669.757 229.569 li
669.757 237.399 li
cp
f
657.253 237.399 mo
649.422 237.399 li
649.422 229.569 li
657.253 229.569 li
657.253 237.399 li
cp
f
644.75 237.399 mo
636.919 237.399 li
636.919 229.569 li
644.75 229.569 li
644.75 237.399 li
cp
f
632.247 237.399 mo
624.415 237.399 li
624.415 229.569 li
632.247 229.569 li
632.247 237.399 li
cp
f
619.744 237.399 mo
611.913 237.399 li
611.913 229.569 li
619.744 229.569 li
619.744 237.399 li
cp
f
607.239 237.399 mo
599.409 237.399 li
599.409 229.569 li
607.239 229.569 li
607.239 237.399 li
cp
f
594.736 237.399 mo
586.905 237.399 li
586.905 229.569 li
594.736 229.569 li
594.736 237.399 li
cp
f
582.232 237.399 mo
574.402 237.399 li
574.402 229.569 li
582.232 229.569 li
582.232 237.399 li
cp
f
569.729 237.399 mo
561.899 237.399 li
561.899 229.569 li
569.729 229.569 li
569.729 237.399 li
cp
f
432.19 237.399 mo
424.361 237.399 li
424.361 229.569 li
432.19 229.569 li
432.19 237.399 li
cp
f
419.688 237.399 mo
411.857 237.399 li
411.857 229.569 li
419.688 229.569 li
419.688 237.399 li
cp
f
407.184 237.399 mo
399.354 237.399 li
399.354 229.569 li
407.184 229.569 li
407.184 237.399 li
cp
f
394.68 237.399 mo
386.85 237.399 li
386.85 229.569 li
394.68 229.569 li
394.68 237.399 li
cp
f
382.176 237.399 mo
374.347 237.399 li
374.347 229.569 li
382.176 229.569 li
382.176 237.399 li
cp
f
357.17 237.399 mo
349.34 237.399 li
349.34 229.569 li
357.17 229.569 li
357.17 237.399 li
cp
f
344.667 237.399 mo
336.836 237.399 li
336.836 229.569 li
344.667 229.569 li
344.667 237.399 li
cp
f
669.757 224.896 mo
661.927 224.896 li
661.927 217.065 li
669.757 217.065 li
669.757 224.896 li
cp
f
644.75 224.896 mo
636.919 224.896 li
636.919 217.065 li
644.75 217.065 li
644.75 224.896 li
cp
f
632.247 224.896 mo
624.415 224.896 li
624.415 217.065 li
632.247 217.065 li
632.247 224.896 li
cp
f
619.744 224.896 mo
611.913 224.896 li
611.913 217.065 li
619.744 217.065 li
619.744 224.896 li
cp
f
607.239 224.896 mo
599.409 224.896 li
599.409 217.065 li
607.239 217.065 li
607.239 224.896 li
cp
f
594.736 224.896 mo
586.905 224.896 li
586.905 217.065 li
594.736 217.065 li
594.736 224.896 li
cp
f
582.232 224.896 mo
574.402 224.896 li
574.402 217.065 li
582.232 217.065 li
582.232 224.896 li
cp
f
569.729 224.896 mo
561.899 224.896 li
561.899 217.065 li
569.729 217.065 li
569.729 224.896 li
cp
f
557.226 224.896 mo
549.395 224.896 li
549.395 217.065 li
557.226 217.065 li
557.226 224.896 li
cp
f
419.688 224.896 mo
411.857 224.896 li
411.857 217.065 li
419.688 217.065 li
419.688 224.896 li
cp
f
407.184 224.896 mo
399.354 224.896 li
399.354 217.065 li
407.184 217.065 li
407.184 224.896 li
cp
f
394.68 224.896 mo
386.85 224.896 li
386.85 217.065 li
394.68 217.065 li
394.68 224.896 li
cp
f
382.176 224.896 mo
374.347 224.896 li
374.347 217.065 li
382.176 217.065 li
382.176 224.896 li
cp
f
369.673 224.896 mo
361.843 224.896 li
361.843 217.065 li
369.673 217.065 li
369.673 224.896 li
cp
f
344.667 224.896 mo
336.836 224.896 li
336.836 217.065 li
344.667 217.065 li
344.667 224.896 li
cp
f
669.757 212.393 mo
661.927 212.393 li
661.927 204.562 li
669.757 204.562 li
669.757 212.393 li
cp
f
657.253 212.393 mo
649.422 212.393 li
649.422 204.562 li
657.253 204.562 li
657.253 212.393 li
cp
f
569.729 212.393 mo
561.899 212.393 li
561.899 204.562 li
569.729 204.562 li
569.729 212.393 li
cp
f
557.226 212.393 mo
549.395 212.393 li
549.395 204.562 li
557.226 204.562 li
557.226 212.393 li
cp
f
407.184 212.393 mo
399.354 212.393 li
399.354 204.562 li
407.184 204.562 li
407.184 212.393 li
cp
f
394.68 212.393 mo
386.85 212.393 li
386.85 204.562 li
394.68 204.562 li
394.68 212.393 li
cp
f
382.176 212.393 mo
374.347 212.393 li
374.347 204.562 li
382.176 204.562 li
382.176 212.393 li
cp
f
369.673 212.393 mo
361.843 212.393 li
361.843 204.562 li
369.673 204.562 li
369.673 212.393 li
cp
f
669.757 199.888 mo
661.927 199.888 li
661.927 192.058 li
669.757 192.058 li
669.757 199.888 li
cp
f
657.253 199.888 mo
649.422 199.888 li
649.422 192.058 li
657.253 192.058 li
657.253 199.888 li
cp
f
644.75 199.888 mo
636.919 199.888 li
636.919 192.058 li
644.75 192.058 li
644.75 199.888 li
cp
f
632.247 199.888 mo
624.415 199.888 li
624.415 192.058 li
632.247 192.058 li
632.247 199.888 li
cp
f
619.744 199.888 mo
611.913 199.888 li
611.913 192.058 li
619.744 192.058 li
619.744 199.888 li
cp
f
607.239 199.888 mo
599.409 199.888 li
599.409 192.058 li
607.239 192.058 li
607.239 199.888 li
cp
f
582.232 199.888 mo
574.402 199.888 li
574.402 192.058 li
582.232 192.058 li
582.232 199.888 li
cp
f
682.261 187.385 mo
674.43 187.385 li
674.43 179.555 li
682.261 179.555 li
682.261 187.385 li
cp
f
669.757 187.385 mo
661.927 187.385 li
661.927 179.555 li
669.757 179.555 li
669.757 187.385 li
cp
f
657.253 187.385 mo
649.422 187.385 li
649.422 179.555 li
657.253 179.555 li
657.253 187.385 li
cp
f
644.75 187.385 mo
636.919 187.385 li
636.919 179.555 li
644.75 179.555 li
644.75 187.385 li
cp
f
632.247 187.385 mo
624.415 187.385 li
624.415 179.555 li
632.247 179.555 li
632.247 187.385 li
cp
f
607.239 187.385 mo
599.409 187.385 li
599.409 179.555 li
607.239 179.555 li
607.239 187.385 li
cp
f
682.261 174.882 mo
674.43 174.882 li
674.43 167.051 li
682.261 167.051 li
682.261 174.882 li
cp
f
669.757 174.882 mo
661.927 174.882 li
661.927 167.051 li
669.757 167.051 li
669.757 174.882 li
cp
f
657.253 174.882 mo
649.422 174.882 li
649.422 167.051 li
657.253 167.051 li
657.253 174.882 li
cp
f
644.75 174.882 mo
636.919 174.882 li
636.919 167.051 li
644.75 167.051 li
644.75 174.882 li
cp
f
632.247 174.882 mo
624.415 174.882 li
624.415 167.051 li
632.247 167.051 li
632.247 174.882 li
cp
f
682.261 162.378 mo
674.43 162.378 li
674.43 154.547 li
682.261 154.547 li
682.261 162.378 li
cp
f
669.757 162.378 mo
661.927 162.378 li
661.927 154.547 li
669.757 154.547 li
669.757 162.378 li
cp
f
657.253 162.378 mo
649.422 162.378 li
649.422 154.547 li
657.253 154.547 li
657.253 162.378 li
cp
f
644.75 162.378 mo
636.919 162.378 li
636.919 154.547 li
644.75 154.547 li
644.75 162.378 li
cp
f
632.247 162.378 mo
624.415 162.378 li
624.415 154.547 li
632.247 154.547 li
632.247 162.378 li
cp
f
682.261 149.875 mo
674.43 149.875 li
674.43 142.045 li
682.261 142.045 li
682.261 149.875 li
cp
f
669.757 149.875 mo
661.927 149.875 li
661.927 142.045 li
669.757 142.045 li
669.757 149.875 li
cp
f
657.253 149.875 mo
649.422 149.875 li
649.422 142.045 li
657.253 142.045 li
657.253 149.875 li
cp
f
644.75 149.875 mo
636.919 149.875 li
636.919 142.045 li
644.75 142.045 li
644.75 149.875 li
cp
f
682.261 137.372 mo
674.43 137.372 li
674.43 129.541 li
682.261 129.541 li
682.261 137.372 li
cp
f
669.757 137.372 mo
661.927 137.372 li
661.927 129.541 li
669.757 129.541 li
669.757 137.372 li
cp
f
657.253 137.372 mo
649.422 137.372 li
649.422 129.541 li
657.253 129.541 li
657.253 137.372 li
cp
f
682.261 124.868 mo
674.43 124.868 li
674.43 117.037 li
682.261 117.037 li
682.261 124.868 li
cp
f
669.757 124.868 mo
661.927 124.868 li
661.927 117.037 li
669.757 117.037 li
669.757 124.868 li
cp
f
419.79 1089.91 mo
419.79 1053.96 li
424.911 1053.96 li
436.38 1072.15 li
438.994 1076.36 441.128 1080.15 442.782 1083.83 cv
442.941 1083.78 li
442.515 1078.98 442.408 1074.6 442.408 1069 cv
442.408 1053.96 li
446.782 1053.96 li
446.782 1089.91 li
442.088 1089.91 li
430.672 1071.67 li
428.165 1067.67 425.765 1063.56 424.004 1059.66 cv
423.844 1059.72 li
424.111 1064.25 424.164 1068.57 424.164 1074.55 cv
424.164 1089.91 li
419.79 1089.91 li
cp
f
457.667 1077.05 mo
457.667 1082.71 460.868 1086.98 465.456 1086.98 cv
469.937 1086.98 473.297 1082.76 473.297 1076.95 cv
473.297 1072.57 471.11 1067.08 465.563 1067.08 cv
460.068 1067.08 457.667 1072.2 457.667 1077.05 cv
cp
478.099 1076.79 mo
478.099 1086.34 471.431 1090.5 465.242 1090.5 cv
458.308 1090.5 452.866 1085.38 452.866 1077.21 cv
452.866 1068.63 458.574 1063.56 465.669 1063.56 cv
473.084 1063.56 478.099 1068.95 478.099 1076.79 cv
cp
f
484.022 1072.15 mo
484.022 1069.11 483.969 1066.49 483.809 1064.09 cv
487.917 1064.09 li
488.13 1069.21 li
488.29 1069.21 li
489.464 1065.75 492.344 1063.56 495.492 1063.56 cv
495.972 1063.56 496.345 1063.61 496.772 1063.67 cv
496.772 1068.09 li
496.292 1067.99 495.812 1067.99 495.172 1067.99 cv
491.864 1067.99 489.517 1070.44 488.877 1073.96 cv
488.771 1074.6 488.717 1075.4 488.717 1076.15 cv
488.717 1089.91 li
484.022 1089.91 li
484.022 1072.15 li
cp
f
508.402 1057.9 mo
508.402 1064.09 li
515.124 1064.09 li
515.124 1067.67 li
508.402 1067.67 li
508.402 1081.59 li
508.402 1084.79 509.309 1086.6 511.923 1086.6 cv
513.203 1086.6 513.95 1086.5 514.644 1086.28 cv
514.857 1089.86 li
513.95 1090.18 512.51 1090.5 510.696 1090.5 cv
508.509 1090.5 506.749 1089.75 505.628 1088.52 cv
504.348 1087.08 503.814 1084.79 503.814 1081.75 cv
503.814 1067.67 li
499.813 1067.67 li
499.813 1064.09 li
503.814 1064.09 li
503.814 1059.29 li
508.402 1057.9 li
cp
f
520.406 1052.04 mo
525.1 1052.04 li
525.1 1068.2 li
525.207 1068.2 li
525.954 1066.87 527.127 1065.64 528.567 1064.84 cv
529.955 1064.04 531.608 1063.56 533.369 1063.56 cv
536.836 1063.56 542.384 1065.69 542.384 1074.55 cv
542.384 1089.91 li
537.689 1089.91 li
537.689 1075.08 li
537.689 1070.92 536.143 1067.45 531.715 1067.45 cv
528.674 1067.45 526.327 1069.59 525.42 1072.09 cv
525.153 1072.79 525.1 1073.48 525.1 1074.33 cv
525.1 1089.91 li
520.406 1089.91 li
520.406 1052.04 li
cp
f
579.142 1074.97 mo
575.567 1064.63 li
574.767 1062.28 574.234 1060.14 573.7 1058.06 cv
573.594 1058.06 li
573.06 1060.14 572.527 1062.38 571.78 1064.57 cv
568.259 1074.97 li
579.142 1074.97 li
cp
567.299 1078.6 mo
563.565 1089.91 li
558.764 1089.91 li
571.033 1053.96 li
576.581 1053.96 li
588.851 1089.91 li
583.889 1089.91 li
580.048 1078.6 li
567.299 1078.6 li
cp
f
593.815 1071.08 mo
593.815 1068.36 593.708 1066.23 593.602 1064.09 cv
597.709 1064.09 li
597.923 1068.31 li
598.083 1068.31 li
599.523 1065.85 601.924 1063.56 606.244 1063.56 cv
609.712 1063.56 612.379 1065.69 613.499 1068.73 cv
613.605 1068.73 li
614.406 1067.24 615.473 1066.17 616.54 1065.37 cv
618.087 1064.2 619.74 1063.56 622.194 1063.56 cv
625.662 1063.56 630.729 1065.8 630.729 1074.76 cv
630.729 1089.91 li
626.142 1089.91 li
626.142 1075.35 li
626.142 1070.33 624.275 1067.4 620.541 1067.4 cv
617.82 1067.4 615.793 1069.37 614.939 1071.61 cv
614.727 1072.31 614.566 1073.11 614.566 1073.96 cv
614.566 1089.91 li
609.979 1089.91 li
609.979 1074.44 li
609.979 1070.33 608.165 1067.4 604.591 1067.4 cv
601.71 1067.4 599.523 1069.75 598.776 1072.09 cv
598.51 1072.73 598.402 1073.59 598.402 1074.39 cv
598.402 1089.91 li
593.815 1089.91 li
593.815 1071.08 li
cp
f
654.686 1074.49 mo
654.738 1071.56 653.458 1066.92 648.177 1066.92 cv
643.376 1066.92 641.349 1071.24 640.976 1074.49 cv
654.686 1074.49 li
cp
640.922 1077.85 mo
641.029 1084.2 645.029 1086.82 649.777 1086.82 cv
653.138 1086.82 655.219 1086.23 656.926 1085.48 cv
657.779 1088.84 li
656.125 1089.59 653.245 1090.5 649.137 1090.5 cv
641.188 1090.5 636.441 1085.22 636.441 1077.43 cv
636.441 1069.64 641.029 1063.56 648.551 1063.56 cv
657.032 1063.56 659.22 1070.92 659.22 1075.67 cv
659.22 1076.63 659.166 1077.32 659.06 1077.85 cv
640.922 1077.85 li
cp
f
665.037 1072.15 mo
665.037 1069.11 664.983 1066.49 664.823 1064.09 cv
668.931 1064.09 li
669.145 1069.21 li
669.305 1069.21 li
670.478 1065.75 673.358 1063.56 676.506 1063.56 cv
676.986 1063.56 677.359 1063.61 677.786 1063.67 cv
677.786 1068.09 li
677.306 1067.99 676.826 1067.99 676.186 1067.99 cv
672.879 1067.99 670.531 1070.44 669.891 1073.96 cv
669.784 1074.6 669.731 1075.4 669.731 1076.15 cv
669.731 1089.91 li
665.037 1089.91 li
665.037 1072.15 li
cp
f
682.695 1089.91 mo
682.695 1064.09 li
687.39 1064.09 li
687.39 1089.91 li
682.695 1089.91 li
cp
687.923 1056.84 mo
687.923 1058.44 686.803 1059.72 684.936 1059.72 cv
683.229 1059.72 682.108 1058.44 682.108 1056.84 cv
682.108 1055.24 683.281 1053.9 685.042 1053.9 cv
686.749 1053.9 687.923 1055.18 687.923 1056.84 cv
cp
f
713.582 1089 mo
712.355 1089.59 709.635 1090.5 706.167 1090.5 cv
698.379 1090.5 693.312 1085.22 693.312 1077.32 cv
693.312 1069.37 698.752 1063.56 707.181 1063.56 cv
709.955 1063.56 712.408 1064.25 713.689 1064.94 cv
712.622 1068.52 li
711.502 1067.93 709.741 1067.29 707.181 1067.29 cv
701.26 1067.29 698.059 1071.72 698.059 1077.05 cv
698.059 1083.03 701.899 1086.71 707.021 1086.71 cv
709.688 1086.71 711.448 1086.07 712.782 1085.48 cv
713.582 1089 li
cp
f
732.682 1076.73 mo
727.561 1076.63 721.746 1077.53 721.746 1082.55 cv
721.746 1085.64 723.773 1087.03 726.12 1087.03 cv
729.534 1087.03 731.722 1084.9 732.469 1082.71 cv
732.628 1082.18 732.682 1081.64 732.682 1081.22 cv
732.682 1076.73 li
cp
737.216 1083.72 mo
737.216 1085.96 737.322 1088.15 737.59 1089.91 cv
733.375 1089.91 li
733.002 1086.66 li
732.842 1086.66 li
731.401 1088.68 728.627 1090.5 724.946 1090.5 cv
719.719 1090.5 717.052 1086.82 717.052 1083.08 cv
717.052 1076.84 722.6 1073.43 732.575 1073.48 cv
732.575 1072.95 li
732.575 1070.87 731.988 1066.97 726.707 1067.03 cv
724.253 1067.03 721.746 1067.72 719.933 1068.95 cv
718.865 1065.8 li
720.999 1064.47 724.146 1063.56 727.4 1063.56 cv
735.296 1063.56 737.216 1068.95 737.216 1074.07 cv
737.216 1083.72 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (dell) ()
%%Title: (north america-me.eps)
%%CreationDate: 1/18/2017 11:52 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H&iufPoojP"8iZ'*s!"G7;'U]H4L3p]4:Y.,=+J&cX:-;3,H#kRnK6q[]K5fht`fhQFpA>,3tE:Sm`q'<HW1i/142_4X,@F
%Mp'^:^A@R!X$9t*r]e.XXJm8l]Gsu@1B7+4X'bea5<o1sZQHWp*f%g*+0TI'.%221eJJ$5a#2l$ldnp^I/3-ZgHWDtrUebR5?tmN
%nbUK@^H#QtmE)EHn"9NG5'_2Dk@ZGS]`.6Uo#6fjs-)<Mphfrkq#&+;j6JWWT=d<`XUOjZnB:k,"2.,<i-0nTp=7V.5CWLrO7`FX
%Dh%YI56$0uakuS0?U&o7QF]emY3=9`n,N4`*IICI_t#dbm-@9YX=5d<iKkCe9D$E5A@K(d0E:IZl[O?RipchXh`cPem*2"IYFa,I
%/mnPOlrU.Xs.Y\,LS^Z,*+B6Fm]uVqs'h8kn]*T7k''bFe6jqTgIm%jk1R(BmB'E=%4Uem27ZV'H1t+\^--m#f"-UW<Oh8Ql)S1k
%Y90D7n<a,`9eM1"mC:`So:jI/^:<J"bCB?:ZTg\SiU**^DkFdnp##SoMr,kLg97,ss$T&D.Jo*hV[j<icb=bsj,:B%kD*B$IXV*o
%K/E(QmfE68h]gQcF,N69Ht`S-I_F`J06[12IWl$H#h%!?s*0M]S.nN;JWT'Y=\iAi(&a:W#tk/OB.q#Ln`9'n?:$Xbq@>Scr83"5
%U9k!3=GZ5";`_!Q#`!Qq5n!=Mp$@/mJ+hLO*<,Q9-f7+7UC6;Fc.fFos*qCPf!m:/T76:-+(%-Wo8g)H^Em,FL/l(hmpCSAm"MMQ
%Xl0!6$!,<,&cQ-1r54^WIt%*W(rPYU56CYq3L&+;huEKBG>J53m*-&A@K#=!h`lJ\&$Q!`GP0R!+kBL_I(TS/3_s,4bMj$YQNJ!E
%4Z)ZY=h?ee>!&`N7FhV5W'A^.s21>hIt%C^2qH%Ic/63[rbZ$B`28Fia0e)`_frM,m4JkImFu9WXT,?uk3D]SVIb&NqldDeJ,%3J
%0E:^qPNP3&/,W]"ThD-P=4^7)55EI>a0J+%T`9)Cr7bH<::s[kr_Ek#f8BU3XpbYji.$.>4[/OF5!9t_Fa5Pb'MAa^V1`;,Tiaq-
%UK(JJb1);(Q+m%d>#DA%'Z4ka+2tCc;!dHSY?kMnPH-3u3?I_TnX's(IQX@?nL-%^VkqSb,AC(?`N/^Cp[gLqTGY\&s%s3bZI-g-
%(_ls>)%6lPo@OKmnhS4=s7$m0L&Y#8+A8`ST^Y1,*PVT5EM6CKWUp200Jr]g1<1VI2G;hN_6i,u:ker2<>iIY5e8V^PP2QY2H<dG
%^/,5J`;cc.-;m;cTBX;Q(DOb(D5IIonhS4@s7$m0.!1">[IXCWIh]d;n\7bpOGb5_H@Ro5(:`s*8N(_>7DV-E$1\K`13sf<G@%j-
%/PFnXD,S<d:^."Y)T;^PFW%`;N%s=A'GFZj(^2S`1B'c]%$4dS.^tZgk`[oXdZ'cVBT2Aho0P3!'XgPKD?]pc5Jb%?/BHksgVhb>
%V#)QPm7[+MJUB(Wg3Hi"6J4-gJfq&PaBq9VIJ(cFoX_0]^<R-iI2rTigD]:?aKKf&ZBa<[gMkt]"+;qHo'7;Bem7UI[4E'9X6[@d
%(Odj7>kQ9#q5F=XY7Td`r_pPpob[k^J'(j<not*_?_tj$V6ng3IU-4"8,]?5?!b\2rMP%jlds_il9FCrk!o@<5NQZp?cqOdL\P6=
%=8oYCj<qt2_GuE4j$e7nDb.,DGjR;:h>Y1d-bk,FU3f+m[Qj-/:YGTjC>qGBlc8<;&4V\;H2RL^5NVPKHM+UZrBkP-<;3*DTBYZ.
%)"1X'5Ekd>^t(`J"oD65/do^cbjiU%*+&Z\=$O%BIm+P?nR$2;EpM&$+7*I//jA<Pql$\cOF44r61*.pWEOdY"F`E)@#o+gB'\p:
%0RfJ`*c#lnqU;nP3A&nBomDt,n\k81>Q5,^"2Y2Fi8jda[f04Lqq^/F!Z#^ghL>$8RFSnb;X=79/_e;.n+@%a6oaBenaBPki6F,&
%4BMcQasV!'ZdLIn23d;K!lpj7I%o1F4tH#PW8Qf_A1Z5YB(7U4p-.>kpLY5$hJ6nTYNSEm!5p536BuI$V'ULslgrHs?re@`hK_lf
%c.rPk%^'X`PTW3TFjV\IR!nJ:^T0<V'$rK3FA^g&ei;gCgo*<<*5NH%6j7LjZ/<Vmn)&a.lMS1o>]^e!kIf/!^2NV+8P-`3M[=_6
%K#4PaaRd,krPR4BSq*u<%"Z.)H748]Wu+mm73/Vj)h[Y"*:DSXHi1NV3B8VPGu8pcN&JeFi*0Lm3rl:623oBB_A=&c2](R=>(9rC
%Dd1*Q&C@_k1&em.$jWdNS\?F>9MAPAN-L:q+QAeQN)a,IHWj<[R<KL+UCN)uN4g]%l5lEk\/5(iGUGSr?E[B[^%*3_c3KHUW&B$b
%JF7KniH9RVo2!u+KY6Sf\s`V*^o^8W&k\OjWp<S"a8N`BK3c,#l=O(kW0;*+;<Z+!(*iU?f7is-r`MW!UK+%M%u$*qU-\KX0<r!9
%?CgdRCJDmimB3s/?d5@%Yh@l^/%`$.eVQV=_rAP(U6'NaaKL)lAoT31GjcA[$[;MniW\AOQZ%i=9+dY-diI16WsD9G!ue#D;;6\>
%%*4K=prr*a"'/ZnEjfXu.W$Apk"eObc-&TGd:iS)'Yg\<c-Au5X/rO+j.kKaeW]\*+fsZ*3GmsToN`E>S#+/+FEHt<S)>6uB4Aa$
%I#k')2Bhis-;mY(idBJ!*CdiH5F\E*3d2eY-!TD63j:Ku==Cl!A&g*9B&KTZV0Sq+!AggXP]:*2XnB#H:*.2b)hF`a2_n*hI,/t;
%WBlhDm<3$0iAqO-&rqCkkg/qR\^l]5kkH0hn)&?$+PsNc=uAVU(JU:>F;qEQ#Xp_gYj-".rN0>VX@2ED_GQ"tHHUN7rLY4>EU4(b
%[#:]:"[AJ_STT`_[:LQlFe(dV.%6sjUAGYp)2C+FB77_D-tQ']oi"`M-mCjN]:]D&`nA=:5AU=l1:4;$,@X7+=b8J%;S-aV6rqB/
%2+G8U#'\qjeG!Mi5>><nkD-&YS?g+jUQ0/3@$SB8/riY))u0nX)].u,c+VfL)<UnCf0pk8ZAW=:m?f5QrBAiE>88fhZZQ1VVe(l^
%@34m_fZ.IiY%j7X7U((^8DhDP*^&n8IIk+4'Bt2dRPh@2T"T)4^>;E57MaNhm9Je+3e+o?bkDQX(0g$empa0[G/&;f2nQ1f7HRV#
%7?Ua,D<fA/*A=lFmsO9t@!6FiefDFjVY8;kfI7Dl,"`_1rGa(:)"-;GGHU];rOeEMYaK?sVE:@$5q-[%MWbh(IYTC5.^lU&[bRa0
%<8S]ah2M;`oDWWDT?r90,Ne.B?TbZeC8?^&jg@HaXd\#:NnZ+aH`mAR\N4lm9T&8DL`Q!s]bAC_[<81I;ZYZ:a0VSPGZPl.rqTKs
%MlhGRb"N$ZG0:4N7@S=0/l=0m_;0>8:3T9WN_&BZ7oaL_E.M:eBYKC2FA"#,ce1&^IGK^!SFOoq]9lXpi4i1?B^;o?)99j3)]RAS
%KFrJa4K.in<P&7QMN<<MIlge,F2+CT>r$VdL"WZrluK"P\X,$kVKm[3laJ8D\%+\n7RdTRi]#bts1Yo75.L4Q?LR?pic^2!`O36L
%&$E,1@D6Y+SUm>jT.@Ne555ZQr0c^G*N[,Md_lt/h%:./Ch01F@i$)iGYmSl^\U/S\014s2KAKB/LDo.CK;go"U^;n.,1BgEkHd7
%G+i3V,Ga&V]adJK;+p<JXa9i8S_mWG+3/TqDS9L97Qs)@30traiNmuOV0&aVg<Vjf9$Hg%I*[i?hSM'jrk:G4H`jmKkK*U<ll0@m
%=]D0QFlEIn;9,ldfrK>kjUTi)N:XdXXc^t/q/P\1R(:#Ga@8`KguZ.oNr]$'LGn#fF&5WM;XE\a%`b%oE_JXcGOUe7a&G2V`mImO
%C&S!ZSmP0]@XE%%a)?%3ltI4/cnq/,cID[a@hjmsqnI12`U])P>U(JMOYlLS2U-uI**Hq6FUt#:GH\m2c2/PcKrGd26[jqod<+a\
%GCD2gE)p''OD2,cmQ]e9UW_to.]HujS4,;]TU<70laQYo)T1c:B#>&FnlSQm3V_`>3ra3-$[&alS5+9c#WG]$QDJDG(KD[(BAn!*
%N*Y3^8T*'3r04($]?fJ1SNgC>kOi+;%:eFW32HeQcogDq9\P/\ZbO@e8'*hsIilqp_=RYdfD"pYR3'?rn6JIAmSEZVF56D-/%_24
%_=+Xe+oV:DR`4L]P+qr(\_SjWa9Q_=p\W7"j5jU0O:;rSl1MUNI0O\pcJP4WE8J[W/UGpK(<4@,[7_\qL\"3PmaJBJl#L.kVk1S-
%V)2Q:jhi#.Z-LhopX^q`>]KX*nSK72VKRuM^P?,=K_&kN<I0.TG=rYF'<mCiXgj2sglZ6sKLgaADP)9C+!9#.gD8.=N=l+LP/]+%
%BZZ_WfhCJe-h?4J!2mr.+)$V'Dr0B.FkuJ*;)ATj:0Qan(?\0!i/O#5'DZ7k1k.^CL&Nq)G=qIjYHE@Nfq*'Al7FjUWT5&4hZ.OO
%7c"f$&&Q!H4_4)eeL3BQL(1Pqb-kO6fPu7&rSjE>J&%Au]700gRq#YJ=Qt0-#dZ;khhCI5<MO'&ZEoaA[=3W(ifcc">0;rpS8=p0
%8$atZE*&=+Iu);6/=leprSiG2WA8XuP9*9.9bG(b*jNFUcG]$4-+gs:$+@k6mf!dpr]%%;rOosrc>/C&Eb#NaA^YcE:[TZD)9a_Y
%XP:Dbk9jgWqV<E4o3OPJp5$EVVUG'Yrr(E:r-U/-AG_R9SR])FX.FC<'/]_[Xl#P0qIq[&hnhh0rhrPN(<<=#g3rqZ]WTOY4i9#W
%KTUF6V!gS+I9iZ8#;N9'rTkBs</c-Y3rG4T[3nCT@\V2oZWCi3qBtf=gppg2f.AV0=5)iM2uVd@MmKUspO<(j>@hRGk&n+,mNe5+
%G5eoRoJ(_0S)qa+\M$3)3cHeb7jAqMHH.%Spl$FBGCAY<a@LApc5g`8N?,%og%d8?T,V!HZrRE-Q>_O%%8O*MjPu$(rDQ0Tmd[l*
%i?,f,ZjVFD40Ef+m-N_177Q_A.6X*Z"HR`SF_m7E4_sAUPBJ[qI^Cn+1mcZ%:-SD,>Q7OE_D$Jr"Y89K`Yr^AaMEhi$9lOPdXO/]
%pQNo"*T'0aoQui:J3HEfpKKtVNa9kFj+@(-chiLa4dVf8oNg7,]MIe(pfq.7s$)No^@0CoVY-S-`-q"(n$`KcY4(@kBmh'jT8.U[
%BjWfainqn)IphT7dt7Ot?baoRqA=e5Z`==DB`2R$E?G#Lc'%m:([OrTqTig655+=2ehA/J*\bm#Rud1iP&ZraN06u9S=F'Oh"%#.
%PG=#R?Y@,(]FO0ej6I4hrVk[rcWb'7\/TMR%upoj=)G/(CR;.g.s*")je0HW&LR6grS9[sA,jUX<ZH/YXAX+Z'/Ef.U2]CsEV%:l
%?<lH4kkW7Bg'n(TF2`"J]1,+mjtMO%F/l_;7ck_"F_"ea\qH"fM%.u*8.oB;Yqp9H`nH-:&LU(MO3>Ij\$OuZ>K>SdgKiGRM-[L6
%J,">:IqRe]r].E)+4^2UJV5-#qW?rtp+rn^TCM7AnQu-0XGI1jIZO1$^>D0(f7b^"\`2KGk@`<@kHnWHlIXq,OT'[<3jl(sgq<LW
%qT7J>qWl\tQS4uEHM[gD]R9G9kHFm[k4OYaJ(@Em+8jgDceeZr4W=68r.Y70r;CDWiVBO`cX0PK^R*9h2h-5F,CT?2DdNJ=rGQ%k
%p\N9=^V'@8otN[Pr55!O:T<F6&-)JjSiqN!X2?S*d!trha6.B54auu"qd7%3WoK!bDk8!1;gP#7Un?Q'kC)4%IeMU`2_TL]!kimP
%^Rr2arV]Q4K04GPmGYfCH1Uu_.f\Oe-a0,S3Ud9Umb^2-ht5#(6<:;'_sUOlZSt*r:Pe%t\BLh,3slB<h5dM&DuXjfI.?RR[m.7R
%jj-Za"aHXh^]*!2Isq:Tq%#,_Kd3DlIa?laIJ2gR+'qMthu*8e?Om,*qXoc,#UuDgogsW(<o3Xg)JOp")P@U*ho`-o]QiuEcYoD&
%s-MnEpZgZ3]JXfS]D&%oVi:;^(?^`^A#F6m*pisTh`ZJ^/\T#+Y@I"nbO8g<8F5L)^HD<5@$Eb`-%!>q)e.5?'E7[.mq0o)E;=6"
%nTSoCI/BH/s)/C^]R9=@B&s?(V`tb\qUa>KV'^A9LZOU-Qet"'l<bT\p&@/Nl72!2q+:3hIL86'SdTisgEU(Wo\@f7]HY$`T9UIA
%9r9uMn*(/V7"/$\,e]r9;sCj&^>oNab1@(e7m&`Rc1:'Kr-u'$,QHeDqY9c;iJH$I[L^o%^M!Q6cUlg`$oL6Fl9@#kgkEB":+Y8t
%i0,hnJt=LXbS".d+b^nN\>8:7aI*5ek#gXiU&$)faX&F";QAuE&5R%;?F%`tVd/cr9u9V-b$'0!-.,X^!OsD^h:/:4l>*K#Q<NT#
%:"+6uWQ0qi_GLQT7D-E)L\9Zdd8q-N1kF6p2tS(CQco'M?$bcIFl>)]k"D`DZ<gjBip2K!iJ*raeO%T.7>&4H_)1Fbg)u7bg=T:n
%V[T7.V2m3f1u)Z/3%rfDk>o(=8(?UG\^n0iBoT0#h7>4/HENQlV(R$b93D+t0"YJO^=n?lpt+\1UZ$*1]?dM'-h#[5TuMgKHjQBp
%1X?R`f-Sk/pn:-d'Rj_h&a`jTQi(5oJ;fm:JML*EUT[_o+sJA&okWJ5dZ`n:oFua(4g[J2_Cq>*YJ;i[R2snS:*D)1%SA7'(lA_!
%@#Y_mT_4IRiJ/15ELmP.9,UCP?1S/AG]ZFs&3@[.G^P38?P.M!k(#iqk(f=]-PjSsMAUs.KatQ9bk1+[5R@sT\mW%CAU#IaF$naF
%MR^q8nX`'C-9`,ZT^!L+E[aM)DMV(o&TbLU!i9Ge?BMabk5hYqa[^SnM;MV#9B(&Ypg#5L(Q%m3)X*&-84R.$f>Mb`dfja4Otq%"
%8GpmL3nC[V,I-6D@SE-YJp;#Rc:XUt3,Hs#pba\_8=]FC(t`E0+AQ0t+/][,1OC%l9'kV0UV3Oe?P4D0i?T(k,%8Y.mT.(^ilQl*
%CVoWg@D#M4Kl;[b[uN:tf?CcXR!3-(?:"A<g?=R-kP4+BT5s6rqa36ll++=c\\.UgHr5l)',Nl]DJj`[q[_ombH9*:bN&H:\-n(!
%Huo+<EN!Wic1E"Q;jZHGgVXDrH@5iZS-T#V/,kt/ahq'2,@;8)F30K9rOP-o(H5=R;4\/-*#H9K0:Y44T:f!@-h0-ebYQWaWW^Ao
%V*9<:YD;:1jL[OkXMAF#R71M/6Npnd:X>f>=S>,YgJ_&^Yie@Q2nd!J;:TR<F-MG.B9>],#LOXSEVaq1-<-b-q!f6:^=;oY?]]tL
%plKr,4@DA4,LgT+JlI@ZK,au%@@9GgiJYTn`#"9CD,-.)rjm<52f(<Uks?f=HmBkUN$Q[k)OHrRbmbU.`9W5,0:7;UZO^kD3*7#6
%HX%5P=(4%k<>*t<Y[ejrh=X*^m=mSGQGWlGj@l(+$9^2!Y?1n61/Qnlf28E1(2<GM'fls?7p;nD[!jYcd36uM#;>S"5`r8%]Eeh5
%`-66cXG]^$94CLr,qA!?RZXod.9]8o6@Q'g3Nn745\@mM+F+8r8^d-l(g\O,kt+8`Bip_?$o:ICca*%tQkL_faZbl6=2[#gQZ`-\
%XE!'A#"uep<)g^#oO2;g0<0@>R>Pla#J4S2%%>fpCL\0^O[1?F9OlGn82knf($T@n.F,8ck#bPd_,a*240nC(brXSolYVt>!%Vi'
%d,-TbO-+QEBQ9Ul<]%?%l8_`.OU_5(f'0?iZG'_k%_<[f443MiiBbNUX?o:4>u]E#$-cZA($g76/<25r_jMr<Z(;q;Dg&2aZ5-!W
%%I8S>$!snsYG)Q-/Lt"5@("aGDTLP*k_Ed+?Ef_DH=CKX)VJHdW\9OT\.HD"lN/ua[0TcY/sn:.R2hl`q)+CbZ29u]fp&2c*hCMb
%e;)Fro_S(8Nni%B+qO4c,P+P(,#0Qs),^&pn;G.,.M$dfkW9@uM>1LAF&g8N<W"f!27,]SC#QDn''0b+Kr?emH#IEp2_bi'l;80X
%lr70lMP,G=R4mH:<UqFUqEhUM_Rqq1mN%!oX#At)Dm,nMn3`tJ@A6E3a"NjIMcKsT.5P%$bh46,<l3Z5CL&GdfTA2m%1e<,_4I%;
%$i-f^pLdf+=9]rO4R7hH':SL3He$]CB5;5,G%S3<]6u-Z-!Q[M<RNp>Ro1e0YpR_YA1OrgO<.&Nm7+>uc!E5"nRsg)WTg!T**+,.
%?A2JA"X3#c-Onq9Kt8bGPln/W`2an?X=i-EL'bSN7j@>cQ4c&G]He%E8An^>E>kJV5-erJYp1iPPrY/."WrU"A<MA+OGSh)iiJdt
%Hd3W.c6BSD>,Pnf<q`4mYn_7h/&A2Z&D7+5XQt(kg+rKRZ>&F[<MMS1HI]s3-6>&7V]F<Sk1PZY[Pgk?fUhc>_B&sW))1)G26Y6q
%MAa+d\\p$GT"@Xe29_F(%j^\Sb!*m15E9A'nZ9fjgurRq>hh1IJ[p*!"dt!Y?Ks9VX3Q@A"Qi$_UX+_>a:276\5d2h(3YRCIP=-V
%,FKjL.=R-m?l(q8QTT%b4ELGQg0h'*=b?bH"\TMU*aB_=,dog[p_EC<n8.(6`1r_^hsd?TSkPoU($4*B#^1@0]XKTH"g:(UKRV;"
%3GLDK&W8#Cc[;?f`N>3Y4@,T!59tehP;r-okqPaT1?bml[.^35/7q)iCGe9.^!,L$A(VH=ej9(8*Wq[V265npXcH-?>ug28l6t7r
%I9a&TX=Q6Jp+X\Ma:e$#jWI,[P*9L+R)B[(j-lh!"\U_Z5=XDf>&B<.Q<)i@+>+,V1ftkEMo5gVC4iV"?9[oLc!J+'XMTshmhS\@
%4m(ub?_;T?aBgSnjQZ$&"5!GSA,IJZ*jY5,3fQhhLfQ4MVDL'i2j('\PH#O`)IlZH4XMJDMn"7l37JdplL?4KM4blGSg6@\kYKVq
%WfkukNN>EOKo>5*j/O&"g:X:r)Km[=GNf)'pld(a&(MMcB70TPP:,f]AU^RIo;Z`$Mk0$OpUM1aWq!+bj\MM<>FsmM9G2VSd7j@?
%htE&XHhV8:Q=UHYiNka1W'=L6g!nd=buT`oIG$.*7V36h/S$cdWd\chI*CkQMl1:fSSmT1[/'IoC34/sa7dU+p%7m[4dae[nOl1;
%M40`K<RL^r.b^\oO[?LWW3M9QfUS\M.;NE!Zo^@oaiU\[FScjM(pQ2+:<+B&D!e,@l\Vi`[SsZ)fOc$Q-F9#^<[u8,P&dq&4O-O*
%<@fD\)eL*rWa/TR0'Y?W=%QlPcqUj!e-7*\>ue&g'+8K\Jp(rQojQm]FSgh?D7"j\o9,S#jOB*jCnW?DRch?h6.C<W/,+)TfO(is
%gO(jfki0nNns3oQ'I#[<qUY=Z^TZ\q:lXl:j7:K.Nt8=5)<D]JI"&(6GPTB*/oAqO/$U4s/5WKO-le^"mFd.fC-7F5XCa7->#)r=
%c!W.UoI@lO;2s\j<%_o8?`L)Q1RcI&-rZ+?.Z_TT)J<e;GCs&BZu.^Y\TYgK_FujsYcJirlu7#T7'eBrZ5K4c9iou+1NWDU2(CEF
%DHO(Raj"E<nRjS^`OphS(Y-S?1G=Z_etQap^M7bb*n.d1]:.7a*1u9bg%*pJ_$#rE:-K`_QaLAe%lWP00.rRM!['=$JI=O]>s5\b
%>Rp)*TYdlSIJ&M:c;ic`&*Ot+_cOLT-5+i=^Vl4>ijplWdUAhV\IOiJbol'^Q)p#kRA,I''be[t]fT;Td_?V^Be+UBdi_"_C8%7W
%],3"]O\o%gl#C$.35kBt(,tmR4S;;'3jQpI4=[J?QI[hCSjVTo]0jYEi?;#jU_sTSH>$$BrkquAT(<j?/YT_@:s7k!<9##-nhJQr
%pH%r?<Gd%]Bf5KX>2Q/O[IEM=5DIqhYjD&Ar\(%sbNkakBIS\FU`Fp_p=ZbgLTA2'hulR2*,ZluAK;BneNbkG>WCMP%^40A7ue!q
%CqM_c0!%1&GdHquc@9VN;r4l\(8icWF&61"IX>o!8`mCu8JC^LU/%sDiNNE.oo60#mRcH4Z[7j7SB34'2)m$Rs)jME9\a!O3PV^r
%)ns]F#=8iu33K)6`0S-a;\guB8`>!BOr$h]n="`d<)YD$dGT&lQZ"^K@+:RUK@=(qm,ZqI=.Mt?Mj?PL]C`3W3QgD9aadgVdkpYt
%-Rhh8K.Y2Z.ta*"8?0n@Y]X#+L\2dBrSY$ul!(dl-#2\o1"(ifYOa#\YLJEbV/<,q];am]BLZj9mQ=MDp4d$%;+Bf(W+C'm)nhJJ
%96Ekkes&/-j"5?LIQH$0TMoPIK')cK<j-_SWjl3^F83R`e$De,cfrCgK%SJN[\8MkhO@9:Ze@::\3$nM0tolU&uN`,\#%>d%p3'I
%ZeFS"2L"p:gjnR2D(/4gR,b:!o#VkUHI>:jmM!:iiHuPL:#25%GLA*ji[(]^Fls`%%-Ef&/-M7X]ko39g#jMHJ#^D)\47U:a1s9c
%Wl>SWBIIjmpI2`(:*;=/F'<e=`9qE<#fh%K274AZNnFo2fSqmSdQA_U)ma]RZZUnb9,`m>_A&%8\FU0'`"=q'b_Ij.ruPmaT#_\-
%d0k,LZMX5XI1!IU^/Ok\\+IZhI7_qoED#-NP!4"ZDqrb&MWRamk_eegkZ\]qmnPfio[SE-.An[e_WcEERrY0>-fO\]l)%hMp<26?
%Pdu4'RCsm1ESd*8eAq1+Cg,IAE]UNK33S]LRbJ@A=/>k4KE%)Y^)T/\kE7*_,kgFKQR89,1^nfK.6pqRD+Yg+@H^UubFFleS_"5S
%R61_?&r0I?31u.Jl>[(\S>Xjjl8G7mUU^U3Vr[k.9fD>/C,9WE!03N!GfT^p)W#fK!6m7\pU8alF3?@$VZ(Aj^Z!/[hlN`EqKAid
%XY&dS]4k\IF1^d%-T$jsn,:#KPdUtFEOTJe:89]W)9FQJdXifLSMi<0%`rJGV?W_sVR@!R.Aul6Bmo#T3MB4^4-GVI)"0:kIEok&
%\fke6;YGnoDq:eEG[-lMD;rp<4;mBK(%5K%qj<n:rWXtt3$"4^/m@7A)3Y"4CX&QL!;^s[fST>#SmOD(HUd/cSN941U.=;<&uY.g
%Rpt3^Ei<@<>D2ZlZYA>_Ic^Y0"c)IWYWm/ihJm3mE^7?X)#f]91cG]:Hl;1`d?0I;VM`&u(pN)0`jo.4?0uR:#91Z>`..+1WiKsj
%[8a`'9_[CM6h:Ae<4=u70"YJ#oO#>M=(Ru'+aItk-0_\4meOH36Xp$,X)X>nRdTb7h<Na)X1W:14G-rh>3/Odj#cQW@7s%AcEiY:
%D%;US$1XbO[&k9A%m'9IO!\@`qFHfrH'=?H<l+1fYjYFuj<CKJL/D_QJYWp;B`s_i?n'U9@6M!Il"*Cn'Ds'u5S=&(qo"ZCD.&Em
%A,ht@Ls1_"MTe^hC5_GPf>KRB@I;XfIWCq0D&%tHVDut9#L$Fj2UqGB4/J=DLR1UlF4-U^9k3Y[e\B\QS$p_>Dt2cQ*DD;uUdVVY
%:"L=A]ho%/,PAJ7`eJu@ppUjh)#$PRa(Yj7S9fl_U++L:XGb6XeuaW\O82uHa(`aShU1=r2TKFZ=)A>gSpoEp%s9954_+*82,g\q
%qiWO<f^MmdecTj_Oq]]go>27r=MZpYWbPbNBY8,U-qPaQ082W`?g(A8oW`<6R.\pFT@m`ESp'LXk1hipFtS7'><Rtjh&2Uo\OJ\t
%P\N?aI8!Y%-Y_joX2)hH!T&.:[o)(sFJ=8oj1RG@Lfm3\CW,1[7SMjUD(E\SN-KQQ`i"i&^C,DK<Xp+"Yd9n\*]iNJ&A,Z+gcA4K
%Sj_DG-%:kXM]FQk2?1VBl"MZu\<4pGH--XB@WU"7hacQ7/9?::kd44*3`(LW6e)oqfr77JBcp"jHLSDaV16qgoBEpD(4i>cj7r4O
%&a2C48iC)Uo^V*!ZXA_YLFEQncQga]l'fXNRlqCd;<Z=M_Rt)ocPU*))C!DG`lmg\a*oWQB#qfRk;r/"?4MaG7@Ld01F<?^"^Y[u
%2XJ!r3Pt-=9Z7VH2n^R;\It%Fb@X'>)id@8%WTK!N^f/^IRfXmbNsYF^!D#urXHo!-d)Msm"a[J#JGbOEkBJd\NV@h\u--Y^lf=8
%=7#)#:Y*RS0KJ4lmX6SRTuT\Ja!\tl-:no+p\$f$pIZS<6p?Id0o<M%^:3^5-([KgOAC7P*7GOt2"K*kjh8ID&,F-imb%$chPZel
%*G?M$`\fn+=^&gMkabKSbV*1j^NV1"J,@F\\'P&kiUXsOVuIEed*pmBAc3naqF_b!QSdnZC!^58TYI9gIn>:lOp:k2<VC'p.f3dp
%s6\,!(\@CMV*VkWEI;(+mI2J)5C'NAe-p_,^DLco%(7engD>M0Mo#,+@/FE;I50Bg..of;V>eZnrnF!u0*^/Y2;%=Ta51[Yh-mP$
%kC&0YR?u7l2G^XKrpJ&&D\'$kFmAR:@GFS,;]d'9R-dE;O56NpOGE[jDgmrMb.1'diLg)rJ,^>]rI5CNYOpu9pP47on&s\E8,2#7
%rko)0C4/*m[-GQt!1TII?s<JPVmS8CQ#u$s(<VSOjV,/T[IC_%cGd#`nK=uX!*:Hu"nCNk"c&Fu_`p;H8eMR[*.Ipd[HH$!Zqr&Y
%pVTV,XkM;_4shb?1XMu=UhZ]X?Q]0X"nKts.1iaulIuHs[*>iDA?^QhGd\jV`n=WDj)?g>q-&]Hn3oa;D5Jq/Wr'nno#&$$NB=eS
%#9JEI&Mh^-"N.nqClL.:/\T'8&*jFuj-7$(!C+K1/O+?W5-pB!S=+CR.4T/.3ZLOXP'dJRr0TMVB2USE7!6m?`fYp!B[cNT-L.oT
%aP#a5)6i#Fi=8paR;0l#*O^NXF?#9*BJ-j9A;AF6D9EH\W6]9*B:gX?06]XXgVp6KpBbO3jmI&<4OCHDmLsQgp6k!kB/>d5-E$X+
%c$TcJ0_TrFM2@8.'2$pZa2'0RT4$E^cR#PSS$@>l=Z)>:_C!D](-_hZ92+D[^hGL>i_RVXcF0l>YCV'X=Z''NEqkLTN5b8.ie\:l
%a/;%KJo07+QaHU*`cCe+10J@nq;n_^lE3<d]`0"LTn-$$N-p+gq4Vm&R>p:o1H"Bf2S*2MB3._]?8<"%a,Vn$34cZVLX+=\1lAWc
%d)M)m2Z`IWmOl>gCW#L@*.'$n"(pdR)p-cGC1A?uRgc4bm5"Q%WM$J0I!_a4"(pgS)p(U6:F6u-;Om-14WS^tLUQMb;](1)h=1*:
%R57C4cXn^M8OcG7gXf0o1o"@6bT1M0)W-R`qd:lGR>g09af50$+g:OFiU4%SZ=gr==;uVLj2:!.k;&3]-)^0,Lsu-X]AGQ]1Q?>!
%,^HniqHQKFcVt6N"%KS:?6*W-6l3M[SThU"`nLVB]4iYA4KZp,IYY\p&uF<i%ee,&A[fa@LR]bCPfd(qX=gW8WFhRd9YhG474n.o
%hKIr?.\>B8s#V_$SgJl$ZsqXVIh(7OPRm1unPhL9G^)/<^"!dD$YBirH!,iuX/!8S/nX5%-"J6gZEb(s01RY$lYr?#Z.fA0>?0Un
%4lQ#'<fLuupU`3qEnVGV;XcD&`_DC"o<X\SQDG5GPrXBN8*(%Ibj+ikTG^&(-7/l_"j`LhNUpF+?G#L.:QalILQ(aQ.!:MCIFuJr
%N[=Zlecrh&k%%*.`q5ej\egE0DRWAbbuj@D+9<()4f$i/.X+i\kr5g_.jJ#>L]uei4+[mQ$Jq@$\D0#VE'?09FnBjljODFY*R23V
%fEWO?,;MaVEpA_?i:9p`h*+0O\:V5GI^=W$,;<>ekOr$&;!6M5daZrU=hZEZmrX)PG4m""I<G-PdVWl.IB1IJO*:,5^4,t?c'uHg
%^AaaSPM<n,?\d/D[3p0;Ssie*9F*Xo,T2ur0TICXhuoQEeLsFc<H$?nBlsNd.Xnj.0*B7**+#PBJh"#h8ei@'ji$c#g+@QX9SbN@
%C.h[WDmh74]X?iWN9In)lPst7Q[GStJBiJh+\M$8R!ul6#uE!3O$boQ#b=@C2<Q]uWZ@t^\P2=*NT'DrQ[3m"4HP@Jqa+]egm+hr
%("?",I3hLE%8(P9MiViXXd)P?W@ub'nC5p#"_gXVeWi`C69F.0_5fI0$;H+jV<P/b?&RR>Zl6@;qD]k"_gj%H*Bk@tMiK`2f!BCb
%TMSeLQJV+a7B.b"Ng2fZ_;rXc+b[#'5'F[:5&qH&9!=<-dX&5Zddb#KY2^'&.n^QD"@c%noe8M21s\#RpmCE#4rc%Bp^`M>kgE:j
%+6VtmK8XZC"K#;fj3l"B<:XLBJ:6cE5-CK%d^g!uW$)W&:p5`7*\&Wu>bs\P/<rR+\q<aE?>3MPZP>f]24#d90&Uu<V(=[iS7krZ
%\JH.fc)^mQiIq1s8RgX>[,Q$FAjMF0035@iol,CiC+uCC8eS3</L@<c4;gp:.emAR#YmAE+#3e^qEdf]@VR7;ZK`^aMG$cpf7d8T
%@W[uOTbkR8FZ=#%Yt4f%L?((nP4`ra+0]$aV*ar]a%.j11RT"J:njY'#Fp*<p_(j"L:Sud*"!Ec>fXrY1e4Kg_&72RSq3W8iWAE7
%=:C1`M;3&I-Kul,^IF2>W(OK$La30L(d^/RdQ3B@CP.mE\qT?k+\cISZD9t[4Ribt<P(Q>81>hJdCG(99A)W^#n)#)Cfd_SCOI?h
%%,G*7eo&#h-4MOO:q?o3IBbl<5%\PLjTSDbS[brV0nTb:Lq.5(4rKem`DRqLNo$)q.YNIT<3ssR8M0c]d^n%.!BNb\BPCDZ;Y?^:
%9's$\%NMET\0RlVbn+m3*#Q5X(;*?rooEoM9EQFhg@@HGeB#%R$utqi$2^RM`jPBtieY,VG9YHj#!f5_dQ5?iXX,ol748?tKh=b)
%)UsUI9W6npLQin_0$GWra3/&$![UV'5e,`SUsBpCd-#)i7,2Bi77e/PQsAnmVi5>t'fm_A>VKQ<<NmLs0PK`OnBfR=(gXO@G+dH-
%88-WpMd.G&=KV3,8WCj_fh'-24c+_BbrjM?5RY3=T5htg3Y7'hY0F\57SSc0G>M$R4/PI48^%@,VBl^^?>pE0#t%d1'et"s/4Ms0
%-g^69qNrH*M-=%1`b6$V,/cE2(`1C7mKpLfm-b#pn\I[hS3&9;i'lRuih#5(#SmZNY?$luC5$c)ou@\Ker,l/!hu#-(e\(U2.LLb
%`L%PQ.r!%U8PNZbIKbr*W6*].aiF[s6n;ju9_Z169bI(*&t`oqFY/RT0<ca!G&\iLBR$<QdI98&0hTKkd$fY2"KsQ5PVBp93h!`m
%%%A01,u36U(`_MV2q_5G::Y17-HI;t,5;I!X/0pcaPIR%TWUcTgOTg@%CQUL#dlX$*0riZ$>4pVL=Y9t,YR,hB?rr#d,>T28Tb>%
%Vo5T.K9E?(:h!>*WF43oYA]BG]@%CZ!"27'a0cL2XUlJS`N6>o[Vhi)>$qlZR(Ld6(7A[::MoKiN,K\_&7pE(PHUj3dOQqj]>T\V
%0gPqZTN3C;_JEu)%%/Dra0N%fPADgbj^I/oB'[WLpk*GJ;XYeYfU`6\1&56CafSH4FY<=F-`.h25sBBiYp_k%SF:-^a#>bo@QV@5
%jqPDd9@MQr]N6CiAMc*dWSc&*C1q?(X^ttqLIuXAZjW0FR.gZa3OB\KNL].E_SOlh!7N<pD!)c$CaJFL:fASBin:C^5n>M^ks_kZ
%nPGq./ZnAOB]H%"+V7+VJsbJ&g'\c3:=Y$+4IGCfiAF4;<uW7:k0V-Qq;lQu3!gKA?gqoAJPF-';1VMYmp<kQZ`[;`U#>boPg-J6
%ete,NA.pT:L9DV7XK3$e7`/amZp@97THqV`N_IBkc3W\=(3kF7'tOH8Eu#o:;c=m>,gS:([Vj7tbRi53O]G1a6XL*V^sNdpNL/9K
%:GS2GdP>s@&o(!Y0]b)A/2G0NKH3Z8a>9>/ac.4I!ucnt":<#&=g<7O`H.39Q6q&P:fNs;#g4cc[>g%k2o5H0oL)7/\YW0.2.9$a
%9G*AG8*a6.k9u?7SOPk4ZN>PJZ0;a##8o4&be0ddo<_EU^8BP5dt%9k8ZVEY_R>,h\#<jMTcC=+=E3c'%[QJC2&DXX1l"d3LTLp^
%B;Iohe\k&g+tR0]AnS/q=sG2XfIebVW=%"Q(,-uG"Rh]!]827Dl4&`25hcA35gRM`[6>0$+uE,Jnh2Y>a#4@<b+`49GPO[]1qeFq
%he[(Oo7odH,*[I)9@N.[!/4FIT5FNp(1*Rq8U[1D[#-iA_S154AVindXN%__,Ul3^TK=/JC2bLb1CT:u+nU\Ak,.72N,0PWV#D#b
%,Vk-Y>cs5M!^2p;U(+70>-(,aX>*o1!]4j,NboOCZuR@U"0n4]->i&NWuXV"fm3Wu-WMeO<C\T<bU-?S;`5TMM\SN@$I0&^js<F3
%=G<Fl?o+HAnQa`X6*$kJGC-<c=VHIk[Ftu+Pd;5-4a/"r#C:r1$b&TpnA8[EHs&bOP8jE']K385$geh,T`.='L[)R?Eg+-QD$1hX
%6K4eO9!SoTQKi'AI@TfnXlq]K@l.3T2j<BiX.T=`W?fNX>*9RmfR!M3`-d,&;8HM&0`3EO0;L5.?tO?n#6LQ(Cd:^:8b@b6X<#GG
%$i3s8L.;dEmmZih-B1,-+VEi`N*[/#;="V?7S;^/U^7Z0iZ@/-U-*fM=LsTEN>>8Y2IXm>e*2Z9\!#\l4(RHo!mnNIQ^^&$!huJE
%HFlro>%:O^=qO2=?s1Eel#o+'oNB[:P#AG+Q$G7a^m[PW'0rj3AS<uM#prSS"fL]-YgJ6ImLe&f!tW:e/I_8gV?j)+p"KnQcAULU
%SXI@G!7(YI)Hn(*g/i@\ONQi3^]K*5VV/c@RY[?h)f7bG&p8#/J\a7L`i^"H=L`2%;F=q//t`J'>LW.0@`kF>V5YAP6.,uX!q#,2
%4MV+%Q']/Z&E325mJu+2h9a_0YQkgYHUZE+_6B$5s,/GV+Snl8ZnVI_&K#KG`]o#)Q_@FT_%$ZQ(S!E((Eogq2?dp['6J2R"F/4+
%L'_L8=[GWoOpH20[e)`pZ?!mrXC4FG(itA8gZNN3Z?$\I;h]d]@[^_(b7Q@;Gt8:i@e3'0X]CaY<PhK>-'a(]6):ta4D@ki7Z8S=
%k;bIVV&,mtn#h)D$]C2s-JD+-oKa^9mXA8\Yk^`BY\B!S/6c9<2iDlA["jh_KK49-[,9@W4?bc&*I7u9,EiFO8BBn#*!]ZeiZfrq
%^.F*q*d,e"WNJtn_AF!cY*<OK:_dAl!Ue4HGY,N%P9C.h!er0XBVi\7npjc,3n/r12E)jB1Q`E^.@g/Mbb#%P%&+;>;4#P9J`E4W
%?lJ7Wm'`'6*jjE_I[2C7AX@Hp,-@A'#$4!N%4i6F&df1,L9\H<dh'TXM_ICmYA^9@frf._TkE_N'rY&D`X4f@BPX*"4da*d3aq!.
%#h5I*$9gf;J#mAq9&%9fg#W^AI?1Xp<(]$R]=P%u"h=\&7)2E#bV1[])GnJ@4Eq8Gg;teJgV:Ara:<q/6R>)RLI_U!0NOmqq#RP_
%Ju9Z3EIBUJZSO?a(-d&EO/4iR((Du&piMJH'$AiobAQTRFf>ZL)6p?hR=gkHQ8iSee;5>nanuXO^!\<g>m-fiG^)5fX5GB\03$cj
%"ZdFb[OeHtIqLu<i\2R5jW55o%e8KtNHD?4YpY^KeF$^WeHk-f&t4TgLh@\oah,RB&V1,SJ6;I0(i=ec!#aKb>kYoI%f(^>dbq`X
%'j3!4$4$2+nNEO%3t`I_#ebp4a_P+>Jn(1,e<B;g3#uL!gOhiV'oOO^&d!;8[&(o_'scVLPtF(@iY3Z0\fOo1S9=2'.F#FQ8TJ92
%1K[\9X^UJ)ar4X]%+Z\dG6EAa(0@7f7(f(&`V:<qP]UVBROAN;HJjg>Ahe-,eBp[DZ/6ZQVg58<fqd`FJf1HlMZuRXikRV_9X'e1
%>MTQ3<mUDhBR>YYQRZ58,)E.a9:+cH49ol,VCiLJ_6J@m:6.*'K1d%j$n`33A.,3KVM@$s9]t&gW/h[.4bD/pkUX:Q@]Xeh+RnrH
%F*qtT70IgEMAG`42H-&[(%KZTFp72aZ$Yljj2d&ec>"Zj'sfFoM'rXOiE-TQ)]53?![8Ij'W,@u$kj5Gh*$-@Y!1nH;#s;urh7hh
%G=f[X5]Op%51N%4dN=RidOZrZ]RU>*9PuqKI>bDZ0EF,<-?kQ=0tRmT_BK:1buXuX>[i/;<Fni)-3^,tJ?kj9k[E'Uh!q6DSW%Ae
%qB<,=Kd7@4^)6$#N^dG_11>U"A:Q1qdlg5fW\"Wmd8Ahdlp>2o_3o3Op3s=dZGneq5.aiO&o'\sP'1:?"n`.8J<Qe+VkHQk$G&/a
%?pYTP+2B>TApnNN3/en:+j3;b3OJ!q8Er?'1p$Jgi)t'EbF/^ulT,HHF,#5[(Rk(>hGh#/=,B\\5!iUbLE9q#Msl(Y!#-,Qh]uU.
%@Q1Qd+"b'V6K0MKDlX+ZJ1V7)-$U8rR,8Bo*'^Qf'%u&mZ"CRpJeO]AQ)QQqFO@2+Ai1)*.5j01&[%tqF0gL4!PhbqqPnO(bsH^i
%&Uhj!E^>usU8Z1e3.)8L^95=*0B4Z=*KWi,\kZ&bbm1ZlRuOrr9-:#%P#PlLjJ<W)p-No[Y$s1h&k?qMY&tD:E"$B8`U]i5#RKF;
%V(`h&ckeZs?ncVp,SX#>G:g(4<E0f`asD-fb/"Gg0oAOc?j$M^YRX^]G!K\@,'+JmdW/q%=#,M<WtuON9^REblCCT7/mrrP^kCLE
%"#!rtCD7F,+M;-qW[qVI#1/G"P*<4p5^Z:"PE*u44fZPrBb!ZiJNhEf3c6a6#ufU+4BPf=;3(=#WuBibQeDd>2OON(1M6<^_;!hb
%CPG9="Df`O%KRaZ#-UV_ktd!&P^nW8\QUm0G%O#bDNUiKX:.uJQs7)'=Y31%!%jNLPORO>OfT=Qfad6$2T^O^*<]J1#$*r4#'piF
%M%$7jQ:!B<!%B(rfj.#P%<B6a;]J?+=UI9[`')#d;@:OW9@,_&ni*tDe96oM]HDc'Ct8a%#&KE@L1FZ56.5^"BJd_elmDi2c:Uk;
%aPc(\BT2=Gp+h2p]l0;>6&9g2i%_)33X"'^4>7kg=h4aXUErsl]`mc(6tC,=PWI5/'bo5b`Bu56Xc,,ANQE<VLp_2FhY<[&(PJAJ
%_f-X*liSL:(BS_M0q-/VYm:ij,lEo`]g:ZM"ek#>7fBqr>8biuN7]+?o"p^DOFiq]L=SHgm>[t]WR]$^:KL@Z"8@l4elFhQFVHL`
%EBT\S[Ae[ckI]VMWQ`7agIs2q1(mBf79Ytt80Bd0fgs<t3Nl%ai&YR>@*=kAJg;IW$1%,?8L>u*`i^[6D[(9#Z:`2iWCW*f1<$r&
%Ss=H>'+\oQEA$aB-15:_+p%k+H:Tuf3DX)A`[_0D21stpQ6VF^'a/oH[+/%fO9ngA%!!??4pR.]5Eo_M%sK;r84tT$QlEaWc@^r[
%E@EY]8fk:[PJjP[)fj%lS8g#=Huq_&3GAc;3-#o-a?:4>l7^SfS"#p].+%8$lX7cMObHJ-Oq)=@,(U2C60K_6AL"DdLG8gVr]".b
%Ya'6k5.iiqc(HgVBY+<)[VS4T.EWV33mCMKh%X#7F-8:KpJ8)Zg#,5\i0:&H6XV99Gt#1$Bq@'fifccAE+q<DDou%6I*N3C^,]3h
%A:t'MW7ejpAOt\,Ch8tcMr[H)l,kaKjXVS?I?UoUbAPICE]Z;)OAJ#1b:?W;C"DjDh-Sh+l1iQKJKk"LaNg=9<![_"DB#O+CI*!r
%VaqP$$DMfeW!X<MR-Sgp.]QEp'<Heb&(\.J<\8[W.^hiUW,1HnQ*:ru!`g\$I(5P2q@,4#VN;P(R+?,u$=r<Z.;9,mEMa3#JTK<J
%3**f5'Xj_Rl$5kVZd*I"e%c^hF&+#^kc>R?c_7C.P$9iLX3DL-`N`n.EtQ3q#fl2j,@LNlojRP,^f:Z<`8i7QC*IJ2g]THPO:7nV
%!%[Zj;8A26E:qUWYjr9gfi8#gm.h"RD9`4HbKSQrh?)\KX4t,l5V',RHh%t@AF1QmIWQFB7cE^Qfjb"kh`;22T#Ui\#^'m&)6e78
%H'is`N#^ZZ4j`85?tWQ%(>3OZlUTT_$.MWU&h&I)fX$<cN2j";'Z6N&7)TR&J'sH%OVeCgOp#;d;koW]qi+b@UaCZQ?uOjj:YLcn
%%.'ps;DDrZM^IPGWY1[SPL?N__7sua/?S&)RC"7WFbiV,e>5UB2id`tn;XYLQr`('ileDXJX/9Q19!s:ELiN3!cmh9;(ub;9b,+;
%c=SbM7"DoRT>;6XPtlV4!#.!iR_L77pSJ?&\57gr,^ckn*T5>^Q3f+s`_E\dQkS3UoI=oAE'R-bH?Wmcpp,C@3Ykud!gk.S"[k[T
%DepKKK1QJ(n&i7%&LK2:1!cu7HZa1i9R7W?*-/XX@epdJLF_E2-*oGE_0Q%tn*Dc6#Mlr3iE/aVVPYUH3;C>.a(EU#WZ,1s_5&:Q
%><%Cj$+RJWWU)h3N:sYFVfA8q`Y,qF#VTTqJAK;2S03<c-u+*.+bl=/5m!31I05LGeO*?iee[8'SAgDbPAf-S;%k.9>FfWhM;ocm
%9ej4PR^%WO;ec,m(5i5*+%R0I9U^OT:6ufD>P#oW9Ob(X_`/gj6EItGm1TY5HN[Mj,_CDQXJLk=7;^A9O\"Ku1/!liC';t5_f`a<
%0G<#OJs+eL#S/^gCb[\X6GOVqPI3ggVZO=FgI#aH.]a)9nsF<E19>OG;At6u5>Tb'/C'!c^Ma,l$aX:!9im`dQjn>J4o/](qrllX
%U25kqB2o>FXcn^K(g@le``S$+!JjQUCDpVK%S#'I2FAE;At^U/2eJP?>C6l!GR!u?iADD`?1WKoEbE?HC]YZ0CSTn>@r&B@VY*\N
%CWgD*p;ktOGO'f;>*7Vdd't"BmZp05RtgX!=:oS(F4bFU"ODr7`>B3\`0l-62M>@r/YAn[Te*a\1D<*Do=F$Le,BYb6G2'%bCd#l
%Y6?A6"i3@Re(?S]3ZA1\<25UgrkiVR9/9BD"6W;*h2VBKq6QN2_75OF8]@'Xe'2qQjs0;SM>+N""-)glgG(n^*islSlp@6Ie1j?`
%+n(Er,pEpnP&)BI!bt5]-FYdYT88FnR._4QC-)[BrLro4TanX+/>Ul@,DCbASDId^/(j%g:HkKRD-L]D\lulL>j<IpelgD*Q6T:h
%LVH@q"He+nf1k9do,>J;$RJD;XXg8`,J0,6qbY[,$W3(<a-dUZ(l0E'L*G<qMDXi=`6Uk1G5t'GD.QkY93rGf_J2mWe,aVC\$1LO
%e0Ie*cE:Z;f?5W_WWsg4Q+N.0Q6Nm\g4P_j?,aPhW\A.Ih1W/6&c6FWl4I*N`_A_]c,YNTQ#MQ<+H!TD*=83;l+E(gAYuW)lf9`N
%#Ga(c4d[XeR8Yt.Ra[X:%9J@P/t)=6ij=i`4fUZQBcbQf.?"$lPrRF"Bl2L+,mbK%=Z3T*\Qi8$):#Cn)QK6@8^7_U@$YXE3=MTe
%bQ%hSla9/Bl7.^Kh2nN.+[-"&`/u!U7mmfL+.&,gPrlEU"I=*M%))%a*_]B!-c1kZM/dAW'qko9fX/^s,A$pThX];DkMQT\2YO$`
%j&`Gfi;&@02JKhNAm"uJcd82MnA%;SJ\S<Y3k4/N#NM;nJA$W`ECsPRRD57Q7ErUee[A.g7rr9gi[o`"16NT"DEqL&M+$?T\(-9#
%^FTUtoc7M_Z"p7EQmN83S)jd\^?H@,O0V'[[,W<;%cRJ=(^KLS*-;_ofJVC4)^H[Q.6<K?dAXTA&>"fjrO)fS0KEPL3-Hs/FW`'m
%h!u&:AKW?1?LZ7S:/<BfC,AFO2/Mo<]k&lEOk&+J$(94!ZCe8JP==2ebhVCgH_W@:6Q80S$\CUi;YC7'MW_pEJY'<f3AWhW/.q6_
%%*Ln3:g`03X91UgUm_X6H:"JfE[-]age[E9QOidR01/=Vr!0IRPH)a]O4uA\0Irqtp/kl;T/r,j)`[r$Lm#[1d)]o_Sd1J.Wqkh6
%J8r`b9>q*R$`TS+URFAb'sDRZ2Y3UJ%XFC/F$Rn$7Gt^lF#6oXJ.'CTeOF'$ge+Xd.0XQ51<4(5s#u?=e]*SV"&aHc/M43mCE9iR
%T8_sg"LUiUK]@u%l0Ailj=3[31brJU)%Mdd\O1ZB<\5Q1OFd_XC?i)EoSAkL@-uSRC1ZAA&c228W7WfBWEehH_$N.Wn@8oY_j^+!
%GlIQHS.+Ss";RHh'B8f,SD/0LOj"Eo,2>s.-mE#G)Nko@CB.$BTn$T49;i4i_DhOgRLL;p>)eNfc,bFXM&\tN]X9VLF+(89_oKT`
%#WN6#i?#,eOA!5qDnR5OV/-BYAqCB:8<@=Z,og^W>ZO2hT\UcON1EhekAI_A!;8R24^-8sG!Y%S"RJo%17na%:b^Kb12PN/H;!-,
%cDcYchl^gi_VaY\De=2fC]LZ7>mT%sZa(Io_\lG#'2.g&)p[_1nZmq7*C$O$'s"A@?Bg[Y#SEZi_M6r'lm0K\71LY:j7X.nKY/$`
%R4.hR=L4eKV/q^K^rOA?bVCT:*'G&V`lVh."Xht,[8+!CP;/YsaETdaQ88bEgVk:j$7ZNYC^6?#a/bCE#A]BpHVG`89>$Ls,Fm*!
%=BV_\_+?$Gi!2+Q'oM20NuR(=D%Wb?][=mrc*!<P3Ih=cne^7kQT\74E&,na#Tq@5@'JQC9DH\fD1`*_NsJp^B:J'I6m2im3p56-
%fdp>Gpn4F+\cg*nK=Gkq;J>t6V^<UAF$V))P!BU8nU/e1%S%De>\p'!]kpPpZpT_:4QO.F%<)>?B"`,BbsOS%(;JRp_9.UP0<J+.
%X,H@rfcp%WQlrkLJQC_k]A`Z(A/0:8hGtp4G79+M^VZ$5..Q^8(%PRjVAQr(,e49j#@P.%,U*eHGsW?eN"noikUG?BJW4n!RSFGs
%=u5>u1*aZp1CMLNn8]:`"e#o/mquP:0#Qr"f[e(4!KtTses^1$APiW8Z`a)3Z]LK76jSlB^U=Rc&83NVM%MmemWB@;Bc=FLY]51?
%Tu]*hEg=Q0:pt;LiK]qd_d8(>8EQkp6st\T:rg]`MI=%,JSXIPCRZK=S'aO$?_V("/T=ZH*:fsp[gZJ[#Ues_7#"qf3nT2Ig1bG`
%D(lnm@57FPlKQI,$'k%/n>g*;@^DaMYV!J`=M#NtA`.WIAB"ga#;;8^6ea8>1;*3VTW^M(0%obQBG7Wa;K#3Gd8ClB'N8*>:!H/?
%L)%q8@iti4A(g.WVqA&iNr7m[MI,4.Qh.;c+t1]J6Q(oOAC4/ZN"38R-_rDC5u>Ff,C2GCF6d_T,DH_ho=d&/Kp?j`KA?t!I_pC4
%0XbHuR36#c6TO!Q=n?TK+QO_G\dFLe.5_5ZCM"6RZqNu_!Ql5han&!8]S/&*H"J2/&bs0NRQ'nM5\DFIbgV[j0cFCKN2[1^g1G*:
%klC!@RT1\"QpNdZ1Gg<aC)a*%`IZWLXb445W23ocJ\%#9:YF)*l:SXF%BV`?WUQ=2<fi.GM&ji6Yo1fSBa]@,<2;!(EJ?"k/OW--
%l`f%'SFr(-@Up%CU,3u-K1N9SaTfSGQ-t%X)H.D<<IHI`4sNIPgEEIsae12VQ/$B(Pa+k=lHO"f932BN3B:D&`G.Js(-PsA].kh/
%W1&Ak\A@/kkSEV;?\]:@YjhpQ>k+upf].@IO&#6OI9R]0BilEJkKR\W$)"dT!4DBG!EM,=aDC:1CE(>q9l]eb2T>m>G$JZ,Z"sZG
%_aEP0.`f1U)I;kBD3akSnpYsJKaN[_16Qbk;*_?*NrX7BFgNlC!ZI6,)[&moL#j?QM]H=3>]AU1G%o"$7&=FK3eCE9j"QgF30S_2
%eX;[ZBW@lE?lM-@es?SO*=\^6V.j!j?3;YqNWJ@PkYaf9_dT&5*2Y$?Jqh`KH3PUS3'h=+O(V1gM^W6ba[rP8/F-q./\RbsJU@ae
%1Bkct;gkSqCM,W3Ui#na%di&_)6=8q07:';.33Q0#7%uT4CA8k)8^*]DoF1ePVQe8!QS$\E.UbBm$FHU?=_`LfLF,#)7HGsQF-`u
%J7-NA]`@O+X_]dd<Re;uY.,:[j-oI,;^+&/=JE@JDDF[3DD79M)SK;u3S\B#N-@EUgfI'Zkp\EHSD<:RdQ$EuObA7r0c[G5,Y#oH
%U[JH>J3KS/0E=+AJDL%G5`ZO1JB$AmhUn.1WOUts<1IR;QWo^u'*;`&(u]L6Ejl.?&80Y+obVnbQ\\RG+Qo;P!,d>a?,gBp/Z6u4
%q:ReR-R$?h0UCh99($?WaXLhe4nD#fD:!*34t%QbXsB$YU23U_$H[&MH\`Q1aM:%G@LWG)a+9eL\6*P)K8^AiZ:2kQ(js+qDF[/@
%D44B]q'#j_5[o!WA7(.LXb7u&[Z3Kr6TQ=HJ:Neg(bQG@6cmWqOp9:CdWU!iKHUu+d6>7mX4?6u5YJYGX*IYd:0Hd)+)",DnL!Cb
%ec:m!Ya)I8`JHBUfOg%^c@eLZo^+>KQ[lr0D%D#AeDe+(A/5Ga;ot5p:BqTQAu7mRiS>o\TUi]GEt)<\m0l<NkGhh/V<\og\B`@,
%MR\UjjVQD>ENh>CW<A72pL,AYE('EP2Oceo"t)BK];#o)ZQa$*\\@UBkaa2@3-ti+9-kf!V`2&T=ZB!:o18e(3(0#fTU?7r/PE.%
%&RP$dn$/:+BFj$*E9?b#7+f2F@LKqBmUd;V2rV9gH>a3HW#k#:gQP9I?Ap/]$#nJRd[2]u=\Fpj7'\C$.#1<CV5<:q+p,hurh5(D
%VW%Z;<c?Hd)5DLA<%5*4DB@N"#n4H)fPd+\`QHjgU0\HfOWj(\ZO@)e^o*CUBY.A?!5#P20f5E&ar-r\JUd9q+Q1LWD']\_)cW"u
%GdCa9ItA_JPJWEI_P`.RDD!+Zf?27Ha:XmZqiTJ$a?H-.cpPnV:86OrOlM?Md[.\'g$9+QhJ\_'J>G[Hg+RsF](;B:H>/_ti%/n4
%""fLjaF!Fr!D@3C/e*sffMB:?\A=Kup#\/\TqCLGS*2jMgUT<]S>/(7#TH>r#P6*TnhP+9n]J_aCg4o]<t:P]aM>H/0GYIu\T<IW
%V'<r'.o85C,cY5&?5+>9;B<&^^%*h\ofDpmR=F=45NHum%q&`aN22<U*99!dl1sRh9`JYD.ejg=^91ggj^57-qjF`R[HgZcfjjAb
%"oj0F/0g>R]Q0g2p<4!&q*G9\P/I,7P$58!2>,,+d"Qq[h.C3\AmTdoT7mC7Lom+VDdC\bL3En%/nCY6XoV=#iXL@IC"!?_o5uj<
%fH1A+`.aLCNjBH;/pY5m5#;lH_mMJi!lCdNDdim<3'rEgKV%`$\O3@X!,]dJ!01(O"ILI4M4<Bq%X+9<HqEnB=da/SF&LbbfJa91
%EFP_2_.79c;gLTo(I5HQ[l0j3^aC-4KB$3GP\eB7J82I:[L0^FFJJBo[bM;Tb`md_QQ0ajmM,&k*!E9dIh3g9(9QM&+J8Skpq"`e
%>*AA$-.d=-=6,js49r904&I?-C_jhd^9j[6SS]<ML:j2C1nkrEE2a?@%d,)E=\3e(%+=S%gL0+p\$4Y2>TZ^=k[JY.b9RH%`HJ<?
%G^0O;3;=sl3Fg&)+p&WJqjnl9p\l?;nXPArXV_(h[eiFr/'iL_58Z!k^`K:?cH=B0k^;:Rm;!:N>qBug79m8g41B@2QX2q105YJ*
%msi-8qk;h4!r)3dPM-J^RflA&^5-pQ"_#jb]3FQ.gVNH3Ih;pf1^f"c`KenNqT5^.YCPX9T;A$3A5Z$d>/i7`HpnO))bOuQo\i1A
%mjG^_2#YKl,PNh;['V)k^4NHI"/":3(t7,qK3Jl?-4i0!&b^s?Z_^nR[0>4Ql+3_To>:5HoJcih,*%H:>N8E!Ka\GhkLu:dOGF1T
%GN3gNRfT'aRp,KpcP4D-l]s$`egD^i[>hjmOfeT/X.-iD62/O$Zos-D+=j+!*OZ$SLQl_X_0mj4N_O=UXaL.B(p:LR^:\=bDMea\
%SE@HJoOQ?M0;et!5Mi3F);,,a.J+0<.0]5C^MF?u1hY%S@c&jiLLJ7L_V*I!Nt9f7l5'FENeTW=gj!uG*1o'gac2e1iSd0DdkPk+
%!HUnum4-r'b!q"?T#8L<;qM[u5h3[]4cSgpauXDki2sT;."e5=bM@\r`^_t*Yo5`COFq/l'*=\sM)YCpY"Pp@es@Hgon'`-]hs/Z
%7;.&/fMZg3CJS]M&sUsad!T+c0?iaK]@X5jK,qq>,4bGS2msrYLu'3FMOOmBZe`BMn.+5VHicSPdD\E[i"Ff;=((ag[__c[TpmEf
%m![ja+(A<MSTmjHm(-*`jNJ9$$)@B=]II;o3d63)fQjf3aHZ`]f)o';lSgnAa*;3Z_o>e`a&C!qg#7Mb6SE-h>+F3(j,dR26Aomt
%E9^i[UCjlODXT?:o=W5*7jSRQ1cpQ6;Sh.sKB?1(rZsaG3_":u[>$`l,u)rhg</@Lh[\heW=+-l[`=QMc?s?VA#F(X9l[-WL0Xmm
%fK0)F3lrL(3P<HlaR'Up]5f(gTgB;E[F;N8VH?;BL:\oIm/k\&a,^aOcmha@"+f*)<T9+3]cGCdaiN_/QgDO@[_l+J)Q`;J*HFlT
%*[D"=HF7&;fMTc,;-_rrg+fUc*gTQk[iY^-NNfGt%F*4LXTf0r4Q/+AA(eNT=hO7I@c:UgQ7qB0DN4p;m9%mZ?(.PIA7QcW;V2f2
%gEtN+*1_ojp_[j)><=`*dZVT*]l^3M?MVF6=uC.18,Y?(L@5BJpP$Z$P`E72Y'RTY1ffV'*0il+S:9-GfBZ/-UQ-!V\-o--dro78
%P!3PDE)>+'&eFZs(:ZEB$=%ZY&b+)hb.<;`h(F1AjgVllfR';d/UhT\hJ,;B\j,h%d\a-'[+.45Ku19aYg\mX870m\kZKCJgqlDM
%S3k4`#_:qU(stOF5In('`+dSVS5_5OA+(h)h3%W$<YFS=in0977>fT3(%npS3K;mo(iBgFMgg1r09K_[f/4\Rle-Zkc`I:sK,ge!
%0[/'A'dFjqG8-@>QbAPE\!(#X]dm,oY$s2Y51!\>jZ=;r(WcYfl3k0VMsi3m;TKg>!r=k-a8+;RO'_%GQDlH_Wr\Xb=uC\E_pF_K
%D/W"$XAIU$;KgcW_muP8U;k$@*.WDaWRFsTeK@#8_rT/:DjdOHo?mu"9dO4ca^-_Fs(mt=9hTJBah#q/c'?5<QG1he/t_2J/CB"#
%S4K)kdUT%l3s,h@6g3_2[kSidW"nlm9)RIBj(f!4S[;C[2_F-r-0n;Z1fk<5=q^hALo".i0\Qa'dSV:*J14GNeJI%-@t/QBa?.6#
%JYCH!P,TaSaai0o<_:rN']t^W3sltI^m/`Ve45F53'KfR&WaoS&]e8_l=aL8V'J4V(E/`kc@8&YFc=r-:hX(Te<7LU5jkRNP*`^*
%qqGH:m^,;u;i07C8N<!`33l8l*>1R:!trD$/sN/%f`bYUp9u^d?#m&DfMiLGQL#mulE8W;8`$h=a-Neg^!L"UghH"7AJ:#XR"r4h
%5[ACiQ642,H6S<s4#lSFi>l7Y*XZa7R9Hn_%*6oG.`n0Go%]CM`sRMp-"3\t\a<CZ)ofE/J35D\fg=&"Mon,u34Da&9Io0_Q2%m9
%HV&`K/Zk2KBka*let$,\XsEA@,g+*[4H4cr"->U%S4q5rdT,BF_79G\@UD=cKsm7?/_Nbue;K/e-#V1pRp2'D\CTYEah#rab\\'7
%W%.rr2ddCFKX1mA/>o;]pIWQkS\D>I+$kIOcs0/0>I'S(a@+Z1.@ZXGfTLBt$H5^cEMk*CJ;SP5A\J>A:[SMMM;bR:^h9UGm4@OE
%0YgV40.>itMOd^'[Fa8FB[i!_<`**[m2;S1-VLraMqa-K:4(mOb?Q?6Lkh[JB^7D9/S;I0;g))@][YAfq/&QLDQg`$:iAM*MYsnG
%^I:#(bAT)a.geB*aj=,&TUpAF2pGh4Y<ntr:Pfffh!ug/0daT(gE=q82-DkmJu=mYXgV:M=?M/J13_0HgU+!:CBa<$A_XI"g85qQ
%'Lt>N!.!Fa?D\UJ;gaFcI,:bGXg1WU6?=I=glf>r5\7d6P.YLCjQ!@(<lf,-EB>aHS;f0bp+p1\N%I/%-%(KTDsTsnSG68@ZDf$A
%m7_=jDGa1.cms*W40H'A\fsT&[Yf=`c?H->nHURgnDt(2j3;Xm?8c&l]UL$G#N\b1U#]m*/`O6>po,9ZB7NFr6>2XcF$&^?NcrC!
%S5aLVNiZ_'-1/iRS'hVa'*8F]m)D=Gc[W-!_CELgok^_;6Kt;71ptn@;[;##e']b`RJLE/o(Q)KUi`RPg/aD5>>rPD_OE!JF0?'3
%L9iGr:N=C=(0)+g7%($rO0RVWATOp>eHQeDdjoJeXh%6-g:^O+4fN6Zee&G43(Jb\"D'e%D_m_q9Z:3@J8iubV^MA3dI3d]Bh_Na
%mDT9@DoPURg:!C2(:@XQ/=k:TG$<Cbq,B!;J`($QItL@kK/[^FO]I'k>Q[N0JdKl!fP+&YMs\IfPtq(RlF+Ym[lCptVS6h?@AcP"
%qd)jIA$7fg&Ls?k&W4e<+AU:@SJ>Z8?'(Ml1)AWqjQ764M[_/,mT$f7Mf*@9Fj,a=PFDDEMfRgP*ksRlIKX\Xb@^+[.46-k?8a$H
%#<]Fugt\4/eUZH.Z5Ie'CD_0HN-XcpeDb]+;L4CEnNtX@<aK[;S;+Yu+jq>16n.!Y_?CYCe<UF4hm(h2ShN+ThD6Qm[.K6m[_4B&
%VnHiAijPGge!t^*`-SD8#BTt:6'9e3VBui^T2M/LeGYQ,2Ijl:9pH-:qsbs7nc>tsP.GA,%P>*V-ueB&=0`jq0[4bXJ;^1*1-igI
%5U%`JmYo]e--&nm0GBP5W@h:)QF@Uj\\7^.5a,@bXeN1>02:h:[t\@]MTS\@H5a*c%eJoM*hhqu`q_:IPZ((1T;f^S7X+TA7d*t@
%UnXj%p7=Q-'@84dg\0X(4mA7I)`k.D$-Q(j]"%,5Lh.HXf`9PT.t29A^?@E'3qYpSWu&r,2<DBfp0rZS#g0"\/h3]TBobW7UNLB(
%[]QOq[+K3b1lgSW(92$"KJn-0I0si`_[J03NF%P=D+/nkYJ&PM,es+<Gg@:#k^ss6T[3p^`O7XXSJK`o?d(hW[.k4]lM"3$fG+R<
%WFceS>5Zf20<NT82.LFh2$#W.]2bX6H>@BIi`hbV;!W5(Ai$k]J=C#[o'*#)\$1O<cc]ej(Ym\B9TPK(Kftp6h27_%0t(T\.'1Sj
%f3V%>gSn[Eg(c'BDQ?l8gC^dHf`u"\X$bF@*ET:K"'0EL:5iV`\6;[TZ'1(-p?]Hs'q\m7-u[k`F*lUm/*=8TD9"S(o;'MtK1.H&
%:oEhG-\STVUSOLU#-d#jD@SB1l"qp@S+c3^"t^bDbKX6N[hm*Y>.8g_9h!h,:!OMc!0aac_9CRV@IRi.&'&FW&'bpsVD%(Jfi/Q\
%G3g6'F_?V5ioYD2B8^rPMJT;KVsR%9Vl7@EoV)g\<\eXc!B[F53U3nr[RM&_qoM2F$dFst\KuSoJElfDQ2"'HU[tj8`sS)+-"Wu#
%TkI.o6_J\/Zeks0n&@tGL][:XThpnF^Y@XAod.<[Y8&OV9$5qP][VL[;ei?YCg%0e9@BA;BNrSm99soI-B&L4b<9OS"S7H<UOZ&P
%AQPlf^RY<%<8Z,>o!D6Gee7,RjK/VsP4aT::#*)jVm`s"XjBWkVerCaf'OPj%!IV,;4<WTbZ7O"U8tAp1<-pc/Y$[2[0tGX7EaIm
%HV^:QY3Hb4D0o1mU316"[]*rrBhuTn[_gW^"!)r/$i@pk`+S%=G9o.HqSmH\:tX>3k-jWY#%WFm<O4<!>O.r,[LVssRp+fH>OD,!
%hF>9s^P$e#FpB8ZZcXqA`[/PH$M&lZ<e_bnbuVqGaEB&CX_c[tg0SXSkhKUFbFLKTVFFeY>/>>cf63r7a]H#A'k-4NFRK7Q7qA]E
%JhjbXaT2FRh9l9qJpQ3b035LrQ+=U%Sj=Yq]N#ZSm=hN&ldemK;c2@bmlP=78HScM`PEI;Z-ZM5mCNA*3)d70@mDNeNo$bnBjGeT
%mF;DYOXmPM4_]&pZmrb)jiU/#gQ;tNhE4rDN%&?@PYX\jcGD<u$!8ckPK2I^eH.hGfVYBce"48)TR8AAYGc9l)gsc\>?8sb/)$#e
%%m=^r,*J8GoGb#:2Gk2!_i>fgKUXI`o0*Di#d7usb,1=W[q%-0:pPqbP.JjheWIkQ4%#^PP.K,*3Z0bd+%IQf"3!),EZRkM+2qsq
%qoM>0%=/JsOPa$skEbH\!@CGFeOn8eV)3I-ZobtJ>Y3R^ac$b`)n_1MnN)cF+OGs14[J1FddWh+h$aQci_X<k`6U$g9*UWN.B@"8
%['YiF=a-rDfMiK,=qXG&4&43)a;rN>G*;!tj!;lhG*;!tW?goA/dEMCZrL!_/WJVJef?9*2O1(BSYYUNEkF\Kbh_JZ9t=A*+)2)c
%E6#KB!91*1KOk8&9/K[*r11lp"K6>7<_;.+2+I%]O+q+B4XWT9-s@)51i4i35U/b,=ujA@FLLC%,6OL9@FGRo9dO[pa^-`qmJ2r<
%r2(c)Y8uk&0/QbiG?V;Bp.;$.3<9_D&%p;TY8o9BH'j_Sr@K4F@qTd4[&rCgG9;@j_,e[hBka,BP3s`;(k^nJ/NYQ;qK6g3)4ur@
%eo(Y2E$QgAN/c-f??e&6.tGBO/]pA=^!NXB34EI;2'<t^dApD/D6600X[?8?D/2^)D-8p(pe2q'".X35CJ`;#i,gFbA`mJg.;Zu/
%!Xt0>kcIutZ+6HKe!du$THTPIkk4"RF*VT)ou`0&D+34,m=[Lp#0rDd#@tUak-1]2_@G#rCXJ!DfL\M1HZPRldaNP3gTX<(L/k$R
%<c%!p*9NXBe)49l)2We*"&sU5<AHsX"8;k13om59W0A0XD(:EaHgNtKl8B<V-uRe/'c?7;/!dUYV4I=%kc3Ka5K3:V<5W^E']:Qu
%^oQ2MVt<4NCFjX,dF;KL:S>P@EE5rh[MLjh8[hm.YcT>?[+FY\af$iPcj-NA(e9UbHD9X;Mp-bRR\=O)8h7?LBURUjmg7Lh8oGHp
%D0o2ZC[5"O[VdU!GM;r>851O#0<9>C!p7rX!>1(&#<H<)H?49IjJc"8&mm.+:+?X@<njYabbls"Q.;(!ldT\8hGA/qfljGa[)Y@N
%AOtDiJ<FSS^)XR%H)n.@7K8Z=N-U,Y:tX>3k-jWY#*_N6<__8S2'`@u%^eWm>2i:]1@scuY*3M7JE@598$priX*UfoK5XbVp/#G*
%,gS'q9*Q(8J5rmm>+-E;ef?8?2O0MtQ=PI;BJ8S"/Si'$SSgdB$QP@:8Vj-ep%+cu?M#/#U!U62W?lo5J?kB\.e0!or7mHW`sS)+
%-"Wu#$1;KP@icX;"-@()VuFgjP.\`->-*#AQEVVX.VsguVNNpJA1ng^J$qtlVPV\ACYe6/k"=&s9/>4eJs^m5COetrb/0p6GBCij
%n^odK[NtfPjJ7[<*IC:b7H74HOtsLF`ce^>;InTaZ(ADA"9$81?es)TMr4ALDI.bga!Yf_5'umY!>0j#rr2Sk5JDFBlL"1EJ,],E
%'n5uFcd,sXT02u8n%\&3ML9UCk/SSCdd$\j5JDI:jQ3^d%h(W5r)\rF_o8CSQGYrcp!Hi*ig9>BnFKG*_dEFtIet2iqs,CFIXh-Z
%s1TJeV)SD<:QN6dFUkpF!%6!T$C4mH-Kj"6o0#:<n)3)?^rWXs4^u1\e8cM@=7ZcIq?-]:Q[>XQa.]E"E2n+c*KCY7E:A&/6duo4
%csX[5l:EUZ?Y^hqJfX+*,AcoX=F/LUlF\ru#pCf=#<MpA;iu&J7((L>"N^GJ!-(TbQ.1oWTJNPj[eGtDk&E5NZrF*XpEP]<\?[1F
%;0iXH4qoT=W`*<@#oU?bTGj2hro:te\(Aru^4$"WeWVqA48];e?fEKj67D`]iBMeiQ>#F,LL4@o?9EZ4j3'[#Ies7ZIs(Ms./AAQ
%5NrPnR3:k<(ibl697uheI0+WgTWi0``!M2#)fPorm$57;k@?7dpK%X)%u3ps;BX8$Pqan:W1_(L;V%2q'SrLrG)($[,iMpA,8m,;
%iM[5Lk<kgDkguj5Auf6g93N#KhPY+@X@(S[md8G;EGU^<=0$N4_FG^O5)qscEg9iU"eHO"oT4)jPioOp\Z^F)PqufVJbbj%Q)l_%
%3Lms0aWQAh<ble\[,CWiJK['o(Q)(78N%YC=oZC6-k84:CDR)F&BB/*42Z+n'_@G2$nInH&[l-c:'b\bp'i*k^5OYZXQ/I'.6l&g
%g%+=j:7RU(Q3n_@_-fH5<Imn9$O9Wg@)1;u%.oDK@$sNTS:EuY)4keCO9#)_;/$J#."H8mXUUYVm32^\'ro0VR#YkeWR-ONfVAN\
%VH_)m?]FUI!G=/8;,32SOP[lH3*\%j:]]&Z\HI`[?Y-7#Xs&P[#U&Aucdo;`V#mam*-;`UL=jU.7?7?)OOdB)H3FKBJ\30e84ur>
%Y.0NshoB<Ec79m4\-pYC:6aK_"R')m'f.gLZIR<K^e#WrgeoBKJ<RI3n1)*$+-n$'ho2Kob_KRFBeMM];,l^A@QHHU#%6,O"5bc0
%j9kRS-kjWM;$-@!]SBm$/unb\.EdK?R2!G&n,gf[D-%gdJ=rs(0+:d4i4QQ:[:\4a-U>G2<IfJVO8qkm.0=#jlBV#cB2K__*&FNY
%`Ntm]0"$GQ7a/kqX2-5T,a2e>TsKh_b6m<7Ws!&I(HG)ZSE,*0\4inhH)f%L/Y'In0ttV;([E/O?C<PP+#ri'.Be+VV8.(.N<&bs
%FTIfZa4j'$X4J6I"7m5*ZAX5mh,8f,(pG&YhJ*=s2n6'B#8^UbP_fgK2Js`fY1I'>c-+(:2Ip_`GaAoPGW7XZ&VGWSO]_pU&5;\P
%o1;H/F.<9S_KM22Z>`%`C/^,eO\;RaQ7p$OEam@F!!BD':djKB^m'e"3N8_&@)@J`__oF8XK;\eTb.h@R'4>l2QkAi)XK.tL@ar6
%!_bUhi?\j8n;5seLW^J<Baq,u#d/l8X^s]IX'0R;;P8s)3p%?k0K_7<WNC+l[^;A2XGoNVU+ut)Lt1_D"_W8QfkH4im=!'8N^;I&
%%r3p)Pu+ds/Qq$`RMjJF^#Chj>6bocFFnPXf%W&`j"76kl]r$6,oY[9):HAV-EVjA7Kr?;BM+>noGVJL)YetF!8XmEI+0()[&fMH
%'M4>.(n$N/CDcC/4ofNe6YmV"N#<R<bo;8IK,BnDOL823VHXK4\IKmE@uaasfa((QgJ'`g.D-q2bMSdh;O=84AK>6H*<PjcAue4q
%7eorKFAK"C^(s2X[;&c_[sV!\3+!,^FH&7?[TND<jF1TiVjOi1aef(0!S@IT\COiKlAgIH6P8-NZN?m>"DjSYd+(8Be\)1;%JWb-
%J8d#o)+8kbWWJq%5INNCI9as(ps"_k/BOHIU71+]>lh5tVtt^S2;f**6[J'9pL/<G97S0)cWsK<6^I<oAJ@G[Mi8Tj>B>MZrI;5l
%eZU==eR6S_&f9[Y<_):N6,I>W7F0CuU.hR=X`.>,2liF(J[MO<),?Me[7NPO;Xr+m4#I-YB=;uNHCm*cSWqs4o_'?mFE_q:[q!8D
%lhP,r^_$ARE@<?QXs'XqWP=<5@lSC"crtL3-Y79bgsLhH=kfM)'4SJ@E].J%cW5:G-?lH`2H#;8\*1sil\J"BenR6i>WO4<3@/Xg
%X\:i!l7/M<geUU+KH\pB5e`d(^`mET1Q_&<i#9Iab6Jf:o>.s;@b7SuF.BG[S1*;j`ZRWQKI]\)CGbVeJN`"P.#e%fZg``='(Z.B
%m=@PDVL0\Xe:8`s'i10mQN/56'GX/bL&a#I>)7t%Eb.oK2?aY*>ZYea2rHQg6)YC"/iG\f,O]s7Im`]VSX.j["t=?p3b`u,S2r:4
%im;PE+GfSdfT]TCEsp'A;1YIC(;PS:f<m%\OW]0?'s't1`Y7eH'$A)56gTC3X)%RF`_R?J^pL%KePr2l?"6Lb[>bJ+W5>Kjhbs<c
%i7:XMU9M^j"hfS$-L.]Z+?-U=f;R6&9bT(OH&-5l]Wojg<s!DU'=/D>&1`KN^)<XsI_RKBO/>P_OT[D$#n=Dg=OpAM';Gi@4Z1(9
%e1)cS:F>Ie&/GOA?/JJ1_Q%JCm>4R0/aC0k\l=*/:Qs?icg,%g-u-NVns1,p%iM@q?Jor8WsM#:(P^pE,;Gn>fc&?l_TLOS^PdD-
%bcE*u.)M4I^Pg[#dp9;GX<eC'9P?<QKf_'L'#`?qcmt:]f>X\Sl+3omX`&TXL&h$aE*4F"l!^$]Mmh+:;_+U8/W2+"pCTFY\F=&9
%!d(-)@g'7BW-&1YCfNu#.Dgg<C!Plef7a*kbq9ZW8a\pm)S2G3EZLGGI4/:OWHONu,'<q_(<F9#*9rP[@_2rnfPP@M&$D<sG)Mib
%RkdJ&7*Jt-VlC;C=9Z=ARsq=cIS'UBL/8=DMopg.6Ud_pog1?&>u?M8MIQV8C=jt_9=;8%@CO.d6efW`r,,:,AtamRQR+)-o]DWb
%Tm=tMAmD-Lb65@AgOQ$dLULHOL)L2NC7BEg;:e:!93)3ueaa&fOk$Yg]4lLTVK$JPd3*YRET&3X%ADGVoJ)B#(SHI<E5HX"(9&hI
%6.4Zo3D4E=2D;7[.TO_d^=T"qok^[d1EF(_=0oEiWN>,c=)Elah.W0LeRW'mfnAp)rX;!;rP)NE^R4"jHGn`@AeoJ9f"4:%1tQ#:
%jT7&#:DVtMFXJ8/[<!C(BIY%[-M$Ic^W\p7g%,:e(p[nj6[TUgc^W+q/^7<,)@H-hR`Cb47g!qd%iB"8+'Z&a&Rr*BDCcSNVch`T
%?8c$$qe5bJF9/t\krYm7kKPEHSeFp"W8[TB=5V<>qYLNf&*nkbprk4L0e<!ed?&A2-==>li88Ce%KoC&oXdD+49bDEHec?<No\cB
%PD>7NK"-4\T'thhH'YSe&toiI`EAF:"GL/#SFa<0cIWF1O?IQW/16Q;\2[L6:#V9s]9a<!4^-**4AGl/&sB-/0kLS%+&^(j\7TpB
%1:A#6DIH>2`['7KP-L4[C.VK`;XNE0$-eNaRc0k7S^kra(W0D5CA9H&SNBMu.bl']cFRcH/#$2V1SorhXi4JVf"`)R[@4/*0sY9:
%HGVV39DMtjM1IMie?*To+K7!E2<''*8UT%g_$`uA#R:>;bC:eG6"/;Y`BWAClLcZsBtc\u_!2NO0mBZAU-rGa3;LVl?o/Je:d[ua
%i?Gl7>AQcp+>L0#@M;g&5!o5l1OQ"T3FcUPp>`/J'[%mn>8$$k:]qH0_aOe6ai%1UQc-!QZ^nIU8KsNW_V0Tg!S8bYP-L,snLH:I
%_`K>5<R[IA0s(Z**RRlMV%6CZZf+:Li&I0LQ0?.1m\\ipL*loEC+X2N1348)R>TXBd+fo!Vko-.mKjGt?d(.r2R97tcZ!)b(YYB[
%))9G-=$7D9ed"o?!Du8:Ln^\O!O3sj0I":6/2$8Z=*'FRfbq"N(EX`5]pcbG_sDS*\A]8<S$]X$eqHrUC-^>Q"mAVH2/B;7Bo:1(
%>)Q!i)&L=mXi(Ks$oT%^d:Fen;H6o#":AqP[2>1ujgXfl(Y.i)gA<oj6"f5u-6iQ;W@c2+$W$/d4'(TpiM"s84IOXdbR7ok$u`2K
%;o%Km,>m!:PQ4l\24@I3J\K&g:RCM>d66$#%WI3Xmi)-(BC+GXrEGHGY]kZ4_g*uhK%$g4=$9/[I^%MF`\>:9A'AnfnHF)#a;T`H
%]mlFf&R##%5<UjZSBeHarG'l_93,Y8`"kT]&iCF2?oRG9724&tZpk1oTJ`UN_,KFf7=`dEN]DrO7r'gTR2!r\V'a`E-gou&>B'&<
%DZI.6jI"p1M5]W3jSP-n&OsebW9%mX/$SKYQ>=DI]Ob#pH<1ZZ5.I/tf$(uAY-Q]<c;FT3Sb*4_QZUGHa-^5\Fbk0YfJCBCqmqf4
%/;I"Vh!/?;Df!7.rF+Tt8\,M=W1G0=Y?f6F<?mF/'r(PtS^+%InbU@I)XW+3L!.Btrtni!&qRdc/SiVa`-Gf:[mFl-:W&.Ii2fJi
%]2>9<*h1K,F-5uZc0;P]f"Q&umqH_3ZIA%-Q`nDL)meX(flDoP[P*/jD%1"RrT,leje4ocY1IhQ5[<%3gk^fk'fn/UL3=9R)@UZ_
%_fO5nHa+O1Rbq<DgkGYQh$.nRg["AQI$>4>NgG/^P5_"qp`%5+LJ[Oap9S4$$0/2Y!Cm:YhUoX#!tXFB4qf66ViL[##.*Q1ouRZe
%"IgLcIEnU#;dShKZA;!0\9^ls&UrW*Oiqd?KAk_;_X,)2<^<7Z^0)jKOJ(0[*q%@eI;sVEkpsUp]-c3eTf`]70W\[%`YMg(<\6:%
%5/uE1,O`DB:@F][`X=mM*$`F?o,k:4!k64&L[SqAHp6?BBVa!gEV:JYI_1+%R;`/Ns7i(ukpbCIlDfIJ/c(GdZaXr"Da-+,mobL)
%oAm4NXOk>M*c@E\@<<*+2o<9+H#NPC;rD6D'q>(OUS84<)al=\-h0RUmZW%BKg"'am#O@qO`I_AmLb12a><<6,8Vc/3.<?;!nV,`
%nJAMfE7TGYE,:+!+s*3Xc\tTY3W'L*K?$PpM1i^9`+=/#(R6%m)$B*ATk%t_8Du/Y3e,qBd'I@0Y&<HIm!H84Slk7I+>.N&aZ(Rc
%=MWKi@:ag;UT/mGE[#`E7KR&FFWK[@"nWq\o%GqQLDDDoMo#snXd5!.@C49VK>=P_-AF'pDsl%(nfC!Q2)5@QAbBK=JIgh`%V0kq
%1Hb`(R;nM3hJ+$'Mbmk>*&pkQEePK>1<eDF`1-/FZN3;b4m:kt4SUWYPr0eJULlo$&KX4?'agLLN_m>*B5B4Sj*W1\@7Hiih[p=(
%QZ,ATmVD9uc^9eI4.VI2,No_l'0m!G`q/]#q5$U!S"JON2.<<XI-BY&&b#UqR_f"fgq@S:h(mZi&o/Y:<bao6c2`fKp2ES_!%;%%
%Z06??:h6DN3lUYE)s4mQj#"%%gg8S6jDF\1c4\,%cG0IhdhbgtL@E&loJ_i'P1Oo2ehpTL>V(&'[UZ">/j,%@SrS4@m4MmH63us-
%fUuQ?_<tFBI[7kgLU&e,bM%--K/`96:)JE@a0-5fiib.b*d"(p)?qce?6L6h&ANQY)jdqQYWd[i`/FMbPpaJQr8AATAkBX+baEIS
%#Jb7pdFH-c0FF9?R_I`iljG+W7MftPj.8B@6=EnBN`pC@QeRWX0k6Wqika;%iu1UVopL:olGgI3jrMH*%o+n*A0Ztj0V2?n:\A*`
%U*Y,iE(udPZ1FM+0cZejLe$o1oZ[+c$^8F^m@Qe,!+CDWpiJ]5Ss(L=.2>@3LHNsN>;.89)/t;S'5BYpJe`-%jFhm=YIR.E2I:T&
%34Eo"X\VI=k<i7Pfe]g0!(V!VaF9M:>d\V14Ppusl<pVrAs0+mBmuI^FWL-oY(aW&`c;jXg+'l9fS=PR;#)-83=-^L3t;iQ$X6m1
%YE&24!8W*LZ=p!jqjb$7DSEj#ZO0phj)9=2lf$7e@4N\1FniEfhr/_q#JOXXoS+>TLA3f>=RI-&hP%8b_S+%8'V-%#BNo.E8[!R'
%>oq!S!-%GbRK\O!hk/C"h&mC/)r)t-gK8n5+cUDYEPEV?jrV\p/RP_7k%KN=-+%Ha;`k+HiPr`Vm"br<cOMPnM_Gu#bo0)\oO:RT
%gukj%ICSkan*u=T?C)(Sp'?GdlZjI0(,:Y%gR)J$e"er@^U9Oq=VR;[=8")p*PBP6bo=%1UjU!`:*X%.1QM@bS_QX3!7T>P."cBI
%4??7\Y&S2UXpPq4c1#Xl?eRV:G!n@8=N8:sNn=077C[T@gP5Cbn7@R'0"KUg?iO5-WZr@@m2[S3mU4;chuUcsec%N$.1[H>_bY,/
%D0IS!LMLk(j#0$u/*lX[nFUg-[u@Xr-Qar[&#?>EfN66nTGof+jhV<LL,NQ<_hgZ;f0CPAEan`K=:?R?*AM*;1\/7gK0'8I`49bE
%kj1F3%hG)V(tAa5gJ=EY&+"aG*\s4?"6q#aQ"rm.1$IN>6'p]<Z-uAUR<;$#(!Q=`GL'';j$jc*j[cuW9.Z5(%j#W%io`Eran:r:
%Vj.^==b_3"3\1dLg/m9hm'@mblug9d;B?_1dqGi<-H:2=DqDFF[=D*"k8(f(+Z>F3o?S##0auGq^i%k7n3QqR%q')lF[$*J76!2f
%$TePK*TsI:@ouEXY$;tkl<.H5)$pba2m1%(-jpX\'mmEF:ZpPV(8X/)Ou2Z&1:52CU7[gfH[(*Ge%Tk?*g-b=J&b?[(JeTq:s=0c
%>,]>OnjTMhC0A7?V5+%><4`s;Y)-<`;tfWAni^'IQXborTXU-Tegd<C'/B86KIj"VRI__,C@QUn7@Nr*i=4*N@i,4%[*J@Q'"Jt%
%h%ONq'G(njA+n)0Yj(LV9P=P=qu2hXR2k/:7+@N"PZll,%9bZ;Tc<EUj8;%Bc$DYM3ia'#IdO[fF*Kq%nRleq*d[#2g:U;*+!$BA
%,55bICQLgl]+4piosG=c?WPrJn.rf!]fO11?e%S`7G(,RQ_):H/_Y)GqAaqJQLee6Q_NQl"i)GYh8&9F_(/G#9Jb?*U0g[AL5Y=1
%?h^XUG<can)^Etj!,KqC4:ae2V/dDUa)MAs]s!]uIaG8/_>4XT9@MeR\=G-`QO_`[GSkfh+hh_NVMEj1JH4k1EOfos\hEpha](gL
%h7X>i/N@F_NN>dqFA,'4@;\s[76%cj&"ljMBZ2=_h!=b$gu9+6@Vq"1Tt(-6p(tJ9TTMsD]2q47i3C%`hu5e9a2%J1aHST-`*kW.
%oZOu00aG(B3?%CY(dGBdPND6A:)(H,Sd6SE5/bHBosk(`Rsch'k`.psf/t%s(cAdW7aY8rG2QW2T4U2#WH#dP^@spMU>;2QWd![Z
%ltmOqhA+'hqeQ)_fCNZ$WoL+fU`WdkO06b#i*>mu&[7^[n?XU='^rDi#Rl"PA44,N->]Q>#W)J4Z@:<Q$m+R/VI>9FA4K89ljoup
%eITNWZcnAYP8U>fSH!2k9Ki6KrTtE98AE4gdD1_Y<5Q).&(qmF'G2uW7.^N8@Kh<$N6#D0Qmk9um\kSk#3$b](+,Gd#UoZ&L&:`I
%B4@WLfJ7jsS9/A`_Hn?/LJd/#9`Dbb(8lE+QOd0>>98D=/[",GXQu2po#InI9W^j_2Z,'iSj$[d;^WP01[\/TU_V-6R6bB;+"a/;
%PBhO7%_g'd`92IhhQH;>E\PfZ\Y8H-;_\*-9]XA&OL5sMe1$h@G%FlT<V,R(b8QT93f_3H5&r-0pi996W+gq@5MnQi3,In[A`0PM
%`f%bbZ`W+gc8V:&oXgF`d%3!1)mp$HMY[ng\',+_ZVq;L9R/;#HrJ4Dp)V(.ArCcZk>o?>+X'1AO`i8IYpe]=m=6P1%V&0G2Zh$2
%`]2j`HrCD1mOom79CKXj`V6Dh7#2t:Wm3`g!E9I-jLufX*%BCF#E6:*j6,L767]0gahS<-hi=MQk6AZn5U0hGp\eK+=kb#R"2f+X
%IlA#FGuOuY+T&ZO)LuW2R;0T(PGMfGZaipuYr,BSo!Jk9SNeU8T5hj#\XIM865[rQ39:kFeeg/=fJg\Wf""t+dme/kJ$/,#E8#^.
%_qi!ZNJkN%0&I@GM]&#LJHAR-'GH&To>o%da;5gU'+];l,b2cD+T1j&$f]W1(&EksI//kP4=oo.Xi-H"4!MWW7ViED>gHC[Eum[$
%\?U>fP8S]9]6s'7Y0f[[WD-!C++;L"!^Z4PdjY%l)759_=\QN#\4Ug0-fMXJ&I40sD)7XE^r^u99g+sMBOMPFkDgK8`s/JJBXT"k
%lG]?4X',I>d+Odn^0Mi[g4&7(+`cNIf8#r)cb"B;m)%[RB+q/Sn0g5S)1c.fS=Zb`4,Oe'>i7<u2EF^?d&4Ou'qB7.J<qO7mf3tC
%'0`KKg2t[Up:`9GUt0hYPr1=Qp:c3c/g:Dqe-j'R6%8u3BjR%cZa()RmUm!k]=,FE'"a&[e[I=897A)`D8mGt77CZV/^JqNgY>Zq
%fBf\F*k!YKq8HlI"b?/>GNGo7(&6YR^P(I8!s&/+"`U)@_8#6m:"rWiA@0MCR;\NTI@,#Zk@6U>:,k`gkMR,Y"$knU?i8n2s5IJX
%bitoeA3UKNq0qfc4(9Kdr/NHdI^Vebn\*n.!6ujlT">:NC%&N:!rrn*gD:(p(r@rGcRgN;%d^LK+8^j9BkOr4f/P_[/_B9Y`\mN\
%8*I<MYb'1eVX\Qs;]!mB_K6+ieaCBuC#=nVDVQVqGh*[\fK93qaZX.$E!kOb,1L9i8YbU0.JpdhT*LF>^=s%/mEs'JpuEX#k3"]'
%p@m1V!(Y\c3PYOFJ\::g<@@o\p*'=l3C`#,Aa<Yo2;9kbSe!ml8(b)[I!U$<'H2Ju\bq7PDInmHmGf#VGM*(9Dfui>RB]I3-9(^-
%bW)!AoJ?7/f.Fm+(l[3LPZ*AP$)Eqpj;q<L,BiR$((gL[f<`I$KPpI<,Lg!Ho9.tq(@X*-5sKJMdtIS)Q?#.m/C\hZ`f(r^j09?8
%(_o4UeLkBVnV;2C$;^"6H?Z>Xrhnk:))W/)Wf^riT\U3R@0c8Wb.<h;'tWO-!9tiQDe_Qp?N:*s$S40JpaLM<,h0r`s5#\_E@Y&p
%Att(#oHCg`5=AcKqDLdD>e'^#0hsm05'jAhHb-[<@c:`hN$IM:Q+NC!+^/Gg$WU`.F=L?n6FUPX_'V-uD*9oU`ja$Tkp.1*9dLU4
%Qj51]-T]oP2f'H@WH9=Sma"pr;3KUIk]LZOC,P_<J>+F.9fq\/iR]=L/Jpk*J4FqFft=\=_^$.@IaIgrIr*a<I]Q4I]!7/JWQ8+/
%i0d#?CL"fLN$ha]_P;/tlYf!_WOHZOI@2USD,#9-J]-&15S?IE@6@9N>:]Tj,\"r9e.B,A=TErAY390^NV,QZW%aT]3aFW2AlP`d
%:dn-#e`h5PGQ!.G<.%'6)Ahe/-]6<g<k\%d4sWAr!,oQ^YfB.G\(KhmO8RgGp(R0pcfoG.<jFc7[k$:E`o`ZJ^1$8V8ij8Y"GkHY
%p'LE][E!R>4K>k?!Iaa)*DU#dACek#UI<"ZTQYPsnhd,77W*,bPW*\ibQtM:&iXeI#AJB%cBp0t/oO0>Z=B.YXm[p*;lTAO@G?VB
%+[0RH5b9+-KAESIT6!]PT5A:J=f!#b%2^1)5)_.Bn&*m;r,d!p`.TuF9WBASh_[GKR0Uji1`o"#g4f/SH`LDD5^JhQW=hYPnHc&M
%,,(_HL]M:er:-CHpnMgmIt*=Pr>kr5>!u"IdS9kdK#>Jf6IYd8I7'[!p@!ua[IC^32uMTh'pI`XJN`/#S&J0m'T%9/:-80jRTG6]
%3o<uW(MroYLSJutl5a[pH+Y8]CAIY.jOI:034UT_Qrbc"YcDf:2eNBl!QtcGdLH>BBEXhgQBDo\FaM'L@4Ab4PDm_YQ@0]/N[b/5
%Mq;92V?_*A'QV5q!;H&P=3&)\IgiGJ?ET4FerUu=7#M*n/8Z@Y%KVMuTtB?FZ%e%$MlPEu%g0MGf3be:Wg185\I]F-_SP9[!#lc3
%hHj&Zh;Z>R]DoO]-Sa*'(Ri@30&u?_=7l:50g:6op/j<SJimq_+TsKnEWLD$r*1U_fQTHb4JN,8m>L5qW?U(C_Vm9Sc^:?=SM;2u
%D$FO^f8si=7sX:%9!?^"#95g0LgT_Q1R6/rCG_e'!It+\CW9*;N!fZ6q8K6^!Bh[g*"O8ql\MbNdbA\kAn9aUhUVbZ91G,IV@<!T
%Xrs_6Hsmhs'P]ea!X[YV7d>1n!qBfn\Q4#aFS9>]SNj4.[@]4SCdYm,Rs-NIQ8'UTpJ9D+FTuX()[EmG_Igc2%3q!5(T(pQXCeHo
%OUXE&UoXY3B94jbj"1dEd-+W9aOOsG)S3AA7^;r9@_`>@8Mag+\a_l?_D?n*$_kGc""1GX?5.;<BigQs3rMQJ&rpO_!dK3<i^PuE
%;IlCtM"`GanqZP;^.d%"J[-,G2C!1g.nZYf63ZbtML22*K`t5gdN.c*$_Bs;ko[fg@HV20J9&U8H(#Tq4U/V,">_94*6+C'or8NW
%45p&m_RZ&8.W*`pf2RM_5*[3KL;(l<EnnH52@8&n_6!F6QM71R+taN\9PhO7f%:p3^+c"[2"D^Z<t!?ISOpq%6j5Fm3uT>5AG1nU
%81g>uHp=Cs7NI=Xr?^po'\+8+J=W\D#Fiam_Hm2+.mc7kYV]P!m((-@gp=p7mlP#2Ur*2^15o^a`T^5!.=;Bt?p+`JM^Jo(Y3nIT
%8$35LgKYJ^8[]Yl=,UU4!G*YRN-C/+9YVYoKXTn`Nip3Z1f`kjn.MZ$0OrL0^Fmu^?^uIrn^t#oFiRJK:85\=;T0\h-tS7*H7uPs
%Xmd6:"R6JA8*/9FkEn92opp7r^4uRtRW'#i'^Bqe3/+qc'QRH&%1f-f%a$Qn4Ck#6jgY#]7kiDMm+!d#Q,??-Fq5lWQafu''n($k
%H^)c4A\2sMnt('Z)%]sPX8(L*9,SMpY;N/*f,]i,4/*\[p3=e6&3<nJY,\"[JQiF*lhD"q<6GD=$@El=Z78M0h6%mAN6$S,q@RIk
%L0n=ALQNG$h_5\tfHYfu"tBWV`oTKW=&g5cYh[um#btM0h/g!>>JdFpK(*js@:P@F>So7aPpbJ7$C2_\TAn_0B'p"jV%tX+K=H\Z
%ILd>p,\Kfc5Z?[Q.sf"=D48@tJb-UA!p?0Xj9hD)29U7(i:@b60YZTcfMro@1[[GA!JFMQJTST[:tUJMTbm%R@JCs(CgEO3.J2/`
%L'LhCo$jsGT0bk;:A,;:,_+5Q'FdhMQ-9BH^fi/YFpIGS2N[KQ<O6FPL9HqGEV?0>bK@A*2;:7MHF\g?ZYJ8[O9UJ?="?]*hYDel
%D\E6ZKt*c#3(q$-]68q;lnX+/o.Rmb>5ea!2^;._(n<3aSZP$-3`dbdM"/e[E'r:"pDf?"E16-<Gc8C$dghrK`hJB'HXnl2?jhX_
%:?==a]%L>C8Af^IJ`DJK=@!PTZpUMJ&67k%;2p?q2UB(<%)/]X%3r([i<7?d%X:"P)HtqE@T-fB\#CEi7]c6A/YqjDi-DH)COKM;
%N;7[[bh#o<>.D%GdZ?K@UXg$-#UTVHng;,)TS4carh"@R1H&Q2B]8pGcB]ZKbS,m!Ym+/7kF*N_o2ic,I?trVD(tD[M[L6kZ;:!,
%gRNSfR07.PGVp_,g*ri<g`hZI=.,%4*3!6GMpV$P>!0:'<A&VZ<0*DfSSSUJUQZ:T8*u+j\FP8bYelKC_Srn(hCDXXTjki`'mE0&
%Oo-7g=]i!Y(Dt4gb^#I<?g*q=`J-??5\F'+WeNq'a3P#<]W_`d-.=_oOdjMc)-SMX_KXGT:,t+/)Egh_S$_1/^cUE+`^Pkum&=8L
%W!?/p=YH@$7jS-&Uo[im/e=tWKpQ(PJcR,q-I\VBb\0Jq3f]\dcf;<97LkZ1VgWJ)-;Fk#H\OO#8gujj,nH3WO65bc'$`1OU+KBC
%iqHE29P-9mma%cr:1LWBYnG_1UE#3/,kBTW&%BBU3OMrN]c6;@Sls60O:JerZ`'m3h*Xj=j18O%/,K6cprd:5RoMe#eJLc@Z;D4m
%?>d,X_K:_1-0E4eIK(\r3?Oac>@+DXJ5qnTb_QBA.ia/rs2H6tPI,#uo+bhJn`NFGS*jrun:mZA@nDVi`>;AZ"EH-NMoO2H?;[;P
%?3U+`5(QmN+J`*?pCCaL;)1L%An:/DR+cIWOt&!1nLtGZ_;)O!%t#2t*IcN>)YMqnW"rmC`)7E@_](i7]%4Y#*=aBRBA;SASNHVs
%!/=kZbrJ7pSgi\oc3-k2XqPsr%f^&UkhE103PEn55ol1tR1ZAf?Y^4R]]3[,ph+^5kUcfQLYZ5o9)tabeS6Oh6(RbjBF4u>^S"o@
%)^MnB*LN2ll!*+L^gsKDn>a;^,I`h]a%M1)Dqs;rpi&QBacepTAp"pjbu!uPW\N=YXb"c[Q[7W"T2HJ+E^Xa"MbKVDo;MB@bjUYD
%,<*Cu'_*D#?j%Yb%2T1Y7S8QL$m5SoX>7)^"&[:F>bMoM0<d]Dj27qG[CD[%,;ZNt4;[NlEp1"G$e^-$9(reNb\H`p#DN(a\ci0t
%`,cAjgP>aeeJGk=B]-F+)kq/S>`31W0G]LZmW#YMYl#'ndeg'^53>Cu('R<(eA)b;)51Q#2WrI<K^R7N)0$gY((<A*nEP!9l"J)>
%n7S/BNrKH!cGLK8'>HUqOsrT6'b";.klolsg0Xq[q]H%0_W%GR8:o_N2Q]a"3;br1CH\h]dG(D2!p+e=i/:6#^W?hbk$^(17^4P_
%Q32DGr;3iUF45_f"qBYlWC>5;A!>V[99<&G"klsBlS$YQZC>me9gg]bp2=[9$r0W-c,JS^28WNR.g-D<l_ThSoAk28[_]LA318I:
%WNi'neAXf9DqQqH#70.6jAe,B)oa,JdM=n*C4XDuO$*5"-[U`PU2\q4P!M:^#)ZS_r[^L>Zd6$nOCY*OibR<0U+hn_9:KU*pSCDb
%,P;rs$$m]%)\t0>U?KdZLWI+Y=#J,(EC3%+rS!r;-I5t.WoLY^[EU>+:6fZSm=j0U<i'qc350[>*0(K]91MogUdp7gNma`A0qUic
%/A](%_]E+U@pMs[d7)p>5ODW[!O+1b]4%ZrifE4]C_h_J(F9/ehMeou#%C=okBa%dqs,74'CYgA#=(QCk*=!$,Qj<e),1;'AmBF6
%GV"93]0;=p43j-D=&i6fYS,E!&q_G'X=-tDDn-FK3La2_<q6!gP8)rp&h=kJ;^FVUdS4t\\K*r0Fd31Zgm$Nd_g-+gYTl-T_A"-R
%iq^k_UWV'Y9nTAol;H80NR(J=44Z%Y91ZdI<M1l3h&9N57GP[bUG60KYuKTt^+Z:&p,ra'[cjYbaDBFO"LZ&$Y6:^_N1cj8;SDV0
%lMYu$52jE?!J`e^'As+cP3Bn1i)sCoXZ^l"rH4o"&N*V4ammMBDT5#GH(nDj/F30R2'2)gYrL<CE3)/f%1=Bt/=p'1X!^ujUSOA>
%$VOJRO$!f3.+K!hR@I?WTK63UFZ9]0arQi5%SD;N&unQ<S'Nil4:e#I2ceKUZ38PbUI@J*jLFf8:a@#8==)UqQ2pnMD]m?=cb^9#
%BM\GU[[rY[fo1c%%6sJliGdC9Eq!2T>?0_Fl5>MA74d^FAL$=9!Yk(CZMsVZ3"]1\KqYm&-j$VR;MtO@)%0*\YEeQXO+dqG]V?UN
%<`eXXYqJG7fbu:5-)]!X2=%d32H?:9-oMHCC2MaPi4gnf0B%!,Ph:cG2?cZ1BkjcfA<_7u0cTPcp\59%I5h(3L^Bt9,D6?3@S[(e
%aAFE7qD]SAb%`r2N88,TJ&1O3=!E(<$P?p)!ERFiMb]63li+g:;'Y->dnBmdQQoA:d_>E8)b\CW&pM"mOpl(+/l"i!60$F?7jDE0
%F5p]"n`=mYF2/,<bN5FjoYji>^iFTT5HM]]3c'JU=V!9:Dc)/nTm=72YWF@%OU3'q)0nYV^S21I"ZclGI@1jJFr-'nPK;O@\E24g
%,8isLU!$K"`uaZ$Q'ZTT)RFCs=Df4=+u3;.5?c.n\IkuOQU&a,!D3!"Qq`l4^_h1U#Hu"f!OBT+C[1m.jj&;?<"#f,3Z14&4Obko
%:242jD4N820&j%@=_?T'g#2tC%T0B><Ol'?H\N-V1G0i(mL<'LqHd"%ck_-MFlfHI1<A[J2iTQ7(?)"q\kb`sEF$_u?#-*I#smdo
%NJAghF(>g>!`Y;NHB9m=60hFEIiqH$4(>MEO3-/G]u)7.;DYU@`a?6*hjaRT_Sps4<CQU0C1,:WPOoG>-cWm_UmB/UC];K_g3ELA
%XVAoO6'`XAG*G!7@`N*6mPlbR^)AKGYd_1r:K(iMU?qFOY9][c[p=Zsfl'HpE#<E$EC4=\;OmCp\4qF@#6T>'71D7d>]4&(X)!W\
%dDA<]&MJRXi7V^ahHkdEDisrCN+X+:@a.!l16`Wa[m8<\1'H6eQ:dlG>;%0CB$=K%e/b;.:6(+gB2"CU].FZ!:>V*^T?9RI9b_Xj
%CK9qUaXE@cR:Z[5V(Il^b+;U[L&mn+12R)BNJe=@D%hjJ4GA,TIEG%Rfk[kufcaJAIjCue9@A[5>F?R5KnY;PAOf#H3CGoZ1I3Ug
%WgDU,hO1GIjgs'+YBeeC(A_Af>F#S[+9_e61X"I\U81_5M9d7">ad-(FY9$9m4FX"$..n%IZdm->J%g1Pt=_T*E1`&UNC?8WST\T
%7["+nRG8")76tf"jI<P2qN^>7je@_F0$eSoG@!^]r+F!E/7kEI&=c[j@qPA8\!%&8c'X4JVAnf'a`M,dCli#W@1nTjNHnr\o?"V5
%NFW/.XD\AWRbV^rSI^WK,?:j]EZn+&RTu7*Z67^bU$taaM?82j(AcR8'$ubu<2PiKA.Dfe[$l.uYRdYX%V"sAS1AEtLRo*s(G)4f
%M9O&eL%,aP(&`Ia(6%g4Y?GrZEGVRl#Wg>'9#/7d@0@Fkr>-h%2:fKFh[XA0*:T)=ek,$MMulRIojnC)6?W>_gdt!Gr_RCK%fD"^
%BS@)#DrZFrO<H*MZ)<7-G[pU+!@%m,fo@209J[2#XU]l+V]G-'p4h5Kf5pb]oq;h_3tA,+#17uD<m[:aQlS_<V'TBPG>-V$.o)=]
%5qLt-;tdU"R?$O/O*7@_boS^PITATGX*u&p4P3[KgmJauaVf?<5O1[nD0uTK!AI?2Y-'SOru-VhkRB4'3_b^/K(4@mD>WZiHs*FQ
%HO(Fd,(-k#&P]7a6haC-[t[2u@Km/(oX$ZX'^XEeICd_H`LlqZn8P-Chq]!U_7DCU_7'WC@_IA).&Ue>?KI8,bRhlNq4S@P]-iBr
%WbaEo>&AgJ1QneFj%cf#^/.4SlU?_.M0$"hFm=;U,Ra+)"uT)bWYls5U!1"gi$d(G]MVEaLkZp3FO$]!?KKGkEhT((mJ[g9FGY;6
%_B$p0?63-`2u7kdB75gG'X5^V=<d$89tpB"<'K0,m\q<df/k'kYSGBH#.Jr(>@9j;24\mU:=QCpc(J$[EdM5eT*4(U6)lch(r,Z_
%m),ZX.uRE:08>6EW/"_"=1m[qHKXP$L$E!.8PcsWAV=gC^tj`XKJK,Vj_c`6-nPJBp_N,sYAR6*n=";m,>G">XLEIh:Y`XsEoRmg
%U`Y5jd68j;&X6M3a1;5!c8djg+4]/U#34@sK0UHk4"7^i9k(kR#+*.<UEo8`6Q[s#209RHcMS4Z(CepG=hb"dDJPp7]pt0#rmSI8
%!SD8(iDahZ%*>hI._A3)>.d69L+VI8F2_SQ4nQP^&tQZ=U^kM3dE"m7OOc<,Bp:Ha&Yp'lHp?s:q%bFaW5'uuVUr^c?f?stg<qTu
%]eY3/2NZ7+X]c"#e<'a]:>UggFOG?0.kCBEeNeRD8$fsOi%%+s6QCD1f)nc]id*iqg/>bO*-W6K9ib!c+]18uSBqL)>U*Jj)*!['
%jd*8&r,0[p0&tZK%GWmQq'_>Sq./gH?6GDklO^JhGMZ*+f.Q77F->ej+M!`"'k](Me\lMreM17cg0V]Dg\W=T`9d%_G[WI>le:BL
%='kIgegEl\@ccM7b:Mma6_f`=EjB?Ri`_5#brG4MBns2nSTdB"GF>?8A$J\^P8?1(3lJg^^<5*+"97esB!u^\,<8LW97nb98)A:9
%_]aWKlMK2l*-hMlED`WAcYI5"*c]PA1m0lM_:psgkrIfFa6.%S4f3_G)8P`rY]RWjW]fER^SnJTi"0:I/B.'TB^d^CEaa2o;JLXN
%MS.Mjil>@Zo6Z^oi%u@:=7`/E/e:D6[?Z2s^Q2BR<aW+V(idTD),Zr:-WaaYpEM]k,m<3soj3?F'qWmJISjWZ`tUuFL=1r8!nZSY
%:lC#T]V)H1eChWFI`QG]Wpn*FV2F4].fssT%3mm,f:?sU$7"Eukk\Htc5"YflnAd2(k0Qbh2Gde%.igU;)d:AA>^-QoN;$4";7C0
%E#Q_YI[2)V?9=nI3tSVs47Y'7pu$%!:[4\=SCID,^3>:s'IU>3C[0STpgtI>(WX-s#FJPAp>NJJRAknJ=Ktfcd[u=HC!aYXjk6?P
%U+G0kNlmT7fGV'.!iW`PO$-?]&0Hp#PFI_B5B)g]KuU,n^OL-eoDtM1;6$+jPCW@uf8WTqMss_)J6EMB;IUm'?(m9!_&G63Yp6/R
%(HjgD[Fno/i>Xq+Zj]&fKiEck(&-_@ir]J^:ZTi1#HZXs!>1C$@`YEW,WthWY@(h>.U!4Je)s#G&R6[a]$WBZKj:fuAmQaTqB5Be
%qPhIi>?Ei2DJ(M=.2qD$d.?QMnIsr(FI43_"B32tne`u5OkG.h2pdP9mb#I?(#HFtn3idp0-*%7heHjW!qaah]BH4+&N.%e_c"Pq
%T#im'#9Pp%h,VndSKX3bkJ\S@35e8P\+k5uU*L9HPAXglr7JT.KGM/NeTSO9T-pXOJT,S6*-L;91;lFh26'b/&2[>g/*+pED1/]J
%(c>J<H6)ogq8"]mL:'-76X-rRR;EA*GhAC1Rl>!%DBaUj$_.QKR9#]d7bZFdO:(USAm>b8Ur&"i,UfG27:LHOFUT,JD&`Ws'@A$u
%C7lujTkW*aXFrY8>9bHo4h+L>_G_ufG*"=;>RoNN&^<D_<NtJJX1TKY"gP#iZ(D-kJF3;rSA)&&Z3i;d?uTjO4BrLi.+rE'jJGl=
%eCPs@TQ+H^D*ISoPW_(2Ecpfa4fHZD30=H9\I!,LBYb=AQDK=LP8^Mj<hYS\I)ZHpA)g3hod/A0_N[DQ^2@k`mVJjG?Fr.3E\"R>
%26a@Q%O)hb;:9n#ijFh*Ytm<u/U:F0"L8Dj,[tmE<OP%,^+bQ`.EnQ`h;bXM7cJ$-Q[ipimNJQsm%b:cb[1c67JtLq.3kiJ>U-Op
%BV?p5LPt[k+?VVZen*tm5N8CiL(YOc,8-QQ6R[bA`@to`#aJ4]M8FLtUP7RW!#I'7SN;pjA>2BV-*_EEiljpSmA/]hb8--3i'k$W
%*o*1IqGDhflmNqILNNp00b(uNh?Mj4[9ihU,E<![<^lP4.EYA[lj-:aXTZ`Wh4Jj?WF7AD(1gCber5#2'K5PL?nEA<:INTp.1HtM
%`2#PMT6afKm9u"<(!>62<6[_c,c`m-3`GoC/O5Ea)L;3?J/2,2qBONF]/ID6K*;%R9==G.2.d]3p;C9H'.$PbL7p'_E"J[$,EgIO
%'+`\>pKHQ_5.X<G:MR?_Gf0MKj&SR=D\82<EgeZ_\s-AYK%,/$>$No>i7D6NCTI(i9SbogX0,hP]NCWfjgAG%?X(j9hQDX_[%8eb
%*/OeR[],&X<bXH0JPT@36qQ$pL[.jhpnX+f'ZbBf-%;Ts;JPp-bT<0qq?;POPl'b_JFK:Zl=;HE=_M`nb-4)h-*_e.g7ifL<FnVT
%AJd@$iPiqMZUJGbh`04VRPa)c+JN_4Ar[l3,@^gk>fQ$1)X3U6WH41;G*YX!.AT!<f9,ZH3pFskA+mh1lY(QMR7ogsP?tCg2+.k.
%.bjLX?6he5>?K(S=ss#Z$r*loNl5R-jM>=bnKdRCldg>:(;Re4##SL#19AWR/D</3AtMDDB3fuQ&Gb1JRj;_-,%X:CKKME`8qf1!
%j'?Ya=-pf\@k$UBs&pucIQ`th1a<"J1E9\ZGbl)<hGEp>o(;S+I+O]`joAOB-fedEMqQ'*'ce0S^=9&.0HmL]:*SbRJGSt<PJ$N6
%ld5$-D>4h4'KNHZ(q:Y,q'.MSrB=H2,b^EK*J^CWUj(6**/hm8bNa[8T1.UDf<a12/as*i$<[p;Nb?Db`HAou?l;R<V1bDO4du?F
%&m*B8VPu!C[GKI\#/J<@c$lTeNMs`b$X63HO`Zp[Z)8XjXl0)qNN6ETT.\fRfQA!eLQPJ0qK+7g44:aC&;jKrH)Uf!`YB!bPj%`u
%9cF\`'%Ukne_We.Q4`p#M0hSdd0;DJ'O>*DGo`e'$KLOb]ZL@4])Ai:!-qgd1Itqk-rQKI7B3b&g_2:h$%X%OAO@e""WODOhK9(7
%fmBe(k!2H3&n*$mClfLkAM#e:ZGt`CSob2f75Ujmku[)(/Q?T<2qrBu&#Wcme`!r^#tJCSSn&IW?G(L]G)-Y>mTjF8LjK,eC7<VM
%kk7ASZts+VAEgQeI,o8j,9g$#[^CoHf_i`V0_cAKs#2iT_(?iTji5+U,)Y6Z$`N`>2k7]fs$DuW,"SfK^R_?/^dmijJB$\.^&j6r
%U&I.@'X^:48G7_>WI%WY7VdZ\pDXC0q<=_+fclh<_Aia[:tK/\!Z..fi;\.D9lArCOt1VlOOh/*UA!9!iW(l`!X!X#I(?M3\LcD8
%c_sN<%J_V"Ckm,d`?"?t0Q%k1G<5tP^"l7R9[qM&OE0;s*ENs<FFJJlQi)n/$Z3n'CMFo)K"8O*cII]Wn@"mp]ORPJ0V#!ZjpnPa
%G]Z,k@PZ)NO_EB*/pJTrPF(@2/L9ai:Rkit5f)6/+8V5?S/C4h:_$G*4a@(?k<gq%Dr(S[s3188>@uO_*m?kr7Ping@4TNcW8T4.
%LIcOuGtZq\,)^T<=;$j,Auq\ah,R_&IT9:@i7[dDVK<TLPO#G[[/aMa2bkgeDG",=e9RZj=R2CeOFD@<@Aj%1Mkf4hQF!"r^3ZsB
%pZ.SmH4eVpSuUZi?plu%77!PH+l/6&$Va!l_NFuZN.nc]@BMoqG(4`iUjTTS@2\q!5t0e5n&2qt^W*?&59gl34'A>bI_iMM.-%_m
%(1>/Kb_KLF(o1+%YAbu;Q-B\JlDp@:7<^h7J7dZ<?IZbc*<8tf2IdNi4Yo$p.7F-bMg:Zf2&m?S3F%f+'31CPMnXI)I/VaLFQo30
%TJVXgn4[G4WiC^tJJiasDN]ObI%Rp_a%rg_Fb*J*LI2U`1R]`W2g^]BV]DVXC*>B4%Rr\k\65GG_R@t]c4u#;(67rY^m=Z6!iTAS
%/Kjf=_@is3DW(jQW*hqFO&H!^:-pCMF)OY:f81UQb@04T023iIbGU%XHKdcqSkGNo*mQ5t58n%+PqMlb-SWNFY<m#5e%A[%1.Rgr
%GM)MRV-iQ"9cY"0Qk<;Q<Z?UN=[$CfGt5KXATKU@jbpWoW[.Sf3:n@LFCB?m#bPN(2rbHQ#.UE^Jg\rXM"4]PUP2D<p44FJD@cKY
%BGf;g)'SnpF$U*CZSShqj)4G5L'\pR"K_I'8KBj6YhW8^b#MAR^<CA6GQOiAg9Liih7U>43[j@O%TF$D=FuKJ7MtK#VSNcrrSHmL
%&RK6s$NsiX&ik1E=R_*=<\qJ&@@"h[Vr\Fb:1%hOjTq9Z=a=ZkAngqGXGSU^aru\uOVq:0@i>$$<pAk>Mh8n6@'Zf%idoY\b54?4
%IUkj[aNe%l2[h.WUVj,r(MIn\]q?7Z8T1^\38\K`7TCQ71S2GT2\:qO%r1cj0V6RKG->&KHjClN@fdqVPjYr[4R.TXKGHWE=mbB%
%_t[hVE9IG`8N..l(U8T4D^S3cJ$-U2)EZO#d`tas`o][CZl,dAi(bO]c+%lS5!`V4QC">lpdMP4(eBiB.o'_`k1j5i\-/IWmS5,+
%"YS),+jM%/MV>'lI$8n#3$$hR]duLVh#mKgX9VO]3Ik.J:.\932)%9Y6l3d$"D>[ea"I\V!Gt.)%F&4q1Ab=<oj/rLCA+<8ls;cX
%aM!+(CrT(>LF/+*pC2<*<CV(>1W7j:,XB8'XeD!f'\dD$Rm.&TFe8?t@u)D_083>87Y.pn9jNo0I&qPGR3"Sg4cFqg%J%>*c4\?B
%`<<gM8>LB9'W;Ai.+.DL6E;-8jBq3'Tu)q>E&b:]E?-:r#j/[8llZnl1ldUgF]o@titFG70ToiB!HE]U#\Wc4d>Su_3(;I)Y<^nl
%;)ZVT!M\d)liIs;7mS$U$EBU@$Kh&J8e=c4NM'j98u(KM0i!s3iAr+-B+K;64Q]4QTMC<s)Q/h'QmS),)a=%$AqUfWF+M"dGs,Xk
%.n4d3@l%W!e@KY(?^]a<:54ZKMlWM=843=YRfIa7M1agA55K=m]GBLQ]+\P;Y@Fe=eS32Nh/'EM"7oq8b*`+BQO*u@0Y5;q.i8_k
%D@r,Vb]lP6qiGa0pP5#M`ea6-8a\$??HBQa7[3Z"`9M?T[Nq,-=9X+DC*1AF_h_9i)+Tlf_iVDk[nGfoM*EeZLoXA3d#=bKX]O24
%fgu7!Eh7L/3UlEr@Weu-:%C=@CQ,JaQHjt3apCc8BO["ueHPSKf9OIb=sRSa1/NIFMW5))U_B.[A;_("U:5:8]-3Bs;rj(p>oHZ<
%m(*]hHXT>NIPlCH],HN0CgTD^YDdRis'0B<:'pXjNBapV!KhM"4FGIM7MFC_MTZIZ[f!TiCXL8X']ZV,Sol/foW)BLX2GA"<W:p'
%fp'Kc!*=!s90#:E`giPjm!0oO8ANh_@-cbuMi=N_c+;7(dV@XuUYX6QINX<DCnjK_gpYAHq>!lbpAHF[ef=44,4CE\j%tmOR#*e%
%aN^#3Jt7VZphKT79gE?,qNQX\_^O-g0,,TSloH,QAe^&0r5=9V9tuLV_V`er7A;1-6d@jEOde/<[4#;%iiCu$jD6QAd`lWge9c(d
%8'rQDN>="IbAQ2VhXdaV+[cUFQ@&10hr=Y-$mWNU]qf1O>ZC+"_WeFq,8pR^\L@\K*!!D9aLrpW)5Y3]-0aJ,L;?=;+7<G.8d.Bu
%%.t3h<i$Xm)+imlY;EIh:T!h&..-lK+9=%a#"gApe-gj>/Pu%U+b`qO\`J^h<V<SNaX)5)SIP3*ZpU_KAK:2r.CnYDWQJM^_$k(O
%1brPrqI0mrjP/I(,R\Y-C6Q>B/GU>E9^fVXk"Z:JI)"7LFf<HZP]Y&PQ;*a7P#j6.>[bjZoq2N]-ai7cVn-0pO*$cj0esu:qE?sM
%(f0-P>p&kP;NR`[YuJu-&:&#DLO%AMeG\$3s'V(c7G-=J3AHgEY*,Et-KX>mpduFj3F"ji5.[^'^9Bq&<:":<;X!T(b_,.."P&m;
%\&jE7:s@,.SV(:MP!6S4+3hMCHh0;EmAB\S4*U"aq,\i=fRp4cN)!lo6d/#.?[EV279A\>pboT%[[K!XN3d-YC<8'-'\7[m>p^Jg
%&W)?FCV9e$jE5<3n(FmYP,uK;!IO/@1P8Up="Ihb%2ZE7(I9Z@s!@>Pj(/tT,gU"&FSHFD@]p=M-QZ=udKok6)1:=N[HoH2p?;".
%2Z\F-=h:Z@!7>D/qVf9Mmd*%&,[G4;jS.$q6U;gg42X#rWFbOopQXfF@j.ok.C^[Dc=l0f1[8VM=s+K"rJQiM-^%hc36%%Ej(="i
%c,K5T+p^UtVPP5^7s;;8_FuWETj!\A.Q9YRoUakZ,(/`SL_*@"#u7ZSnIIIT/Sr%P^U%3i3PsYAV!rmQ8kZZ]P7i#5i1Xe(E8's!
%88#i(`=Y7T_IPd`Qoh_/'7Pfrg.26kX`o-ciH"%jr?T!8Bpd.7h4K.Yh*kMYa>;R=D"P[KIYOSsVfW^q*KRX@>$Ar]^kZOG9c?FF
%DTi9/Xp/pL\'.H/:deum+S24OL5sj/8X2qW=:[VIU:lT7-ag!ZS;bVUm35,0/BfKI.e"b:."tM^H27/MU\F4G\4S]?S^+j1lU/P0
%,M:C,:E6o/C\`Rg4N-%N&m@s\VX'o$rf_<r5OjV"JVY(1efV3\[gN>*)^06fhl_eX`s6KgQT(_Fm^n%U@rW+VYm5c'kK7`ChV)tc
%5WHS>JNd`PfYh51TXcp2s(i$N"Ggf2dVZ@3KhgH185dXb_IEXQX+/iF*@i^Ym`u5q%!\-`$j@pR&6h"LAd^E/T<95q%L;TRMjJ\?
%9,GldOs)kcR9J^(]+tP_b>#Q[?,L6O";D.q#Gq44]9<10W5J"M]IFr9N;G\Z^\>GpF6.Q;s.FY>P^uk\7f(r::"r6hgHO.-D$f,W
%@8$?\1/F+TYn_:Q\tR4QjFnhkpQ:'\TB-KV0)E&$LaDS1eno#\m)UrK5jpZ6EpWOdSV!#&K*F/\Mjqh2VXGFh0.jqgRd\:J`/OZI
%pOHlOPVcq$>VjN]8K6bNV_7j(](!]DnuC+=Z^`:j[)`>\J>]ig)W$r%TVtXdJ[T]&B0.W3^:sb/*1+1T2&6&FH9H#W=&m*ZBI8EF
%P$honE2_V^m.RY9&AF84,Q"Qof/]e#[Vk:ZCeU)^IEQLeWQk)amei`KRrD/g<7PCP*JmmI8oM*j'e(S#YO[sue<8'oBN2Q0Y?\4U
%q_GcaQt1"PCM9gX&>M"UI)/=lMUjY$!4bM";PpR7n*o$omKK`tW(\E8b_m9ZE)PK*.Vd]>g8,#O4rh:+kHi[A6hqYWFjTBb(sD;&
%"D0-r[P.aWjX*:b5C^YuX+"kF9f5g6+1,ZWJOI"0U_@3tPN%$a>d8a@+NRYuN@I-iRK=]r_8[)s4b<fM5pWM5-L']XFIW13Vi$0n
%<Jrgk=r;:IgJ&&`%&&C,-chfb\jfEUl"3<p]O&mkGHL@CMWpNgPK;TX2?/)Lh`bn*ZRFp5il^mZ47<>1P2>Z7doW^b'Fl@+clh?G
%4nQf<[8:>!Lp!5?(riS3&)=P-_ST$m`5jE,2Cn$^B*KjObuueW<`r@9iCJ$ore3bA+sV0fJgBPDf6*]2A]#]T"g%jtiC6ASf=2@j
%_%q:7X(#YE0'EL+hLkVp^&I^'0?3B(/ZtBZY=DdB/SWuNfkZ!@;CSRSA>SKYVC;BZV*mVXF#+TO?F\"8&u([Y8GRrJRWWmnrpX@9
%!p%Pr+YSgJhi+UKPJLcBqd'BP"2tnm\uD=V5L#])]lXt:@QH+/H1VS?E_\q]r\nbc]bHUCI]edMg2:EI\a_$pSpZ^Kgfr?tK).0*
%/38/,'/_?`f7*K]KiNE#W\Sf7<X2a5.-d@gAQA^YP)$;7M5peJ:o(IGOfE0h.@P;gc@Q-uPY_!`&dXrI@d\p=j_)?FO/rDQWpR)$
%.((O)>]ok;eqM)l''2Are*UJXBX<=4as2+g4eUSKC;C`?mcGEKH*DR<R3hE%o68oXY4j/5&Y)6J&?)aO*-udL89SKJ_.;_Q`AM-.
%">Gdni/cqI*`A!b?Pm60cbqV'a//eu&&X'4B,J&R+d%g]\dme/2XO;BA?r8]/+6Q8eDr0gr'X^WU;jMGYrM^-j>O-(B;U_d`;_N\
%Aj_Ctm,.DCL0miojCJI6J@A@chS,LIncLOjlR+TN&)#LCdoh;Pl*/+:'i?Tb/K*e#3OgiJq*[h1hJoMQamNTuW`]Zg5'h3),#qd?
%E'l4-7+\Sn'\6RLbWJaHr&\$(Qp&3[K@V6"b5-9".0ZF05S-3u_/a*GbUhd1N]cZe:QXE2%]VF%^YhRj4Gncplcp[mBH^T4Qg9$d
%H8uKlm;=HV2^B@4nq]Xqg)na/!cd?I1\CF4OI[S/R.F[.:6c=CiDn"tmMVhFDWP0$-F*#SP'BLE\l^<"jt3Y>BHarA'hkarDkioO
%^:4NbftSEl1B$tIdYDc$1Of22!^&n_`DaE+K>642=,Jp\B8.3"Q1/jNI^sIghT;go)`N^W26G8Y@LX%m;C_q09174P=@e.o&5P\%
%RJt3M('/CNMN<X'=&IPJgcMD)g_/-![<-,dgkHAGG,AHeJ0O`%4d(aT=$FeFMJ&&uMrWW.3&G2D6=J$eNGe)O*AI4&*:gIufU&Qr
%QV'q@b`-^B;2tT%03paj+A]!=R-0rbF#0S:2+i^6$pkO*g7.0f]QVf>U_<KfZ@MbQ:F0"&BQA@h#U@[Xk@3d`Un)5H,K9OHZ;c[&
%2f?@Hb%#E?e6f&TA&cFEb=&JDCONNj([7fFNJBQ&gTICJDMl/a<Sh2P]K*Ne&m@93au+1j3YAg'Mfk.DR<\kcY0.%5"D6T1.C6RL
%=DXRfbkAkJai-Q>q"fghZ0;*a6ImI90hITfFiNa&f2,6crLr=1#WI(Z!(pld[toIBBSH1Od].(a%]sf3;_th>i89KIi.iqLE6q]C
%g-FK-L&9b.BH[!^cI%)P2LM-B(^Qg9>]MJVYQCI.d"H08D9G*OAt[1np_FaG'W#l9,Zl<IeV3>#AFhq:Rh`I->D)8bhJ6E+3I?h/
%KIDZhc.FH>Gk7A*aclGV=Am<jW)<]ligk4#6L8c!Z.!m@eMXMb%HG&iK++*Za2o#kJsrD+S))A7EcF6<?eC0XOlPmCfJ=#haon)m
%P?Kq3&D"XZ'u!A,]J"m[B#K[Cg_K[$.PklejRo7oAB\nJVqt[V'<Y8SeuTaR)/f'`cl[;!&>Lpe3.3Fc>-s^@E0>X%_T[<dl6oE<
%=X1SEBE0;Ec:pu0j@!Q?5I%SR4Tp^00,,(c=#guXRWj:#%07BFZ4[(WYt86n``$j(:Wgsul>e]`^A]`HL2r,!?qgf`VO4`VSO+'3
%i>7&rOdn>P>a'_Rc-(ps/iQDe\>6Eg\aGRSRh>)9[ndTHDKSUaplInT9p.u>i@HPMLQRf@;2>M<iPUmV2@`j)43"C/i@PUpTY55M
%7_4mI32U0$=VM__D!a#aatEBs;8)&U_n*W_Bu40gDR1jF+rY:h.iq)taO329AIFpcr:6><hP3.7oXKTd_FW\*FPE6NhY'_bjXW+*
%>ECqS$^r3a)5!ErF=Tn([Nr.i^;dL^2eGO].cFp.\I+L:nf)4VZJ@?'8Y!shS`imSVQpt.fH+aW=7N9V<9c)5Dtq<f#\tlPL+qmj
%a`qh.rI3;A>B#eCI>qnGDS_Vo,sKs[/P/R4'V:A;m$Xt&EJLgb/LL7\q_[G<_-=&mQ-nM=p,qK$>^dOkh]rQ"dPnmc1u"js9Rgu)
%<mk8^3+G@@QZAp+SLK]*Q!Hh(a`tK5YDk+HDJ6d2P.-Q_&tOWnYXR4(mLpLE_&9W_-BtUCP=d%C6=G8.KPltcA1pA1HBMlX!UY3o
%-Sm!ZLbWC*]Fk'Uq#f>]c(7?/b(!DC0VS[NiHO#)pHY:,2$1ee/+I1?9mR?,s1u2!asKiIIIF#3giTsWq[-Y92_5o*U(DN@_/AIO
%L)m)aB#LOF8q"L6LH&=![+-p_kBW'?9+&mC9K2[)(:!l5Uf`M>[To$^E]bGl<)2Djg/W7Wp-lVMeN?((+:_55#ItpYY85F$PU!#@
%N:X:]SW,Ut0s!9AeC.?>ejr,=R+AY\<Y6grYZ]91)AdA#cklEpVJ,[rWfmZ,n7puu_/HGh@Hc-FV)tr#F>dV]`eh7tcB@hAj%>I0
%4qu23fP4Z1\46hbRn6dn*aX/[K;Ki%5:?)<R=r;!,OI()#:@QDm8Lfgjcs_-KoBe$9WAU4=Sln1p$:(J6J7sNl`r0MD3ZY4bOj0d
%JoJcl^9L[O%CLMIbluL1AKEJc.\5mj0cEcn7Ui=B7csUkA?D.8Q7p@"g9)>9ctXKrlW-^?'0UI^!gp;M$JE[_V23m@SUR3;aJZ((
%G(jGs+a`dc_dROp'&KH^@V43sn;#,'hc`q\7BI%4gEdZRV*4aiCB6Wp2h1#jg170MTYb/=g%2qWDer/N269lDF+k3JMC+<G=MgG&
%S\E4Nl=&XGeaE+/h@(Y.]aOBlX:[n<NT"06U[q`BU7(snLg,"4Jbu/iOVs@$e6W[$iY';fqp.JT"B8HR\K.#[s8&CZo=g,#\1`+f
%4n*)rS/:Pfdc'RL(oQ0rk/Fe_-%#Le2QTCc2pH4Fa-#*oD6mgZ*?$<7$R9FK](5B"LHr$8%D678&$Hb*llX:,m2@0L^5a>8dh!*:
%4Q;TRQQ74+&Ks'cH$'6Pq#)#rlg"u82G!uC+o<JN.c!gO90D:75/?KPn8"ju9,8KB_j.eXW,-T]6q[&Nb-?E[!XH_\P6Q^gI.REL
%9\kKN&k/eR6_p2M1X2lhHGkAc\AO@:lXS-^+kmZ<)B^O]N^ET('snij9O8C:V0FnAOF?1*rp(/rpQnBuW>YFtq<J:5XdR=%T1Jdm
%p[.qE2W1*9q,4\#@Y:-<Y%($-ab$1U,rlp0/6qX25Pe?a73:Po.G_;te1Sk6=!YH8IaPXkFpUL?m1G&*X;YCKgZXTdRrBnin$W:&
%?1tukPJ=?@I^:4&n3K-Rp(bk[at6Z"RpSk`hqP\kJs;i_f'2)iM-nrNZu_9A\31cHZc3;?h$s!7)A(c+?)':%?^f)Dkh8.F%&P?_
%USL'@)9U.OD==Q.o"9A/<XhjpHc'$&(AJrH#5'I%%u,I'Im0V3?QjQb3.09`h.5me0h3T3n+ZPIFdL5jAnXY^d*BK/J4%4F4BQ?N
%R<g<f=e>ucJ(4TGdTU\eJ+#abN&b;J-!DUO7YX@)/Z%$U7^u%*er6(71O%jn:-Y!['bL1EX,Fr!?rd,u$icCH9pIYB]`Wn'CFN]b
%/NK!1r^SuNY3a)37+j!"r$U<9A0(7IaP`4gNO6J1<>P'!4Q1bEiER(Z@2+6J/^\rJ_r;7jAU4(p60eqhf;EqZ0un"mENjV!g^aGO
%HLI_GXdZN4Dn5.L5q-4H$2itN%IAeZC'&CkNM[JIYck$/g.5!#*L8VEQN=ft+&djbSrXQMj%8*0i3,jF85+[F8Zb@!ZI=chnjMQs
%OI4!J&qqC+V0:psI$/8ifiLRCl]?4C/&G.T!g(^rmuUK6>MC7,PC[M*4aa*SW<=PQQB(=@2&0`ifhEMf,sMkATbjp#O0>I(8L2uH
%>,p@8nAX!,dB]LnrJDojreks*TV5UYPLn64fb%Mk,:a[qqKC6AZY6E3?LmFM,%e3R0eV!B>(nr??f-5"a7XRY@FWBejn_$"K6'.>
%L&;Q4gSU4g=I2m'#bsPq">Y\sk26(BqkVpBV$jgjlKqMS>Y(Pr6ud.IR2X:&EMT.\qI(oFn=N\^pT=/cOP@N*P+;055P3nJ?L)%)
%J?;EqgtZi7+t^1Qeg>F:s*\ZO1WRKH5cb\>bm3V=R#5&'oGB[9:gVAI!J%V?kBP1QFBj/.o3,Anh+RA6W+^!:JF)[HlF!BLo*mje
%/Lshs^V.Ou1ONn@F,q"l;bC'`IS/EF.t3_QR%YS'hE``q;'j@(XYa%7>CM(6IptgIld3DOGiPftVDa/H.tOH4NB[aDZ-Z)hokrPY
%X<4O0mp11Mp(Y5#mO6df(k@=p-$;Ch:GZrX0s_*-pG5DX?pn/r\qOR9<=uK8mC1T?gL;2&rtM22lVh]b>F.R>Hr\VNH9t$m:aoeo
%$O!&^,c.KtA3/N-I^jYiSaf7T@Ao"@qsWX^-<"32LHb_8-]KPCOV#j3G"J_'8@7kjbP@pKJ*]]TFhN8p^9ON/;7la$o']e-;FE?/
%bbQ<?'OsTCNeJS7Y<V_GSNBEA2^8S,6$nNcE(/@V?-b1Pqd.@Qn*T?9>;_GJI]a@4/!Vr%H)WeuqKCnndL7]>WX*iCnbj9k^L(ma
%%f?N;=VZH">I^),2sH[FB7#ab9nY=V9"J=NS6GDq]@9T7#In/]&BB#1:7D*:FCrVUZ2tU6p59FP?*)>DoSkX6+$XF7&L/RdS?B8`
%D;Io?@$D:1*W=ua-$/7n@eNO;C5T,RX[&Ojr'E%$$"Knc'%]0<db^e2PF7SIKQ.aR_)[>Q-.#T1g7G.Roa2Sc0OB^uj!#$WA%h'H
%hq/+J74YZ3i$F3%\I,hSkRJX@ARtV$gJ\h*]Mm.@gqeqcH*@>mX6=YZ8\[>?"TqY#(h3S77g>/!:3eKBo?Zdsa>UU7hXG>r.+N.!
%!_+E/j_A2GF%1i+NE)S1j?!c!O-_aX+pI6qN(]*nlr7ik@S%C].cj=8P.Gp%ggj@UejlW7S.KsT1BQB>4)[GLSM3of-tB:]d-gZ`
%coBe='"Cimi4@"C_VOW=/gAH7a%3jYc0=M)V$C_#@`L84(C]-CSkIB$R/%XA_:%fFLReMMfu]=ug5(Z:'D#mCd"1Mqa-(poM!Vb?
%Rl\g0V44aU8:1IdkJkWek/Bkk*iU!,C`>i8O-!qkNL[,B=%!F[WC:'+7+hC*VW`'$9oM1Fmn'0)]VpJqQrUaD/=f20fY`Z!%B>FL
%)c,Sdbc6";jH7s-M!2#[)5`t!:+0%E.l5Hqomukc8[U[!Teb!_R7.st)gkP`."d`k(0<\/q>g`9?4E,PV-c8)?$ZZdSs!`B_@pR.
%#-Bspcsc"$[\Ci>/V'gn_M](-&4O;\"U:M9\g/I!,(\*>\^_^#MS!.[o:_U*,MJQTeF?AC.&eaK=Y)?ibsZYVPpgOR<)NBPU?4P4
%oM]9;"jE(U88[E+7hNA6-KXuH=BSlPCQDJE7*<8rLa.iY5Iu)<iPO^0iu#'\r]O=KIZ`eu;H%&]3"j7#`*@0m\79dE>ssX[M)?bA
%E>dC=2BO".TITs/1FSO\rOi'T?7I*``7Y!pP6r%=.::*E&_u^+N8'SciP^:$M0%[[rT_K'-a#3S0LV`#j)8`b;d2Kj5HM,:9CnH+
%,i@>#n`Z--a#WfY4--\`dN.N=.<7jmVr@_:'g9(%*Q'-1:=71/CD/f2h5Z+\G:+/h2TSG(!Yo[W4f't5>F3fA9];K/"UZ>,_lK,m
%Wu8Mh&KmD=bRO@/b8a*>7Q$h4)nnUNiRIV)]j72K^1Q']bttB`&7ff+4P4a=<(H79s8+J'a`1IJ.;]WEqN)'n+p:_`_p9T+%2@5[
%PuS,tRtC1AZS>Q^]]dj;]?PBWRgjc0^t[BuL(pl<B&?@:eb6[ZRsji?;j/$tHTQQPqS^>-!f)0EXum=Gl]'k"MN"9o<]Rc00-Y='
%`SB<AiEk*1((ORDdYE2"O4/6U9eH7]:kg'PNSJiZ>o8)-GSh.e<Q0UDQ`cA*YVlt@9oQh4I;N+\`gGE`7X">Z:Q\SB7H.?(69hM%
%M6G/HJON*&Q2)`:W2U%rl(1AU`?ba'F2)ruNGO*l;tVFd)THjn.OjuPcgQYd<trk?)l-_VY^r3:_IX/;r>qc.Kf97Ws+4:XOceHE
%"Mm%oHC47S1V!D#G\)c5(6+H28sAN`bNX(^Ab?\KRP,ni?[`V7mH>chKY6)C$ZS83P:R2=!kJb&Jgm!=S%"jsTqgP/1fP+K?HOEQ
%L%7]@/hlu3K.$P=fp?0F46ZNkr7WK?(p:W%V*c>_m#f"[34#mldd3n?WKR<ZVsT.$iF9O^kI$$S6Sj%FQ`hs>k:J/$ridYd0Zqn9
%h6dGNA02N!/4gXlp-nXWhFu-1Pni.H+WBH8bP.(g%^E0aPL8\?e*<Z?2l/\,d10tQG@uBP8WpqtP@mO\@^=S,WU?fD<<_:YTng2W
%:?!:29%\Eac?JLg@k2VTIA)1+,o8cpkgtOdo!\k$B2PYU>BhP-94:'J-DmeAjp\nV6[0_BAaGONYpl[e\VnW7=p9NUiT9XD)ei,c
%O]g)K#ORIJi@^t/"WSp,mc2?2m[s:&P^\3WoCM]pUkbt6Uo7lmp2u*45Stp_oB?VTA)G\#I\AE"qW*9P'Y%Li2V5P$_i;m^K@Bs7
%ba[MaQL>olda,Rs-aV!gpZ1<1YF>k\05?\5)ngDDJPIqNIfIBrlYCkcF`dm'6$9'O9>=4M?97Hi4&>F[>l=/0Ieq:g`9SF:nQ^=*
%5/fn1='N.4C%fE<0Sc+??@hELJ^])J\bZ0^8m+H4Co'@/[(3uoi$a0hr)gKig82=nS`E*02miX"#K^?McUB1ejUq's&*[p'aGdk4
%'c<Q-BIC+`8G0eYKL:Bk*AK<Q*!.Dt-OFhKN&&F*qZ#!.>tu7pM_%7C`<cK"ibJ2/(7`Sb/YEkp,=Q0%B[jGlf40"0m$GX*=iIhd
%C\Hhqi*<aLN4E8O:#>KdLajH[5QCR)2:7`NSnqmMH8k4P\mJ,#Ye'=eCFt!(4jc4<UNlD:<4g1<P-k$Rg(Yt#F303r,s'P$n_I^G
%]SrD_bMOX6c4a&DpF#Ap+*t]eraL@JK,<6NFn"A=1i+,NMg)ZZpMSec"%WPs"8V2rF<Q"?fS3H-2f=!)BFA@i,MT$"7,lEE7bJT]
%H"e-@>G<Q[=1s0s8P<$q!W)J,L_=a1.c]^+h;)--dTUq@q:..(ke+1Q20?u/g.WUfF0hK.8SS6s!7ieM->qmuL/U<^@"3P?fI'gB
%6"1[#dP$Ro<r:=#\'$ESl"h;cd>.)23<6/rqGJ'K%V+17ZG=+>fiUuULnO/<B.@DWQa#q,;"kAC06p4*jaPRJ^2*:@\c#q?"j3<?
%oOANu9lZS>%HhZtMaG'jMR4WXm?6gNq^-]N8ffoD!VF@Lq;pRhc>?tp]7O;F](!br\^,,fG:0P5&I#uk`+<FLE6e>U9A2<9R(]bY
%RIQP_,eA#6QA<mA9c@o`7\_gh2+%io'ik5q*j=2k]79d_rgSE75OAF1^]3VLr-/2:TE!gKl[S`Ns70Ordsq?IXT.]QrLa,a?U*<F
%gV<XO?iTZV5Q/X[h#,pMr`f?irq5m;^U5P_J,$5IqHs3-rBpDJnc/O)s(DB#Ish4Ds7<PpfAHFCs3kodg].9Np)dXknIPZ#^OnW#
%S_tlBUU[6P+eC#J(E2/p4ob!V;uGT]m>(`)fDjL>gL!$rnJ*\2SB\r3qmG1nrmg;;"ba&X,CaPpU9^Ptm[Y2rO(LCNKBufigPCL=
%h<f\8dsgmAaRNng91oSM*c\HW3ZtXnY>"lJ&fY&O1K@UqGO3660>E`o*Yp5Rs$]"PSRYY/,lR<Nrh-ra6YJ7%ES[jlKn77rkKMT4
%K,3#R/P>cc0/-+FjQ`<0B2(52Z?F28?"mnr?FPeRf&pj'NI:28%bM?Sip1E-<4gNe.F;2s%NoV4N_UA5"6'-'Os5)J7bF,Wn0=nd
%ac+Y2!-$8CMu9Rfr%dlFgrW)Ye&R097n)D2GIV#KF45HIf!l/L@-[>62\l/e\o44c3B\nq9c=U.3^.4qiZ)t<m%*k,8Y<0.V^\]H
%@qhVo>j57u./Y#'3.pCs^:7ff85$a<qUW%oVo9XV/MiT$;m18s^Yl8$@)hnCH/$$*Qi+CEDgu^$m2E"=<=c?fs8/!%?$g@Fa&b',
%_^ZdOS%\&qg&8nX@h1dLkLiR^4[hpu2,mqoG5&T-#:!ia:;8E84D/s_L2:Je83qNd5C&Wt8CgV,;Ob]ZZ/dh!QaAt$>5Go;DqEi&
%cNM>::K$RS/CfNgh`L55P<$U'0(6?;OlD%)C#.'C'"@paqY^Z*0DbgIq9;YLQ)ek;?]10aPs_@LUfKG7jO>&9V8cP5=h4;IQ*-!:
%P1k%*!PB?q$R3aiHf+7/J,)raRrptZr-/,'CY(5kr.\&W%s+<7bLakt2lMorN_4*"<cTqZA>s@0-^I2Y+(ljDs$]"P[eO)aVY7Rq
%'?15Gp4AuTBpd>6"?KSqlsH3lJ)TKkE)8-Fog([#n4'P>2N!`"NOgUL(p&Ec=WR6>ie+ueIeg]/l#-Y5]\GL:&($UG-sLp'J$u4$
%=hpT1d6cNs7;D++n"=SUMZ+>;dKf0OMZG/V2.fOB#H1l*=nc5)bV989Z8*MNUJmMoF<P:YQ$"@[WZ\Z\n(LFF-Q<h)IQLgMo<cRP
%;J4SH*eJ@Eje=oT\D7@5qh*F2R]^I;Jp%!<hsPC._7eG@`K.e,UT^Ga9`b7I:&_>Yb:PIPDH'X-S-u\Fr[aI9aH0r7<ft40X'`G]
%pGu(T%p,^],YsT)V8)tmVqLq>ORQ],%ZrCkRRQs5bOo?embNQ5TAqCokZc,*,7t;GZ0d4+arA4OG@RH3Z&krhW-^b]?<F+<&"c3-
%WO]<^s6d`Gf@[LJ4M#IZ\\GR*Q7B/9QlU6sA9#@UGk3jc*+Mc.'6D1^JoAF!`V96sSk`aq\ZZP>rD2p15GUP.H&_UMcMP"de3h!s
%"";k]G[#;c'^Q>C=ldWtNIXDpWMUW(M(V7B2oXr'f?_iN<;)Go>qM:,+gs6Iqs\8"]3kTu41njg5)!7#.UojAoEW*l/\d.eFk$+r
%m?t6L0V;LB17\.SgWQufF.@+"Yj6f)6M@S<H<XO!2OoVnNUPdD)=>mQ'>r]YCJ64_Ug,YOU0QLPn001W3m]?qp6"tF"+KRj4_Mn[
%H+PlEBMd%6D3?4+it4QfZ:?V6"W`],;*C1n]3#!lRu;_7MPu"_CJ[[e5IWX;*m+P9KC/OtjB&UDZ?lCd+0pM18>.OiVD9ZiqeKl/
%L+TqAc$hE="Vh1#Xs"l-b65S(iL\G,Vm]aA#!`'-1AR>XaV>'2YSh(oLpe<#=h)*blUKpP>4FC_r6g:K8akf9TF#i_c1,P]mu`.l
%:M.U^qrcDeP-Ee770"L%5?kCfdie^PM[tmj`_H?VhTmGWRH_f.U"N"ICt\U'og[URKBXp>@hs@k0;/!XWk:nE[,H&"4M+YmRnNaB
%&r!u(T8[>i4eu!I\B--'R,-PXS)uCim=X0O.;Y6&-8UJQo_5.NS&+EE7`!N;A=LIlC_N`/`>iJ#*u;j>`&8$2:)hkjL.BupW8]2Y
%gFp:Y]Bi(YXB]=[=tl"og5I,fn@`*lROjIMe])PXDo#X_MY?fgIG=lCgAn>t-="&*p72GJ=Zk\N:QrL_'nRB[f]mEcr0(Fa;=nX*
%d7/M5Q1o(kX,Tj@jH$8a&fX]d*_%nq%jGn#o+IC*O[dmErcD&\ZM8hbT3(->E9NNN-2eQMc4-h3h3aiuD]S/3SDo@BN@JNnHU!Vr
%%Yo8u;a!YFQGJ?iT`!+V)mZYQ#JX9_k2$a$T7;"m4A6?;T[@ThN<NUYNQmTslo?j@-jh_9iK@"1$$o6'EfZaK9`JR$N8*]_!N;E7
%/#11Nf?9GmFFSS=:R(&5S3t'2K6,>7(Y166O`\->Gnmneoia1f(J_;`SsF/\p"jg></pA-Knan0J's,(*K9sa.pjJfMOJ.l*63I%
%*q[j/pcLcjiue"0,IQQYa;=D6=Y8dIIi+b=k\MCcf%#*FK!%(T!%_`_85u"aTmkLN,[g=@kl(bJ2L?:QJJiYV*V!1[lUr&^hO,+6
%B'Ncl*=%_L<]jK.aL;6>bHHk-Bg,>dNkq_k%5;'HoBuJ@pD[\J*#mARm['$pS.,%7\F@<rUf<klgK<M'bSPP[X?'.^s7CBg>8Q<D
%%#9kiVpPqdR:!Q:YKafeOO[j=MIV)Qgs;SH5g7M\=r0Ki/3u0jOg_q2?cETQZpQEQ#5U^\!E-M.oU.^YQ(=_rh=mLg\hIt*c5j+f
%_hI=eVV"$ED-[t8g@odI0+VtnNI#3Vam@r?0[u3:)pK&\4QS_Bnc"GiZDcC%[^!8:'W%Lp39_ecA1cYPIuQPV'ML8,&f4TG!s."l
%/SjRq;P<hR[H<82Lif3gahQ;"hr@+H*_%-M8,:$j/aGo4\7UO(?cgBS;Uq)u.AY&JV8rM*:#"_e=:FZp`Wfb0!'fCBN85HP,/.s7
%7tPB+"S^fbVI"0G4i"V0]nd9>)=H]V;F,I0=[mY1XB.@?HTLso$"N+Q&3TNk)bV`P^Z9HW>$EV<1G5ijZPk;<Sj#`?bG`"p[!m7T
%qt6?64TW1ClS4f;TJ`\r(iq@#S'>\ZBC=Rrcn;6EqQXVJ6*+15ETS5ee%BjI:I(uW?&\r@82j%-c_N7.8!3V.mHQiI'uf=5k_][Z
%[>.a6cs2sXkd2%+Ouh@@e)cchb,!Nk?5'6V9X12]6biBSmFh`,TDD/FSUFei;+tCfhSY+>"jQfr3*K4Gc<:uT5%ScYfVJ(7[Z$jU
%OJCF1D!?2!Gl/OVXH3L:<%JK[i5:/ZR,'nIm=7jjJ]Yg[[>E+NKg@hrq.JaV3>n[R%Y&B=o;i34It*@Z-l'k-=fPk$rOYV?'LXT.
%/n.F92uk1J_bX[8hUDTbZ@cOT&(8utRi;7\K2:\[UqK75Fp4Laq(TI8PlT>RS9/9M]$NDT71m1Y;",p:Ajlj8KrmF9,QrV\K;.GE
%(_@P-mRfg[bYoZh+Jo!=Tjdl!r_io;5I^N=rShU"LQCJSGksu9#Aki>Vu922KQ3^8AMsc]U.Jsh#7b!M=PL;d-Bf8:J)C*q!AUV!
%3Q\V$i_-a6&oF:r1Q8*WfO]`^#ihCXBPIR!Y@.(b_lJX^o5c#1Y0kE3JeqVO#A[Ka'2#Z%$r<PG?m'/hi!.O"C\63AH?f&?>`*'C
%qqd+?Hh3A+^nZS5n=i>I<`SbUF^.Pnk-4C-kMl2tI)'@_]Fq]]Nuf(0&'<.9?-(l>SZi!lL2aQ[gp3T0B/=c=h`*IcIPlA^MMW!1
%Q5M>(ULs/%f#qNA]n>^oqUKj?-+E"1QOk"^:qMMqi]%LX(.>TCn!1uHf-8,C:S=O%CV6:kCL>Fl"G1fmqdDlPDr9L.03q*bEiV=]
%KM'<Ug7LZX+iRNR'.A@X?E0U=N(j];+'s?)JR?fnNV>L_o68q9[QMt%5BQ:i7\_sAM;+/=4_qlqS0i@mhFu1n+6RS?B]#QJRE=sm
%m2)NRs5orM1#8I2&.6#;[bThp<J=^;Yru]hV802D#jPn4!kq1t-a5>qTc[?ELYoRNMmnICk61q.-[V#n%Of4[$dJj7@35sOkXKXI
%!Mutcctl0ZA)&k&-X.^#q2)W:47.P%onQ54?IsUMAQc'r9I;h`Zej)Xd>^<l3otggc>HZVRZXALcUFGs\eT57<CMnOB7En<iAKC*
%_g<+m=`&=Bn<'E(lZLj<Xb)]ffO6+=U_>tdKl)]7W'@f3`[DYuAr+^A&L$d6I4dIEK)rT?;BB&[$fA);9d6"Wbnou>"WC1bpRT'T
%LXCH,\;[+Di!jeRA`kMXPA?j"YP2$)8+fW=r>,:La9f]RGH5!i*2!u;.5,2c1j[SK/IsCj6X<M=Q[3tqr,^pr(gAY0[Wg9*Qkk#2
%["d=K"]pKf+4?aKOn$p7i-t>"Cu>4\obIpl6lRrpF"mH654OYXh%r!_PW:r7<8#CfP1&FgMWm1JcA<M*:<&[AP1a*^jUoTE5d_u^
%hp=]8m;(K+?]GNI;j`/"Y.jZm85cs]3(-1EJG-uAG#^gH",d4%:5g\b1P;Wi'oNGG8p7H)`l#!N'Cut/Q/I"_a+&LK\$HRg!HhkC
%H'!3n4k,@?L1V3g[n7<PU9,;q5a<[r;NThVcd<'FAStLX;1)bm0Y^PMRrN[)oti+O@U.1%8;55#r+'K7b6^<79a0.ok)@>MDT-Fu
%j5Z]<05_ng+8T:IdLp(_Hu*!E>4'FS=O!.pBkA_2mKDk&mp=!3])H0`W:4LLAU:L)O0^JCdQ_oeK,1%53J2K&7oJ3n/o%C8JC+\'
%,I&i5]PQ++P5ZoVeCP_.m4thi0"nA87V<$8iq]-^!Kl>.BT:V1"bVYW8u9UW.bkOsZg\3(TR-9C.br4dZtgm<AObh&:LI>Q2cFgH
%fE/4A:)NNjiC7I>0fI(7VRK'?`""3s^&pM+-_gC$[tf/E:"*XZ#L&1qR"o*d#Vn&1O5_1S'%`;U"]Q7A18I1nL63'UC_1?4&S(^E
%F0SZn_RW]=/@AIq[#&*G,Oa&.;U&nNkbbq40<e=0BXS^T.=h<Ih9'^LB2J'\;"l`(g_`$tI8/1_grt:.o`L[pJ\5jeXLUduMXsX%
%E*0)L@r)sXEc=2?&B<>5)>lT_JQ7U0;#@!cZ=esXC/OY>4ieX('^r[>LMr9kf@E:SS$\M)eM@u$]!Z7GaNga6++/03A3^Oq[2p\K
%2:)hIWZ0UuW`7a98LU'"+FEl@p:,F@'48S7CQm]]'n%^-#[9>Poe%,rpkPl#-T2(,Za+4b9i_*DQE;qYG]$]ng'**ja[X^4FPJ&P
%FP`b2McnF6AFrG(+,5qt%rOjCfFBl[/D\XkT'X:28*57jef8U@4"!85$#L!P=PTE.gbE%=U1bM2=!?XUkI..#<I>TV]cT#Ge0@"_
%h$m(:L-^Y0EAn$=T'I.N720N\$>ph[N-?(8+)&PB7">5*(bb5mn1)QGD_'G-"[H(3%<bM@PV@=Y@Mb\^l-0u4hVf'6G15EWp,o<X
%@!ruANHa*#=_smk\AEsC#OeQV%IE(:\sreE@8Co&33g64Z%Y(H=pVP+ma],?p<q/uZ'WV:5K&]Jl1Lp7(Yan"kURbCW$(ec,'r&]
%R7J#0F&-';\Yj-G7]=9&+?+PkkNYFGkebqt$*;oae;!UW\%TIe1G1\:3s\d4n<+m"<O`ig>k.aj0Z6VIF0Cif%ZO-tgIfV&]Tl^T
%:9fNX8n6JAN4_.<L]h"7@3.LlXmWp@Cr@#"mI0IKnu%q\QYq:tQln09X^YV00_,DD<Ldg5.utOZ%"f>tWS_pR4fGglHrO's>6su[
%$ShIPNG4'm6,$W5*L8qf/pes2DFVRcN(no@j<skhJ3)l?:g2$8p4iW,T%,aU&&[Gg.#8a?(9<Z\Lf_:2O-6Un]F1,YU8=%@hNr`P
%gB"nP%r6OmW-@87o)5(oUSpd9SFZ1.Wjnmle8l.b?u$gB[U1X2jAV5YpK,irN]:kEE2A(&,4sN-RH1q-Y3Z50UokA*`4fS:_%<Z2
%?)RhtCfc6O)%C+#5/"+S>NbL;"sJ54n0ss#Y*5\D#?iI$X:`&Qi[AG1`PnMt]^nmQUERRM;#uJ5#$bSR:tN":IkXr_cM&U+(W2A&
%M>.j=e2+-[+1,7d6mfrEn100MYnfRM-Dup"5$<fK'FHWlW=+q'8/63sGU449]"2+t.KAcOp-7bnY0#HEg"`Stnqd(VQ-ZDD&<S(/
%Ti`E4<BX/Jiea/QQ$6LQfgdFT*<:1?4u.`W0oVWPX^$m145s9d6(V#P$DZ7q@J2an2WoD6eUE\sgF"+GHaiLjR&seEH"P:A[c_CV
%4/2gO`dKM>;E5NKJ5]k>nOHl^pMtD%MsSGCYNs03Q>;=&.i.:qC6XiW]<rC)H/I3g,;<Q:GY(5aaaKe:_3In8=0YWX4k[V>U1H:#
%c9ZX8nTS=:.>a!u`8<`M5`D>XJ"1uO)<s[knA9GL2CE@kKNiPs4\UJ0=Dp[U38'UGnd8U^Vp'Z*B:PtB4\q*qr\0N(9-fI\/mf3(
%<5Th5F=]H?pU6"Ni..E04ipEFKWD4'*hphA2fHEIT#F`Dpb:?h\_hpRHGm?+!M!st(3=r323*fMBGPZC:_Hl[=[Mf*S"@@!;NFL1
%(.p5brMW^&&p\A2j3ch'4K8J64d:&md/T].^-F=s\]t)5q<uA":,XFehd(5CYBead!E$VBQe]HDZ4ach(%$qQ^0S5X`d48#\JN'I
%H+INEjlPUUR9cH68Ts!ZbLpnt&ngBNS213qp;^:#NW9_iG]f#ZN<Z,>Wn&ms&q6_j>lB[6X7R?ugA_fd$7N-"i#UDn=C21&g5LR?
%6XiM:GX?6PA.*(9V#op*jSL[o)XUI/(m-TXP92'"2'_^h@YQi%3@p>5[M?3sV'Sc*ar+:>R'8I..KW5TkAbVZATB$KGD;pN47DuW
%bee&.$*+5!EjW9f"[q4:CSf%'/JP*&^*LXb2'A]RTS"is8K]eXc,U^m"I6W(!+fuiP-!,M@AAYTR'ASJK4SrHlrh6j\>a]+T?Y>D
%4S3Vb.Uqb[;fM;.3rbB.k[mj1M.=NPE)ET$;OtIZ`2/VOf#10_]K$)5LPB106("a/ZeoK[RI;EtBEL#(Y434ZG#L\hqbLHsfIO75
%7LG<95tB]O6^:!8kH^EqmaPNNprNe@Pfu&]Stk#ki4!dDU!=)Y=#r,aKZHN0BOND>1s!f%fKWZ_7`:N2k#Zd=pq7@n//#u!cTrjl
%>uq[g&1u;abq#@KW5V=uOL=krc$=-fG6^DHAHW/Lr:.Gn>&*!`9YMihcb=ZXlKOYZr/pU$nZl)dgm"Gf;u"WZf@rOB"daau`=e34
%s&rJY2/ibH."qoES@[W7)9ZtqIOc!N+TCtE-c`+FY%+bB@Y17hhb[o<Npbe1;i,dcIUt[ecL>lj05o6=qR%4g6?'sSC,*?ACJ[@'
%S#X:Pfb[rn$+p<a=DlJN^&5K:]qIrQgY<*0l4Kte&NE!_,`X(c#3d$?@j?YFgp1e)du47-cpek.$X>(#@eM#WH;OYt:MA>5Y,sB)
%e1q0a?r1g(DU,L.Q#oc/JUW#-<Ii<:Y;SJWY;la&J(ULFQIAhI^,"\i]sd5InA=huCH[@S+&SSg+1tCtQ`Ja5nDRN/3nkqqK?n]9
%CL6p6XH?jWb-FAeaVo1)qHZ.jggT9Ql[c]T>qS^p2s]'iX6]V!p-^l4*7E,#??8+Y%<A%ArH#G%<9(@eoX8?N$[m>_*.&%p(afp+
%gC*>,##9&'Z6'gNie7:@Dc[<"IuOBM9NgGZokep.!0XI]5i9c[4Ht^ti[e0)7*Ftlf-!eO[4o^-[A\ZQ'6#!'j8,%2!@soQabf(f
%ZeE\-P]?T]cF)V@RSg-gUqJNn&Z\W,kkN%8[hJ![2i=VrUY_e-*]EtF?KsZT&B:j\%KZDQc<Jgac1P?qm'U2uIp\n#9K&;+;-V5L
%&_qW]^og0-\K3m&d/pZLdXlN0m$<cqh#8@'NB9.(gItMV5q%U.S,?\j^-rG$k`nB;#u-agjU;?]`n\FCFQmO895_#ec)\tDfKq%J
%'6E(<>$`+mOI2JVWWoJWbON3^>]]mUhSALG,].P]KTTgW>p[VA.1t3!qG>X9>]MR4N[Cp3g#KdZ?NcOZdo^:=VL)_d_9\5;Wc'q#
%f/tj?!YV`p?-`EA?S8Lo;9a2s;5/rN4Voi<#HqZn19u68Z1b)l>#f]tK&l`4KF+gu&2s2.W,Y/P0IB:(&lN>C9BE*Pnr@3eL$B`O
%H=tE#be@h2c24<+M!VJf$dT(h]r:&E/X;o[ePs93??N`TGkBW$+<S^V@(@`B4h<P5YqPj?ZG;2SmdulL\[I`Zm_N4f#-?[:A]$SO
%mXkp5FR$M=m[*?/WW`t/Esg9m/)-:?#n>;`2#Ch.2uQH0EZsqlp*1iP%hCi$k[Amd;E3;jLdn4Q"g(F1ECt%5Zo;dj=ISn1\F$@n
%+'fDlesRuo-7]Ci;!gRBNtspan]e!f)=o%9CSWbR=ofkpL2(.s(`HPM2C-l),g'Z;f)]s!Ln]SH(9nI5`A#lgC3(L=c1j,,>%[KE
%A$=[!(6J1KEdJs%Bt\AC/tH@pe\YJ%Po%%7^@UaW6Y?kY^,BSY%=;glT)ritdjZmKi88H\Tkm(#S]2APBTiACCmD_aHZB]o6(si+
%PIp3af:[t!+Qmk'+q<arrG7@>(_<[q6brVJnXfm&i62'Bom("=")^o_MSnejj7j^^l=j&$R.d49l9oXgVXfT,9hTB(/D@J:_&2iZ
%iq*n(@$2q`LJeV!-,e.(oe)8PgobI#(M*cgid>)TN"'-F!rKCI5VfaD_Tos?bbP,6D9PFaE^]7Tmp"C'\sH43$>d%u6lNZJ>@>G6
%puEDW'!^`LB=o5j6t`_ua*BYM]".%KR75>Vp?@3Z^^j6'DoeP/$ahP`[Ne;p.eX4iNMWUTLk^ONMWSe$,iO%B^<ZSk:BWN\1GVR5
%=UgV),sfJ,S?uJX/SK2?c$!N:>n]8X,uLgg#,?_r$A9/@9!g'u!%AAZZ\U.l/0Gm&2/PD1?B$nBJ:LSWAPBT=lV-hfV0E"+6YF$2
%TiPgj+A7fDfqpFRk/8YL+R]fo*qRQ'r`&S*Fp=k289F%AeROccE$gG+'U)jJT?lH88%,]`Kp#Qn2Q$_9$$o3+K\=Zr/0P:oVXl4o
%1H`1-bbb4(%L)p@0FqSm#<Vm+om.h'31\ZTdGF--bn]HOI0%%+8CiF<C(#O^+UTj8$#ea1D%ATA?=*PF5RCq'P:lmaL`K)ANS3VA
%@&\-GYFn:?mp!"gQ>-P/UK#BYBcqK@%.mdAaW[0RdWRq@KFk4qd[<T3O9q`fZTT_SgBtO;A<['">?tV;f$P5X>#!($=Bk,eeVFf1
%#_??uRKaD-jm/p9d-X[fm4r]C_Ui*A\ShG.+:e[-Ru0i"<kkWii7CWW,W9e<r,+MoAWX'Tfo]q"">uWfL7VS#/\TiWr1nj)Fqr8e
%9rIZ,(X=%!fA<N\osrZNFhtKSb5A^&#Krb?hDHOYj,[FJ1QM$#6c=H#,6[PuWe_U[-/=:h48^."?G[;LfW&Du4MfdGQHs*L%0TSA
%fdpfNMA?a^@?YT[Cgh#!.%XNnEYR_PS$>^phgNIXgt(H4GlE3\hK6l&j#RjDh_a@T>dH/E!Gu+rnCZN%qumc<2LCSi%%u+7WF`H<
%X9=VODNgIl&q'P9Z[X%JDcQl?fpEO(U2\98I"!;f3W&?T@71W=C\GP.68X<0\[]nQ@`<>E9;H+k=N2'kgQ@o%GS*4so;'?KZfFfT
%O[_D^U)D2=K?do6VASr[eDZ`1LbpdA7#<LFK*<Nt3Qtk=m&&1s<K"9;,L4Ck>G^^:8\].V/.ne[#B!ik/2h3N8/aKl$>tNiZa"SW
%..*^gr]sKt(!]s8;AqZ"7._UM^NnmL_<iAUOWE"a^LHYKFVe)@UAR&MHMhc]G8Of,7U40P62'8R@EM`4f5s5ZCT1LM&obk+I4IOE
%\TOCt;:T>\#d^7>5A+%9WlrOq.PDS,BaNE>P;]b&':,jXdS4KUIm<8)4*+HgPl!cuqjom7P3YJ'f6p;9aCmbijClGuc0Jb_9:UqA
%N)rZ=h;i&p__HCA[ULtK;b;);pdhm*Q/iOt7IkZJN5"-BZUo%e0e('FY>NkL)(CY8i?GL[l%<hV9c,+L=g6mP.`lh5+t_Zg.5RE[
%AgK+Qk_\ZV$We.%VD!C;`31+Cre1!=h"V%A?+"GZD)#HIFL!ZJ`as/Y5P^D@#pPT/81.c,'`q*c?5C-Z[.+X:X+otRL:tX\cg(Xl
%.u@S6cXTUc(G00O[VJ6oiKuV%=d$uFBL-K(_RM4W6.B#aGVl"G#Ba8>!;[;&D7:LR+jlJq-0fZCX^VWe1j`YhFaK&5'H3Dt$7L\)
%GB!jLFWo5f2N-<F)sO0"IM3HYa3KW]@4#!S-9/\Roo()O]O#JfLpX'h:1Oa$TNsd/M&T54fM7^ZhIUlR7WFIr&%9Dl$,C$(A6BjM
%S\U<2iHR+Yic3B1?+^pt&JkhMB._%^9Jr9XW@OFiAj&(H0g&Gb-t6)[6oldEomEfnafj;Q90RO9)m7o)\"RAOpga_rHHbTbkn1=\
%"l1%uJC3WsS;HI#(X*\?\l_h\2U8AT%4%[6nlqsHT0ZU30fJCoCRj4(jaEocm94mm?%hinbFict;"J/*$Bic<%Xb]_;l.9L39Jc*
%frcZb#>8mVaj2BED0'ZM$[O;7(%3*b)&m$7/(K9CX*@?$OM_-4CP6-GQS(e3)FC-SKeg!opKOWRVpM`o.I:Ti=V#FgSgD=bbe^eq
%'.&Ogm5-kZ8?"9TLdl^-4;;5+d1;psaV#d-Q57N]J.bkUDi,OajOH5iR'8`Za"ej=f8->DTB,:#RRV%DU1D1$k8_GW%@/g00j1:'
%C9,q`SALIf[Cl(O;C$Qg6*@e1@cO*n-'YDPq'e-uF*'E#b9+2-d-:ZOKh-K`cb*AE<ob189hYRjflC"Ri+TPp_&:).32is2$YEO!
%!2aD@+1WfWRF1%1;qiK$RsB$QX\N,,HB.<r/s+aKWu>+WW$=#i%m2%>.U\N@:Z\gtP0t%1%^.BOWu#_kM@fG<;"quV%@D4Ab$fq$
%<-:(cOuQ"&4V>pD<4TB@1Y>0j$@$/].t6(HLKc4O8&+pN0t\3`BVdZPL7I84R7Xkk1J8oE;GMbnl!Uj*kdl?ep6r*)L'\/mWm<;`
%i_`4)ApH^37I?OTl`%D%#%NRu/q0HoOoqfBJe`/eXqp4@<\I`<%8fQU"]i]_Fn.B5^5p6B?*SX4,_GUY/o3qbk>%^<B,p''8NdnQ
%fWt"kBO7_UR]U%.:sNS[Y]J@P>;]Uc/Ln=/.B&P"246hqBgfE4[$hebM1a?XZTLngbFQ:fKm-]F](L0AP_@.gHT_XL*c,_!]Og[+
%=-3icU'jIcG^f??>,j5g;iMQ8XF?%P&.>ds&8V5C3_U_.iYX+2Nn8+1M3u,8Qq&[,@&4!d$dcQG+uOueW8[-9gnNdck:/QWloh=J
%VJ6]W4ioi"f:o4E<#UQemIf63rh:f)97s?Ms8-I:YInc4l3CIS@\l"Q&+f6L>Q)R'(;23Yl7jMPl4UV"2!Ol>3M5jFCiZD!*`'Ub
%7m7ZKBVEZDS%V`ilffA9,,_g>XUr0+`t4Mla_kfib[*>ub*&.4PHBMO.ELSWq@L8j]Q,,"GPMrnd<M([J37E""/oCgYNcR'FPbtW
%o*b](/7)oT$4#m0&63_X$DMSq'C+S;98ZZPYdM=(dI&A=l^'Er=,VT?/+APGbrdKSAg1f#2TM'%W"[Q6lFk8aLTpjZQ[a18fPU@&
%S)u"[/WVDUge9QJ!UEJ+CGHY3<'43OM5I"M1V)O+]Y`[#I\fMN@A-n&7/"GGEA@:3ZMdNt<l/,oXq[S_/YY\4qc,tp'CuQ;jGQQP
%<$gu5:\<r68MmT)$3?M+_cGJIhN2/h@GW2k\;da.(/[NtGQtG+.G`$2qbhN\>#kp,i';s7p(rWpdS,!7H5qsS5<'!oG&Mg"+M(/A
%5V@%Wc?<\>:G$0A\e:.%"AAA_87lbh(r;24e.D'higDcNV;(4'8G$mYYF_X$F-hM>X4PD/!N?0RVSm+kg)Nm?B!(Uq7:KiApE\.!
%dptssV2JRO<\Z*2EEk*_dYaSG4aY+bohZ8oa'85o,P$!OYig7W1Rc;-abt7*lcpT%>"$)DY,_LYMdBLJ7tj9/Aks5Ko5s]aLIM&T
%lh'u!p4S1RIN'ZZb@%AOGVk1W:j@!N!7p?h<88BQHT>OZ<m0[e:_4pJ(6-@7Vd:5GZS5,5*S$Xqo8!U/?J*L&hjbGGbtYZ18pjaj
%P-IJ4>l"`V$k>Ykb9JoIn8qe<.lQj%lT%)Ij#Yg_)IYG%PHEoG[,@mIXD!(.*_R1'e/Z15MPTfPqVLk&VIA"P2=oaNC9Oj8CWkHC
%VX8d)oL4[?Z4mQ_>O;:0UXcZZDHSmM>f.=Y93aX%fX/Wcc\l9hRId!Z'0\KNgWbnpmDl)8>\E[b*V5,',J!ZD>m@t*ZrMod-27G`
%kus-[FjDQAL8ZF%@7"MB2n.HO.:.[0/Ld[!_Ri_?&pmo#L$m72h[IJdY'0cMBBR:uQ@kF8;'ZaSH2G,CL(MV#RR+>,E]+$ufESLe
%JG9I'$:'TK2bpPW.EFjNfBAH!>dIebM8;N:^T-dkG`h6hpKXd<m-teL9p,,#/@0_>hACYjjoM)hHsdEjYt1_XB's.m;*:);P-%\$
%/!a@$PYM1XKmFm<%,.T08n<G<&uFXr7bE&n19PpJ*7AA:UW+-K7R8f=aKUC(O5pZBi$GXkEom;]g6H;:m!co(pjkNhrW>m;)b/-g
%W%MhrgJg7+$PDrY-5Yj&gdXmeDIG:"DsukGYf^Mt]d4N7-/KJe:0-D&-E!fo-A`ct,t\^io/Qo/SF"g;1T!P#)@cPETC2&o-Ts)6
%L.6dfG36&U:!^F>@0MpV_>HCEfg8ThYi`D3dD\485Iu)d;kcqU'%o*A;PPdE;$Er!Mmh64K[r1f)8M3.`uSW2`Mh5+?*'<LDu3^4
%!odsDDY0qMT2<KcF`r@r^\2(kP7P@?_7EJT?$!FKX_LK'BLWI1.V<FP>-a[_p$*D!PK!>a'uJu[aN)r_\:=;K\)gEcFSk3aLUW?%
%I")(eFSTmVe5%^3^:J1G+8k`tmJ5#gRfeib)uVI?prhXc0e&lIr:;RknWs09%KlaoO5JF$rV,\Ts09uNI$bGZ48djJ%u3*u'7]qs
%(6fTQUR=PtAEkBa/ek(QmHA_]SF-*AU'%#lRau-+s,bQY,]ujdT^>:@r@6>^*k8n&[NBO-bgt>(PrK<5"u])Y7*jPPDim;oAAs=u
%oUduE=8HH/P+I<3V+b1D@(QnrL`#cdm?1po\$sbi.LXdB^/I8&E(X<,ng*=Gj:Lnaa4qVPW9-i5q0V\$%)pssc6B=1m0?@b(9gje
%D19\A@MB=$I"_XPW-C83i6:.Uo".u4\l,,Sa6@g\IQGEl+7.5[X8?W;,D5s61?_@FFg'ZqX+Z's/g[PM\-_L*3%W`IojUstn4CrY
%S!H_`,mX#]P0,JHXi)3l7#X'unHJ5$M$>_h+[L)@1jX")Y8o&IOOk0gWehSaBQo_S9o[RZV22a'JV`6?5dG"Q,j!84<\ta897o,]
%pi3(m<dHQ:9^s[ZRt?+2F^$/eXcgMQ[an8UUYcFkVd4:.AhXY]@jo0$dUGeTI$6:h/CM'!.D`&Sq6g@@Ybm[$Dpu193>Ha/9U7V<
%B!7k1gp'ZIj<#RG(Ik`1E\?@0oa"Q8Trc"R1/lL]Qn*ad*3Y==Z<A8E/j\cm\HQ\5Nu2#H-<jGQeWCO*(@u3)L`k)X$X2L]@Neg!
%@:5"9,GEP4QWW\L9&VPn;>)o$CQXda!N:sX8"/beH_Ea-iVZk1r7)Fj.eWn>lp8+hRDcM5M7oPqL&u&OpnS:.0J<>jOr?)2a"*Q#
%[g\SD3>X1t#_$)TqQu'@3dO2'p)#GR0XXljJcQQ22bkDkm4$(lbSQ]tfd-MK*gU"n,)>1u#E.ioc?GLAm,]gMK6>*]:d'Qs4A/[l
%4?pA'.i+O(_j%5NAdJXQG33mrqeg_t&95.l>bi@GNjM?4j@(sTom62pB_C<(FYSr2LIn3t2Zf2!4F#+\4ZOp:Ef/4OS(=G`fW0kG
%'R>sd077Q?\ApQmq4n]Kf*p8<)hGR7[-o_J*]D7d0Qmt?b9mXf**8%h:gZ#t8>ae[`$*!p8J/ER[TMah,n6**,s*\Roa"0fE6K4D
%&XrQe_,Tf*OOcdZ=Xf+M'qBE=GWb(Eg?.A(m=2O[>YeA'+luBf_X*2i-uJL'F"*7sF7o)sW\isJ/U7q0;oU>R6_0`7opVlr"B#Fq
%8CY&?;+VHYi>&_*J"V&/#VFHD2\[?:a5)*<+Nr/!ogZ.#8bDE&Z0d`#32Ilrlj<tWLLW6ORr_\%X5V12M&rP9<F/*pd!QFWWtt2;
%SNmR,P;9s$)DIL'M85*E^gW]"R8Gu%!]mXk6Umb0%b"ZV1<g_1>=L"BS#iX4jIr[oZ5@#9PLi"MQAfC<QG<9F[#3#emI6"cmlV5&
%(Sl+aFH4f]\cmFU/miB)'d6VmK"/7SF!bH`(PRRJ;OgGS&-FR\_F`g7muIC%B5"VZ!CTAGLDTJfcUoup6^=)Tc61hY$l](3d@5U^
%-O\.f]c)pN].+%8=uX#U6F*hPR*8cPNGBs?Z?V"ja:RL<9RCD>o`(c10A44VLY8`HN+mlF.7DAZ+YDE=$>"e,'E:C`Dr>INU*@j`
%o`_C0>L%fu%e;*OGRW-S2"T(o=bJ*,DR!q3fA#h=*`i)pLmfht,6F<L0U_.6\2Td;kHfppWEdYUOs^$:q\9eZBQ'Fd2;IFV8ot[`
%EO5cca/.K9YY<Rd4\jl!D2MV`-)=;uV?q>Y2!EPI$/q^O;S$h'&@eGMaoXjD4F")^r['W<1"i^cZEbI.\/GV>Fi))94-E^I!M-iG
%]g*o)d3jkG1$Q)F(W.^$9L<PD5Z'=m[7uKJ,B?dCR@@g+'J+QK?)EOGE7V3NY/+QD(MhQr@J*TAb7AUDGD$fb;%saW\u1j-c6%fo
%AkNo.S2bd*T3"HoZJVQ+/@ujLNn,a"ccZoXSlM"+at\KGned<Udl?MVIfT6(Q.N-p^bprR5TUE?W^^@PlKRr+Y+Vf05RUOIdAru(
%3)+*jIe<L7[lL;83*;ZkESD!NGsdC,*NaT7Rs=VXNo&rl=qQ&=i6*_u.#PZ2p2+V+;N.KM(r^bd,Q5?.8kg"F3SHciMq:<?qGbuT
%BMGl_VK:&X.YKdWLn4/S4@pSlCb$ZD2)AD[WgHWA]5$O$G!A9kkNi9?]O9\[X%6*_Yi$d6\,@3YSDI'kVbZfooc2=;7/*acF1#!Z
%1!fiWErccY>$J(:OrZqfUp3`R"E1^XfJNONHMA>a@PgSd]$\uK1^XW`%@FsK]RU3$meP#e\S$QDf=m->'.9]5<*K9M'l?[$K1g[%
%"]m?H>G5C)1[lMoMc$A`0].Xh4I;g3X"Bn%/R=aXH5*%'W8Za"'-?F*XGd#_:;HSU8WK!r4eUXq+suWm<@2"c)&bop#gTB5?g"od
%Cn[G8c/e#$Mj<&PmSUUc<ki`lnGoSH!ME]h8WW+HZ)o!sY#$Pa7/o0o/NA"(LfT+[+uG4skAX-^kHIuoAdK\Q\`Ae-@MXta:6R9d
%8HW;`!\jdEM7Pr09%[5>YYpHZQ[m<S>WH1u?Wklpj"S_5Y;c]CACN:SG&SuJhImflhP3cJrgR[]%bV"+NG@V&bLKBfn1`3,mTmk2
%?4AN5b%a-USq@?U*'XRI8A52%D],f#/B1caGU=buTSa3]1uZ:%Y?F^]p2fq+Eh2QpXWF4^[3V!S-uM\C)KipXf<u7UPbi^Y2'3Nj
%#`#'BZaYoX9YLlNj06fM0rF?7aB.C^_X,JU?VT'D(])euI23uk]3MK+Xsmsno,_ocLu3Td3p52('.=X/<ppX5N)hMi(\9hFk/9Ck
%6iN+K**ccohoBGu_-lIY"=a2dUnuTN"eEJ9+utrIS#h=R*Q.RQVo:W"-(5/AJj^,0<UU?fL*rYV1)YkOA6OMVc.QD82nRO!pgp>5
%j"^ksTJJ9h]bd(qocjXc,]dal1X$\Tk\:M"K1omDa@1Fs;H_8t0>>9f;Pu:<I'e.a*2_K`i%Df6>/3TM[1K7`@c)06/tRc&X]1lK
%W\f'D'iBO=/jJj9)B=oQ0'&C=olep?a+bp!g*n)_5,(OX&Gp:%M=?g",/cURQoIOq3bao%0C!"F=T+QJX&G]='B,\ga:LhVqU.N#
%9QlP[c^pfMXm?]RXrP68%-%Gn8B91k$[AmnGIl\]*l7:\7i)'_-W>.\MonR+J%pS,5qB/NOb6n]Th"_'eXG=c>-B"8*sP>>Q!*r!
%W]"AC7(!+/l`8klJa%=YoBL>8k22pRUoHOBS.h.pRZ+OA"C46epQ%5'T^(s'B5a$fRXSFK;`tbaJaHOHBQ;AEYn?MZW2bc4g\uSC
%98C:=C9@Po:)LC?HDGVTaM`1_@lR4Nk<N8'@g>JAf;X&r&W>`W&Uh9mm%meN)OX"?QcKL#nj17pMhMUZ_ZJpb[2\J5cdlp*Y%CaD
%LPQSL)]=rTME+;`@U5kfgE:f6c/N@\ig@q8&t=m%DA]a!*b5"i-0p:GK\kaSL:El<BW5-</W!\?Ng>8#`6c"[\=sb,PJp[,$PXLA
%N_1:(CR`EU2u1,SHK28ZR6oq.$b3C+5/@+OX.+7klqWbC"HMUb4^j1lrBfqN\V()_X\#Ce-?+-&<Z7k\WX/%iS`n&4g5/ER3<qc\
%P?d9BCKAIjj;aJn)J?a*dqm&4,UoPn?8$Z'PlnR>>Wn[lDoa-'[b2GG:NNmA^marCaN5W/>/i%qF8V"U)-LgQZFONt8i3<Kb&YXU
%![18NZS$@!R.HAb6s2=iK"ng0"'J#6ijk&q,"Cldn65F4NRa(!9ld.ogQ",9OYFR&<(oC(l7Uj67Zr19F!ugc_NpibX4f4,!m0$`
%EEOjLC(t:rkCH1_IJXW%5m:JA':p;?^'@tBebVOG-#Yu+]Gi]T4a#30jZ&X*OMeRTV8[@TU)t%+0[@XDHaW&4CH'"ZLrh``L-d^,
%Ya>/H4#=Hn7q(.QEU]rrPDo*pbfLDK!_09R&*E?mkKFgd7JpDsI:[Kt>%=4&A$q]FWR@tF5>Tb!]J*0f`^aGJLjg&npaDV-6[WP;
%F8_I>/X5!=<KftJ7ME/dj;i#G='qi5nd&rO;088b-U]J!:$#rhF-p0Dl_lghaTf73Gm`4>A@WUln1`O-;jD/mE&p7J\M76E(a%b_
%_,d=WVg)IPLq5#7Eq9$#LbZ+ggC2Tr7;E^R"*G!Ze(Y#uOY[pi9NR$RSo7ZIXE#0&l,q2![5k2U/I[9U!T%;f%U*q/^UnBlOZKuI
%d:*OH@VS+c_]2BQU/3[^\M`Ai=$:;o!\5UrO3l*nPlC/%l=fXlah1FQB:ZiFUTQ1GI=AKE$M8YXjj$?h/9ot]P@\@QcWZhuJb?8P
%;[rV3nnaMi]#'e6S"<KIYFRPuj)5'Tr3'_;j"iDm^U/!hAMLCYm)H?"G[dcf!Eq'g6jd&t9K^Skg*i@m\n9-\omX@a6=MGa=s"B*
%[Q@k;]tNY=U:kkW\ER4.m4SC]<_%f1K%r!0!\^[.r&@%KEBB.lM\"ap51a1=##fI`^j01\CR+63gGH6AjgkT%4Y@HcpXJ5:(/CFg
%UjsB@3A+`;+55,$CX])'aWciXNIXEerA%%mc5A,&Djs=6)f]rQlp#gh\S497rcKj6N/JE#TjO^g:e,PE`eCoN9aqQM^mu^of_'tI
%J'E)eC"2u4B[]^%*'KS7/p69gJkW(.&DU^'f]O'CRLG_YMlmKkmHRD=6B(q4S0tpm9Ih&`Mu1pCm0mG)cIN,DQ1/]TPZDRu\G/(8
%bC,Xr$+c2)Ab$0@\&Q<`lU=Nm@Tdo/3IpD0H7N!1+M>:;9Oa[(+HE*[POjTUYpaXbF-]?P2,hNV6^`aBP98?#1e(3I.YjH(kK-(6
%@)5d]Tp[XJa`FnN?1aQP0W3L(98Uuo%#UI@nB2Q.L"MtI7((Y6(69ErBl><2n?iM4*[oar]9jOtV@[&(`WDdX&sUFG%WC&Rg)513
%Qp4Ms_<A`Ur;7K*:8l_I'fWg\j+KVU*'!IZKqr0sCKQbCj:e$=K].Ak*k]c[HNO^Pd7RX_?l(guK;]b>=DP8!iYCIc[1+e:P$-Nh
%X9OObG=c^Fp=?e.U=rX9Iik^k_;so6#D5#s")X2[@e?L>EZI/$_1[_[[QIRu:LYV[ZGG"+GFZUh#gH-%n09^KA61M?s3HY,"hSEl
%(3@%kp[Tahqs;7fm>YN(XZ($uJ:L@#EJ&0]kgZ_G,!dY&T%,Z#Q"?t,_U@a"<i2FZ[o[(kr59'95eKs9cRaoZF\ElOGdP\IaZFq@
%S-K"!eTI[dpHaGf0OY2I_e$=RXHO:MJL^Q5j6)9%-6cXTHMgQbTf)^uLq[pSC5.*6]"0ml"(:d)Qq6^5>6ruQ?,J)2rJ'?9dVe/W
%Nq*uhN2m`IjE3])'QP\8j.G$7]>%rQ^-He(ctb&^`H\=n>M![V)Q`U2q#gtt]/.5+6a(,?gmq:XIqRnd;UM"J`O"+SA>6%<%r%@9
%.%XKpK;n)peD5PY%m5S.K=ejE'rC-K$rIaS=<umB;&+%*;+Gpc;5G9UpoSm2Rg.<fk6X_<UEl)Ap=U4B,q.J-I$>IH]dsEc5#G3;
%ij`[kS@jNA`%D_.\oZ<OoVN$Jp3,JrgW4AqHh6J.h#lBEF.2#R!rM7P='$ftV(+&/a5lu%8]Dq?CeNF6LdSE^Bq@!s4F%^4._J0N
%DA_pSNnh.YK\]6mI*dO>h4=)b"Le#;9#l!TbT%rEH\nVcbfM(DR$]Gg!.*'gZhVugqoL[?`+t>WBD,C"'sdOF/fM"iMNhmrEd_H'
%W6(HcWe>HN'jf$FS89on=f.TKX1;<\p*E_CYi#tpF`Z-C?&LVhg()ZceuP#qOko1Z/a$/]:ph2o\Bf_C9%2g7Ui2eQV"k=n9g5oU
%m`?SuBg1n-Q0^ZFh(H,%XU-Ia.Be]HP-&&0jJ;9a%ojO*nVmNbF-Uh"8,I.>Y].SohDNs=SKY8KWpIaEpaqSu/$:jel=%i9\jIn-
%abq!UN4feIorXqWb+X&`QVR>"kh2`l-E5fb:K:jUA[(Bo]\ZoSL,2_#4pbU7rGtq?P\c'\\joe:Wmf0-=AK<dOK4d<2!]0Yk?,UO
%qdU>]mj<?a/.5+_jUuS'gp_F6T/S.@81C-0a,E1$9-]=,I^f=Ldpd7K]%7_$jC'^eQCCp#^piQb-9Tu7MbjrM'HAZOVc`n8SqHm6
%8?`lSL9729>f_f1Iq]9*/S=jQ.El,nIiNlCC\!%a!X$c7d9_45:)9mH2pQ2:U.,.p&[$"h7::D3MpHTB((d[W>\1HLP3)gD<:S,c
%%:!GcBtb$pNPW=ic@PQ"%*l^QW$&lh)0)/QU'H[,Lc!!/:oCl#Y.(9X74P>'Z&pT`,Q_k/Ybt!s<ij6i2R6BWR&/i&GDu#@D`"`H
%Ru5i=]h5\ARFiJak[GEn;$KonAh.I5Q$m<5rOH+>HTNa?kUTr.r!3mfX2XL@H>Rg*cCSt$&GZeN,)A^pe32/;>^[R;T)G'_J*!`_
%1/lCl4&&V!8ET(5*D!Vi[kWprl5&^(U.'0\aCU3>,Ur793\Js'_^kqIPa:AMC?Xteh%YdnZ`:UhYrJmefi+,@gRZVm(QNm?$.NP0
%2OU;heqcE8gj3I]Q`PBF=X`p:cB@PSV@Q<d.II6WZNpA+T,ArXct+YPi3CBpA!OE,NZ3.$>FXjqi%ddLs(lZuA1Ln7^.C95NK.X+
%.qEK:/1&WJpW6aPf^Tgc).Ipb/iou!4dI%,$W4AAR=r7o%)ce@=ZKW5+?,'MSpHa*nfAb2a2MB<lsA-qWhX+P;i+'4U9*5CR]CcS
%27YJ8?uEJ$25_[WGctH&imBG_gpf#U8\8(>Xi7"V(,*(XUN/GU[5s4K$mk=X<b6Hs(*C\ZBl30&DdkQCgM(J__]kGA'm^W#n-erB
%6^KD?%*<!CfT(g&YXD8nb@Xo<W[=Han'W_WJcsY)h\r$[*7nS@D^I&;7hH<SVD(GL`\u0^'pSo!(m[=L`H-?;oMpgWdZ;tH![8C1
%%'KFp)TCSe`:.oGBY]e56mb?d`&:fD6(^7o07uc+,ELLnS#N,r0LIQ&bApMl'[i=j4\Xg_+F5Y@iCa%b6^8k`MC,cdTo)R9M-N-e
%3EQCDllO;8AM%2%)T#HYTu^Oo:[*MFpnUM,KI4)H]O3qHV90s._sf3`jcaNF\?V+:;0pAnojiKSVG>(>FDR?Rg*>8eT/)ehJ"0f#
%(e,+&oL2C9)&Xc;:P<C96l&I^OHHIj4'<Xj%7m-_BJiB1)R47!D89)OGW[eEq!,t]0!>p.`?2BC*3WQD5\:"1!6+EqW8(,[l.OXO
%ocp,m`3Zp]Mmi.DYI7B2=<NkSekecZjB#g9<k0_qT0["9Q3])LfJaJK02j;G^%g1PS2&/3=DS5Ihbc09]\A$<kp)pPai1%JR.FdW
%\aQMn6Wh''FPrq4M90:[..U1NB`Y9q_91gkF"D%/W,9@og9XU9barsH,9;Q/(YODIlFRAc'cG,9J9,,lr$P.\cI0TtZa*V99hSH2
%i+t!?YB'.gEO8JdQ<F[l?5`)M>j[!IdZIQXX:Cg@=hMCS*T0RUL+fBi/_3hF'<q`P?d=e!7*u<a*4*ss30]=!YXZfuK>'NY2^4tr
%Fht@tKbHF_Cm9i.iLn9OmsDmmL8I"C;\6H.lY>EL<.1E=eSJI/>*9Y;,/n$J$VhM!r]-'b7d9]:oX/-1.#iR!iEqe5F!Pq4P/AI`
%en?Y*4em,\'Hl.ug>[bM6Y'tA!EI4llIE8JG=\g,@[9.`QNp\?]b%TJF.7:SPpffgLf&#OW?/mod0o2)[qY5%.$pU:LUg\tnfiQe
%=Fp;^Wh-UbfK7JT+C73dMho?`8u\o2*/^Am"*V>cmbOo\29q^U>Lc7;[Q&[T]Qo941g-o''n&jCGIa*9!\+AfOD9-rZXl"&LC6LC
%=ZZCMRe&sjKsESqN$K&#^hX>4q`HNLlWVQ_/#>\*6])qbUK\YB-\3q-`-$Js=j&<]M(1YGKYq&g%@4$iS\e,$!p/-*YX4:FY)O_G
%H":%%^/8Odbb(`3/!$4%?3\@<YXLL=\R>)n;e*(Ir49p1F*M9FUNYh$7sWSRHK4WGUo\#!Ch<;oCRlLY(Q7#c_UD-t,-K_Fhej^2
%,Nar@X+`eK&N_an-9qBG=0m##C*l`U3RRX7nbYf)5Bq?sZJW.=ZT3Sa+sVbXB^ZOV4,ap[&IkEpS@qrCqgglHMJSnD7aE-DS/65M
%7EZ!4g(Ikc`mokdP>?:]YgprRE@.+>bX1o]Vsk%*Vg=m;cM6a*k*\AgPH5*4R65&gi_nE`H&a*c;;G^DgJCu:jNZaGP/TP&],CD)
%./9K<E&)p%)lG'Q>TPHi@@YSbCC\?=>7@C=DV]gS*`Z:(ZfJK,%+8ss'>"Rhgb>PDb)d9VbiY*1gk&?--`XgRYs(g6=M'KFbRGUi
%ZWK>Tp<_B0ULFg'e^MaPHcrJH`1e_jJX.c^1qsfB,?%WY@n1Vo7DW#[ZP.^+K%^_d<^<EL78k\I:d"t>Go_TpT<fFLX'&!V-:=0t
%)OS-`:jKEU.^.Cf5G#_BY8(4a_2r7*)lHc@\NspIhT)f61D-oal0JPFZ_+>iipr_B]]f1f?7pLA+l]*XB.^en+4';Q$H/Z+_Pa0Y
%i_\:*cY4sF^VX^9P_qoTdt)$TP-ul`b<#WT(1?3J"28!fJ;k&kGKhLPMNAU2,*3f:'PTF8"I1V!Bn16D9UG0sBs9d[&6_>R$FN'9
%6EB0ZV@d[<jEMFFI*rr.11)V`T4S[-jd].[11s13.?1E.I+OO$8*!T,N(V_D),Q'(0cI[UE$>0&aMLLjM?6p=[=DRk8t0c,YIIC:
%e!9o/[ZM7%@J`4B?U]st[*Xe780.5)D`3$WE4LeH$bru5V/WsN/c;'uhlZ%AN2nK-186Fjm5A0R3"r]J$P?M]-fQ%I:E1H7.L->a
%Vn8[8SPtBVZgIZtl)XVOemGjHZGS5eCH(Bbck;;T@WB3E1rt'SE+5kMkf=8W8HkUc]=>p<;t;%eSuaq(F&:l[fBQgW1en3-i;=EO
%g8*55Kuqto?0%aqafq#e+=XIIlk`$.aI3T@3/;u<\*HB:I@5_b]X-@1c,u>hlL)]UL!=SIRNJS'ZnGKKICaZX6e.QDqIpq+q6)Q`
%RO=\c8TQYjeLHp\OCH[;WuTtLA<%QkHCE)=/:;M6q[f?2<bps%-hZeE8[B[1:1K?W/FHY5cR/\)^9l%,!Ms5*a?VsmqUl;Bo5P7m
%oPU<:&^GN"J!`3q,Cr'!)eoSZ#PdT&U3(C<EX(U.9K9R;]%R;,YX273IS!/=R^3^a01HW_,)r[F$H*b4cBoiXFV6-D,8P&^.&$)\
%ZAf$&@^5Af?6+_;lCfnPm*$qIF8(Vk5@L$FhXd710G\4rdU\1>^d.0EET4ki-uhkHNM,P=%5qXQ@[#FO6U%_CUDoD.CJc@N2k5s<
%N`"tOmULtb"`TQH;u.qDERp5Rb/;he5%itRUlq[(2c7p+fp,0'@Q#,mZ+BEbW,3h`P:=U4&WJto5:N;rSmiUn?FUMYe]u%RF#PP1
%76;\=8aTKOg'Itl?T<[H(;j-uC&&EaorU9+4>)qrAF?RJAlmrI#l5%">;ge3ij"k*\?hjqjr64KR1Jn3fhV,@QU.O<0[9-ZW/gZC
%+7se*3?d'7U)/)bjDf]=C&,;cG)Y9FSMPPf.Di$\gK2CG"=9aGi"W$3MUR#ZXjn3!E&&L?jEJhNZDURbRr%^&kXrg*OXurk^>j?4
%R3S/)ne)`<$2pGqOuFgK6->T+FHTc@q's?t.!n*T9o>e(:eJ<FF_ID*fL/<go4n8-D(@GRM6h@8g1,4QOcu!2JM9)ck$ehSU"[RB
%<r-PsJ!::X+mW[q)K`&]mLc?KH_^o>X#l(lVW5L-(hC(uo%XqbM1e6Q,Xf3JfpK_gU=geNF^5Y8JjmT-9tBG`QtK_%>n%^bY/HS9
%SY=1B$P#T8r#08\7=;L:1dR6DoAVnQC7';"eQl9++W'"..=&7fF41b9#.(79)mM_:-HY]7pR%snUj1kO'N))VqMVDF'1e>#`ag`X
%cAot=e2iM8lf_"2(fp3Da(lCE=m/jaD,U*+[ocQ/p)/p]%RBo-oi$XAn's$Vm:],hD\Z(Dk`qPq%:,Iq,ck39C%kd73(`3Dg$<7,
%)n[^mMMgmt4r_W4g6mEZa;`j*@\$mOb$o2AZcV:^.Ar"qfPee^<G(BdmZl,5Kj*/NB#Q\(rBKDf".bL2g^MaSMrIH1G$N"8913Ph
%<6.u\G,T,Hj>P_J)Kt?<:;6XnY&U]$GDZ:LL&5Fse$>dg,mndPN\5;:+I+f%cJ!#NK*V*i'X#]X#5:^'i's69f;&'#?FAPE7]$r(
%>*q?D:%jQ+WV;QkA*7!e*uD,mR?O3DoG3`iqi7&qRKQNh.8@4,<UeM*?0._rSOCKIii5sOH043ReU+ZZ=]Y?ZM2V,CU]T&7Q9b+A
%-?i=#ki8nYGAJRP`iRU%V,/st%9f`CQn0b<?eIOk#7fEd8&-ZG@2=Ps^VhC+NH4B"f?9HMF_;`=MQE3,[ETfD&W$^ib@DC:6(;_L
%\R%qZd6V:YGgH7_g94.0/=,de<\'6Jk'E.&;O7)?+_jmn*=*]&9#c&I,L@%#"ha!J@T-2\>9L%^NWmdVEREfrRR_&s.p%Fj`h'`I
%K-%^+mY#<FN0Br-MMo]04W?tRJ!Cjb'<3Ksqo#QUFEaU#q2oP\/rDp%b;f$_F:U9h/ZeDRddg?"&%_/-9J!gFMt@psc:_D2[k+g"
%F7r5?S9)h@0&6(cWsR6X]3SiIpQCF-En4eFVk<bBb:H]BNAar34*MG$2O(%sfZonrVmEa*FSj?_fp%PEi\6^%$E93V,ZC)*:(/pj
%SV>-^:6mD^a_]N*GOuC#r3oY+'Tf]'N-Bj%4Bs?\0j%e;8a>NdHBkKaZo9fB3_aXNksh,dKh)eGM]=/2W^dtsM,rpEYfI.s_iIPf
%kc5CKV(JHjX]MZC\'!Wlc*OBdkX]luhQ:JaGR1mp7]f-EfI]a.YppKoBr'et%,*=:2F2P+:0)pnJBI(I*5g!oG[LpTD7)2\D_GrV
%24+Q,c5s#?T1i0(<iGc/L"N_'Zg4>#Pm;YKUgmWNp>STr!#?6B97\+l@V?-&Y/APCQ^UiW>H:2>g[jN)-@62[MWA<3WnIVf401mF
%VoqNhZK[]IB5P@g'&G6M%AKn>]B?lN<&#&RY1,RK3]7k`,%$(33eubdeXIAi)Ye@3ANe;pU*8:*NrBrBeF[Z'F&huO:cP&V>.*Xs
%Q/7pE6l]`3p1":Ba&B'<>Hrq$c^bm._kh\gp%I^N^"kaP:)k&qONZ$,HU$Y%=dI9Q&8,k-9%5>g6qpS(7V4["U5%kl.M0Hb]A#:T
%U*f]q@0PZ+%CRq;Z<=T0IasB:?D5rLP:A"/\]Mmhm^%R1;h['qb!H#hWT\e7AhQuPmAc&t/G-Yb91s+;Xt25[^doYTZtT&=`LBCI
%+c!>hL8#QuWdh*NL0h47Or([fEq<0YC--s#dH<bFCpB2KU;(B.<]Pu2H06M'ALU)<`J8K>_j/.i8c5F=6!DR(>$jhA"9jJ$I?[;G
%&l\ZW`l/<IQWA+.F.K"6SM.:]8()1[O3Y1RW^NF(9fCZ4CEn6jM'Ja#-LqEY44"P"C?7g]#(q8Xq:q;*e;^U;1jm)3AO?sh?*&7.
%(2>3KCPkS0T);?\1CL^[-*N._XuakZpda.]A/h9'qn`JS^#l7aMH!U9(.aVe20q[rP2M4)PT]m&0.0=3:+?MuLLIR+=uZ3NWc^%/
%;["N!CiU^'Nl.`mJ-d*=-8FG[Gp$i"p^\k;*".teca4pBG%K/:!c;$8mE<VLL$GfDhN?>a$2-M6TW9`9<%bbN869FaV;QI'Tq:+_
%9$-?JA6mIIKU16?#Z'ZEI785*,)^hW=l3,X+3>>J]NE?nd2(qPW"K!;\hl_IX6Lk/[OW$N316l!]8=//G5$GM.1GhOLTZ;M8f[*<
%/mTphKLF=TT"8sn$)+FR_=_?PPCd4EMX8KTVhEO%,l=2LOLoQ-8Kkbpd!$f9;eeWpV<I1cV\GDf<msus]'&h0_nLILS@V'g\\uJ^
%W%D&[ff7$'OnIJkE(]*X=pMW^KV$RWDP:o^,@*1ePf1$pDNbu@gSR&aY+oh4K`*"b(-91qDd<3(&e%Nl&:Ji!/"C_#Qr>b9:Hgf_
%8G/g^Y)(XBk"\KsI5.uW:nEh6]:s%AW')F-pS?oR=PXY+qkAC4W'@6^o[JT/@W=^Bl)Q@@jef3e;.p,k5AYQ^[-,O4%(,X-k?5%D
%LS3:>XrKPZJ>SWfaTp!8[U&OZJ#6CB)'YAP.R:*S!4#ejK'Ic,Ps0=DUa=#/rf/6-4_5p9!tJp.<\s(.7,]R-^J=3DD:_;Zqbjb_
%l`JbQmnn/48>n#=Fa5E6P%:Ll&<8ip8Fd]I;iMWK05slR<kF'f)?[l)]lfs@?T-ZS$u9;+9=B=kYn4EJpLH"^!3[^uB2+0Mlpk]k
%-Jjn)<EE,EAuDH[7I)P8Gj,8=(Na@XUEMX+;qoe2(B$][^,4m3U`.\3=h<<]:DMm,QX[K\SYtQ#?9+UV%$^paL4M_J[i,#AWuIC`
%f9%kK@ad)XJNVjgY)Yh5DQ-Z#9L;X6B]Y`*\]bL7RHVV)-jc(8I"_\Go4X'[>]S?\[YmsVTS%O'P.:]'a"o%mZ^e'ePd@44YeuiD
%eWA^uB(S'Z@FgMf%5]8C@'V@oE?"!9*<ltlMW^to[`j]9N+T9R]nor3D5%J:..JfZWs\GGlM`9a?_'gpcdo0dA">$65_[fN=XZ%l
%di+*`R&mgKPg"2=qeOre*7R1Jah\iA''[+qc$JfXV,^A/lo:m(Z=^.3bSHrt3N!Od?h.X/\\#t1N0J.jG3%L-9%1)_'V,JA"NdiI
%mq?LR=M<988OjBrc3[ZP5F!k<ilrVqa@`HE;7>Mp>.9i0?.AP],]ALE9L[ugf__?!Ot*-MHKP^;p&_KohlI2[g+?g^89%[K7Sa%*
%/5N?d0=ku=f;2=EhZ?C&;Ed_7>@;uKJAeupX,q0Y;/,DIX*g![9Q@Lu"-eU</;I\G\@*o/a:Z;)\X2'UilrL(GI8M*gPVKqCtLp-
%HT]?"0+mX96:1A=@Fe/1bFLkN5@eu"H8K[*e3.e8GL,jJ\_k"A:0]-DDP$8:e\0?+[pSm$4E[WHDrBJPIHk#)aoEfcKt_6:CL$+m
%VT>T,Z4U^c:5UU%"j1oXgnpf@.''j9%%7@R&<g;/S1*PZl(kXGTmZ@(c+Rf*=J-@FU.'H3#r9Tsr8iCY[+r@"L6c<\U=T6)Z/b\m
%Zb)8oD>NZ,d5aip*BY]FWU>&_5Q#gTAbSk]Gl[RKlgCa$l3`n@i=ik_PB7OJU<dWIQ?S1kXPN*3XRIW,aCu;@52@JGH^*6/h?DN"
%ZAj<DE7`sPg4X)p\F]s1Y4U;/o=@8^KSS0E@\G3H1bB^)]`"V0flS&Vi43Y*:7aLrL_+s:V8/f;-OtJ/^/Uk?Oi[s#NM_k8]BePN
%gsfUs(9?Yt_"W$7P_,<T;L.W)V&eXD?bQ$Q_?%K=Hf,=NRa(CDe?k[`I4eHaF,$+P&nKuIEo/]HX(^X#lN4K<1`.QTdoMm+A5X1X
%oPD@d'AW`6TjT`f8eC#@4%/hC@nH"2&@&C%B.,=JTh6Yg*'RX%F&KDagJjpTWfeSq.ON2'b4R3S_9!*EUhD`M:&_7ll\OQ$7a>B&
%/j.i*JF1`"UIOgE$F#G"-kB0:bnPOKC-W`-ZW=^3;D\nU.P\.:8rN49(CQ)&VQL2N!:higd9q&9GgRot$qc36iWaGG1Xa-?,GsI9
%]W3?S\;mQ5[QUVFU2;>Gfld=tm+E+Qq]bDVq6qk*GJrcF1AD0,]dMO+:]pPD6Vk0NXbV"_QEGOT65So::-AdHKIU#1:TH?Q$G)6i
%*4<]2nU]f"i?fO`###rTM%@Es9-'B4kq\DAF8Q7N)*V6#)DcbM8TtsMWL_Jn<o"40@^l'?G4uP-EFSR$Qek#MlI>)@ES\P%eB'^b
%YUXXIb*c-3[BN)=[*q+9_hLk[)(q4h/fIRIBeW-68n-Bj]i)#?(b%$18)7hGS2lKJDCUi]Jo/AaAj9Fu!WBAL/eH2(n5:l<<cjQ?
%W7_96W@00m>dGA\Qn26@`RLo)j.(a.RiC2;/ePAB@-`&-FZr69,[srM-to%E[;20l>GL7ho.6*Y4[t@"DuQsh(E<s#`<@Wsne0>b
%=AdkB'!pc;$@Q7G@eA4-QR%qSZ$>:#T[26R+%%EfriBQ4>PS$I%'NuTOqOkXGge-GYA>qrR^c<#<es+TQc(SjN&&OZJq_rjg>c.F
%\S)V;GAaDV;V<q.[@fuFdF&&TeZt&]K,`Xb)*5pYY<t_F>=D*eWqFWh[?+%c=_<aar,X#EM]VM0E%O4FqT0)`bjmfpIp.b9;QC6!
%`C6t$&gt!gF)*ej=*ACq=FA7h,XXD;9sII@qMstuPuedteU"AqgL>?0dJ^1IbMj'Q[=45XQ]p4)A>EGR28s"Udas]b\(-L/_4-TX
%2&8tp@o&Rn`u2a)@80U_<OSU6%D@q819kRojM2[5F25MkF9G,fV:kGs.6Lfbq+Qr,Vmg:Npdp@<q&HK]d3Jdp&G%G.`8jA`al03F
%hIp8n@'Gli;t(]2;-SA?DDLj*P6aXa3&CJ&E29KBee23ZrC=g>mk'mBd`QQ5M+jNp(/@2BNcrUOoEgYs2#30m'!5-!UuJ[qZ;jdD
%VU=^(:t3E7-&2&.Hu9GZfU''$-Ms$.+bb*'F0M7QMjtU_.rr$Q.opqZ-G3Mb1\MQs?klm-_br4_W!tsZJ*%_F@*(BGo`_\Y:;cYN
%.]dTXbCr*O`5bG0Ims7%Y$Q$%MoI26CJn0:B(hmKHV@4,hZE`r.o'f<$E3AoYo9QC/8Z!l[6X+(DC[eJXWM'/;%pWr.^*j5d>O08
%mT+_R1@?Xt$sH0$[9=`T^.@+Chn,&#?S2&0''f'aOAKkM_kj@U:p%oHOP#F[D=A[-rg9Jl7L&f<+O6MAZ,pNe;PGrARs%KF9T#mm
%2H<Q6k(Fb`,LH/S7.+V)27[8A?Md1GrChj1biQDV<>i%*op'Ni&#fbjiiS0MP_S9Ig/W#Z1B^GhiiL]?0T=9E=_aiL%pO7YUYkae
%bEGc<Na2Ha>gbQ#ho,@/k\%qX2DmOdl_$h(FOF@heD@T8Cl>_e3C\tLbZ]U`redaMg_bJ:(Zf-a;3(qiZ'I/]oN[ooAYem^RlR;A
%YqpA\k9n9nh`6,s;8-X\WQ/(l96t`#JU8iUTYh>Y-(J*QSQ)JTW?S@rO>SMM?Jp!@-^`X=qZJ+,lp'1)`FG<WnYH"<YYirJ+eksk
%dLPG\luo7%^fcLDb/=*H+r`X3+fVM6Q^6KfT2k!Yk!pPHUT])_8Z\e4T)=6=a)#bcrj-.3h]..!G(g@B<0%jn&YCkMcjr3Y-kfCW
%fZt25E+AN[Q%G4+GIJ\rDiul^MtgD-W8UFUh`O>Qp(FQeGDrF>^Y)5LWPO["AM(l7dG;.&O&;?i*EM:%iBc849'^aUimD`U3QWk`
%9!p,d]RAql:18j^FuTXFb>']D,ciS-%.JtHT.W.kd'>U>BVuVuolkXVWb#FW4P-Gl6Cc#n/AKNrY0R_heGZ*X:t%tm-jA=erP:^A
%*r0FYfaME>3\P8jN>?<i6Gqi`JTaE%VB`S/<@*>d0SQHZL5-CfQEMHp&L0A[;.G9A]`jk5Zl#ff`11.tjo7YG_8UG%#;'$9Dbh/T
%ah*`q"`MC.Ff^\c,53"@BXR>]UK@3T`uP/MEk?'s0t[&T)d!rR!XMZo1j;mW$>W=o>*SO83G)D520M29@R4"@$MmjU&2TBYXCj$o
%3CL8qp_<s9;ug*AXchP=WnUK15FUj$pFb+3K/dC7_1ods066\/?iAUj0Ra?F.?>"&ZKBi0_T)Ng-X:'HleK14+S/D$7ZCIHj"qe-
%1m\WC3b8-Am?0[03Dis*M4%Q?XQ63HP2uJJB+'D:9;;&&Nb]q5s"(b^?5\N0SL`Ir0-j;#ReMTu.*^t9cGNAMX@Cg?BBE%GTWaqc
%c@rL/(Zu?^oiIYDk;hdODahhRYA2d&[PB&]B%&cE;t4O=@-sY&*M]4><`&_h%EI-`=MG*@0LPR2)l%>0Q0GV3_)U1tP`7k*I5u4A
%>jJI4?>GWY8s(MJ>-hEkf3@2Xkj+"o>=AFG_^s1D:>[nPA]NT@!_q"Ad1"II`hr*Q3L/k(V]_NXfU3!IT'b)^Q+/HoYAk9Lr.lD8
%S@ei&_doL'f^?d7V18X'-uA8nL*+jS79NkY*1i\J;X];Dk@mmGd8U;\Q)fPk6D@^F%N[c"K7`L=4<JRI3Ts#s@"UtU@'seqRutnK
%a$=cD;rfN,c]"u,iZQ]RZ')Sb3\s3Dn6.C-KM;!!RmH"eE_Ia>Ip"4d_og`0`NrrhjFC+cCUS,5<4,3=a0&AagpC:H:0^LiV(t9,
%OgWn'9bi56!=IT4\S/)No,CTeMMP-jNLHmo?WlYn'i0d/-;2&X=f00$Z?0"h>I(WB8]aFO#AU3M-le"N$;n-k%.49(qNkVi@^NnF
%5lW<#-.b5aS>Y^l;VV3q0gWudU2)h]ZLCMV/g==TkkJneOSPn'c3\4u&)Ib(P*2hX7T[bi`GSA@fHWGdmi`]SX)d.LB$OOYq8un.
%A8d'ZP@Ea?Z5oGRUi@TbF?*2.62.F<LfnX/X-cZN>T8dgS`:f*8nND!m_;/s!r@?^[DWugjVrUcf2hWsmnQ7[W7m&REg)6?^&%7k
%"a,`(NRfcsWjOD201;"!)RRpmB&ag"*lLMcCt6ZUEriC!gDLdoZ:[*9doFnfe:Zt,9d)2S$9FOdej@kFU:%+,Tp%QY:aJa-Egi3k
%(+k?[R5)TYj%&uT&7bOZSf-@=]@9+oMKS!1QfN!oGAfJOYXR=^m6RRX^^Ed=W^ghV&)NIGl$eBLG&?Z8W4pin?sI<:rZnLD2>S4=
%F(CPk9hoV_/.]5.7UP0aUH5l)/;Gs],D_@5f_8=Fj^I[MpBd,<Ug)u/At6?&Qse30S5k>8Ze%faoU%INC`Un\Ou,na-dTd>d5!Xb
%#,?:lG)9AAC4=F#q+U0\;/gG[NYZ9^BNj>_`9f$kiQ/D[]rlNsQV*NF2(e5V-Ud?rAP-%u$bJ9ZS-8]QWh`2BR-?i9P#f9a'_qhf
%I>A4l>6qKkXVCA2_h1:Ij._BFPLeY3(@-dH3(qS2+s^*]>)I:;`G-o#9SnL[Z)BQqO]BXj-=Y8`j"j7fO#oVV*_jgN%?#l5ToNYD
%EW]I(ecZjalsLaF":PG]T,E&glQjM-\nk"];P\t&6m%i`g1loB]C'IT0;>oBV#=e@N6Y.lJpq<R[G+W;RlT8).5f;eFgPQ'+\b"Z
%$R,C_9!T",[dY>Y'4jB";YI8u%2&nF]\:\6(j%+%hWJ!A%@57S`V9q1f.*%kcLqWUosV'j$ti"c'%>?+/:tHfeNf>^+`c^WC&.CQ
%I97ue,Y___@T'E'JkbJX&6O=c'W7r_%Yqmli1^e>TZudK]?V(0OA9,.='#Upf:/N5,"s3g]+#HZP1@*LQPDK\c;*I7=7=!^C<k(3
%M697rK[s"86#%BCQ-UT7f!P<8\+*l3/1K1cr/Z,_gfHDjNXAiuZ--&=DAZ*Vf<IXmdQi/L,QM*f9\,GjP(C\(G\/%8]5/i4cQQ.=
%e/QJtjqn\;<:Nq`/hn:,UJo.qb1YAWKpnuVLD<B0NBe/?YUgoW''Hein;QeY2+cORI%.GkN@e#R0e-3BSdCc?lb:D<*kd1HnB_09
%p15Mke+JO=<Rh*Xe46[`9?4qlAYJnjRmaC)K5(iXZn$9?H/K$gT/JNtB0Ukojb#/hJ!o'EWgUUAI-G8QIildUeOkg?LfLSbclPeZ
%"Lk-^9NtR[@m-bhANRVhaT7]MQZAh/e%$?iltVHq-Nj4@W?SBK$V/6bg]2dJErXWtM*"ji4LYVk)-3.!rNO#aAmJhRe7rAigurK9
%?<Er9Y^L)/2fo-pE\=UjD?5;f>^E\p"`EGhLQ;&(.8iaJ3?G-Vm@Yga\+nNl$IJU/C73>t5%E*>TQ,Q^!H@Gu*6W4@RT%+jH#,[2
%(X-G1lUC4].LR:0iGh(V;(\9;SVf2JV>YOV*IX_*BrZq/X8Co=R*Kk$s%.D5S>J*7ZP37dPRigZQ+<9tVT>6:]!Y]cpS,hASfF9&
%0i,sOm<dCB@(ie%$*k_*&5g[uN<h>.^D4\EQ>7+G;<LHZ$*I%OXZGOA)l%1m*ic&0iS\?<[m2pL^Yn1PeYD(#AWXDF"V3AcL*t)L
%B?@rJE"mIYnQ1\=?qT]6Zb8=h>UgfpP`#+Qd.h_I<!W"Efo2TB2L@TZP&8CpH2<-aD(LW`YWt<G/sd21<+jhk[W6:AM(rh4*Ri!O
%9kI2g*5sZ'=c`5ebaoh(!jZh>pTpt;7!-^h6\%0q%2-(O`LOCR5E9N2OihsV,*'o"6?IA.L$ZeGjp&Fdb_?+U6D_.m[OAM</]GB#
%<+E23U/"],Uqo#HOTRL1hl#LGkUSJkZNH1*R,tG?Zn\I=m9Xa<dAjUGJ6:&3`VuIV;i%pk^^,&DTLIUJn"Z/+=6,qq#aso2&fEuu
%dl&T/8mi8YRXCT=0q.UL"fYgI/JgtlWpK\TTM2BR-lQ@Pc##lIYVqCU>_Z^QZ^]+^7lSG(ASCn[M8td9A(H7IQ>W9SRtjM:dQpel
%:^:&P#])AGW'#eAcYHKY>-s;$f?^?[rep`Yd)NP-7b=Dd$;g'"TN<<&@e;9X>XCq]OE#MV03CrEga6R9r%W&<a7]-rV-14d/-WeZ
%J]->b$1c30&"<4VD2CoG3_s;Cia;ibc0]h5]M;Rm=m@KUnrkD:'!MALF)8Bbk_'+/&:GDV/X&pU)lFiogQ7`B+6f&1R)`@o;]P)0
%Q*g0E=`=o=j;+_!d+sRDme3R)]&p)*h79leNUN@5,Zor<T*D9-@cPd0nG2>&$'h-YSIh,ROWQN'kpW@"mH>OGiqgT@Jcnkj0]X$7
%7&o2fo]KSqd"k`e?'W@(]M7ujf46_$==`:N?iBK0b9U3N23op"1*!JMgJ9UBPg,lCcFI]PH0]ZE,"C.$ML86X$r</.jVfF,[DiW.
%;_XY+e"Irj(CU,34@X\>N7TQ?P5F.KhR`T0P!FCAE_O,.:Q!V1J\`*KSlRd>0<Uci047J&&i'oAbjuB%ZQ@2?q0RCuK3b&!)_oYb
%6kT*r;(F:?8`_&4DF%^0'#@A3]95o9D<9RD6/,R0\O\<N>#9%0eFi'6=b0hpc<?c-oC%O";e;]R<$4@]2&*/rHjAa7>AuljoNo;3
%e<`qHg"F%]p0*@rYN0`qq"-<eW75F3X4l@m%Hu3TNC\u(E(@@Si\j_-FOiD_M[<?9O%;,b"nBi9hb3R-N04l"muU^[VEr,o[3H?M
%I(/OT8U:UKdJQ(YeGKZgQ@<iB/]@J6@P8smT,'G^13M&^D*o^`p;416E.1uTHZmd_e7>in9=np'eNd7ZDHteh$b@oAkqQD`!-dbU
%k3SZ`65M=eeED(Egan_eYbLJ=Q/oJMa_Y7pQIYitYZ"5>oOR2JgeC/RNN4Y0YscJ[r<u%s4Kkj_=rP*?4KGLE9".P(jG@*B=TJ`F
%(/mZ!YdI7qE]'8P/_[a=X;L&HGR\%!]FO)`\!KX%a$G-eKCj9J3Co]^MEPnp1,hMIgkNrBDn&B'7*7p*Kus4cOb7G(3=*`jZa1N9
%Xc^F-mK6H)>KbMj><`,\caBTS1aC+p_teG7Re!qTj>`.):1"kDPs=JT<WB=V[_SL4<4*e%ijG7V&*hF]JNmB5kZKgL%G%sBgc=#W
%KN!^9_sHn4&S0':T.O-d@]B->cg&p_CRd8SB=bisWp.#s*0V(6U\CF14<fr?Vf.`MW$_10X1+;]_OP^edRHFL%)G[)n9AL\ACX-e
%Mm%K=l)KLG([^k6bo>3JS&1jeha1]I)G,C9koqrd;d:[DBlWl(2_YibA.=I)1^Xo0eb!P.Mi2j$Bf9LMEt7@)?ceO@CM0r5a.C=4
%Mb?j%hU\7^;Y#utQWXUnp7@MJkF9mb1\F1l(FBY>;Ub]qMfX$=+VRqJQIW5;e<h3`0q[/1/.r1X*OSq/ro5tJrmok=CTq`Z!CLs&
%>I(I#/rFYre@n_.]PtoVCOEa7=\hc0=Zn'j;BMa4h6?tVSP"L8Ik;`?>qDeC/us+u/94%Y3(pPr]1M>L$D6LWnV*okqYf7;k7:Y'
%:KP#4^NcGoQI>;AIeeoZhkL>Sq=WM0Im8;Y+.!d>Rfrc]S%I:=._l#Or:^'SbD3uJ%rX'B5((sh*oq6HSR5`2IJn,6s39)J%fO<$
%h=X9nl#?ZEpu:`/m@0.t6U*]G+<L<n8e6;q]dXQ,#F_?#TWuAo,XhOJ6;N"&h>)1T<-WL+(^HPU4*_3pC"OYXr:'@3mIo5IBh#l6
%k5>)1_j;/M=0Gt<?eSW@EUnsAMnATH_i)F1QePkR54fG?8*?j9HujH-r1lN)qaRG,4ALq6mHlh)HX;Q,)%$lmrk%cWDmqUqK%@ci
%h`O,Ws)Gb-]st\gU[`i\hf<l0mGXfN%khEG[-RI)YSU&^Am4c2m!-A:^X>1(s2tAjIoP*LI`akjhUf!+0D+.5T`;1mhgs#UIiJ%4
%&;%Xpq^B4)]6Caal>Q]l?r-[oITZNMQgGkOQbVL;O0.e6IHFn/#Q4qmDtrAQ>SQhtIaWrEJq!KQp\shMohOc=A"$kR_TAT<3ZQn3
%dROQ>%kXB6%VkG.$$O]P;qi=hVl)KQDk.r?fr+!ks8D+M=2`2e`H8Ukk.#,MQ&AjbOtT8&d%BSajJ)DJhdaNB=.Of&q=">-gIq)/
%eB6ZuC@*%c\*rSW/N>tP@H17Q5BN>Yk"r)KGMB=ro'-&;bK!uhihQPJp?p89r,7@?gh-J&^V9X2r9a1+^OLM'kkEiE&-$bkoB"NI
%rUlutZBk&G^^0sM1lG;pn*U$jmGA?CAt.uHkM,Ggr9BW`3./+3%/L)+k3Y=J07NYrqu$BgEa/Hp3ZL>5r<"DG_7tE'0mJ(l3.JNN
%]A;<erJEi=Q/6<R(Vfmek8-AT*IdKB^:AR$oLFC]=o<nJY0Sc8od<i3n57$(APH-lM/![IjE`'^n3SGi.Io]e$h!d#bg2;RB=TQn
%\mNb+VOl2?2:#i:BR8.;P%f09q#<.2hsd0G5A8o<>])2Nd4?dH+`7-5c]<LlqgUB9Nuu,V<msSSTQnn=a,N_uj]pV`GlFOT/S')h
%rW=tRo&fApQrt?u.\6Q2c6N@D%:R>*3_qMF10c1F6hXsVFMF&,p35YC7]0ti>EVrAUT,9W3"OO%JEJjbgg./:9s@H\A:gOoUn'k;
%G]eK8p>Y)sp'uOldP!S]M(>F)'A5J#oIb93QW[OS:3<2RI.ZnMR-!f)0"s>aH-RYJ7p]?JifKS2R46>QhRU<U:G[!CL2EY8f5o\Q
%jD54cDEATZiO=juH%c!`UP@L`Q_fBa'=.;BSb.tu0.u/#)dC?DW3l>?@.Pi_m,:B@%t4!Ap%QKGX3N4kY9p]6_nP[H5C`QLfq:e4
%\LGeYd'7JlN*eh4]r``4S&XLNr`^.#FtC)87NQcBaLJ<Eb@9&1Vi1!CH[?6\fNF.Zc*FONBhG45@4so+]Y/aK`1M;/<474+Gn6.2
%;ql"3Hhq)&YHREo*%PbPj"RoTnRgc83XhT$0&Jj!*e*^"Go?'YR5T>&4i(Nqp,8&ko'+'RG!0_u_W0[:%G@04gh.;Ho1*U=/DJJ2
%Kg1NQ8t48F=QWIf#8nfOqH[sol2m7fH%1,=E3ig[_5qYtBNhbgUbT4C#j)B4H(quB^P[\%4t202J%N>,rdI)6m?_lAPBig-f!I*>
%_heoM[*!D6T+JIiR7:m=.fYa4?(UL&/qZi..auI#@lpULKI8._<*Z$U"'X!#,mnU0V[7&WQfki5:TiTpilN^)r9uGG%("HaSb"7:
%1lns:\1lCK.l"5lI4H93o$)?b5<PIn*c\=:!B1[QFl;PpS\'r3MD1e.ZAB^cLqg\$k'YKlO]-J^lC!'4.TIk+$kHuP?[q[Sj$gYZ
%A5=dg?Mhs*$a7&5nTi@6/R^a>j9$K2l=m!m4)j_\bk!DK3W6>JpY1tCk?H"obX5;PVale$p%+?#h;eBfo@q$Ohr7pGW*?p!(Z$d9
%g>t>3?XQu3nbhJ,C/_dk2gK1c'DL+_C6iRu)j/uI?aa+uME&HK?`rfT!A*q/\[c:SFZ^fuH2kE-6^colZ\OHWY2Y\<a<AT:fhuSb
%F&R1cC`DQLauqCjf%\6)j104.A<R_JK1K_VocPI1_2MU,G3FE?q3j^p:HgLqc3=NC6(e&8Rj45S0@&H[D3EK]iG?gsoDJ1Do()YH
%lMKnJ>;AmeMr/Ds_^a6S(RkR,HFlQ$`U3F,@CX.D5<O=Cq"!2.5AW=#J,To0rVPQf*NpH3o5OBbE-HZ%J%d"ck(t0.5^`'jlatd3
%f*@WcjFm;of^Ab$H-p"\,oRUBPn&iLn"kd5]^bB/^%@B<mY$.8?Gat5Q2@Q\.b_N#a5&JiY]J&/JNe8m^#st(beK4E^CEI-,W&6I
%-\%M,I^\L!NCJAucH;4jBadObr8j:&hn6\8-<C/5d5PZal6uk,oWR^9hVMMo55k?UBfd44iD1O5JIDbTY?)O9q4;MOPmNoqG519Z
%bO*Q&nG21`j8J*5fABl^%fFclF>NsG?_4]]5:#j<Z\-RV^M:fd_ag?Sh/+D$LE+%>-H5<Eo&4Q&ad8>)hd%;k^:Sd&Vr."=N[O8O
%5&H)2j^HWl2eC?*D_q4Vp8_kG3r"d6o()&4rSd,@p?T3N?XFj<^UnuBhdN,eTA)4%E;>iu_`r!2oDJ:3p!qOcn!M><p!s$"if<@Z
%IlTW-DuB%SB!a14GhB+_@?\]<hjm!E3J]gJ*PRiq.'IZ]a)ZLqpqm;#d"05)7i:s,mBt"3o7tNDMsiTRgYr!Rp".B3J+,MUfF.WN
%p?pqpm>Z&En)DkLrnWG"mmoh@ir!fNbu]C+6csST52KS[V*@/irp#WRd)528bM+u1idK]c(I)jWR^mh>p?DSDe%95`:B%Hm0R:F"
%%:_X!j6t9BJ+r*r`9-pHiIeo#>i0E$?>Sq?PO76kq>1'Rj6\8EEIT&g57n6]gOu`q2\3VrD=-"`e,MOYIr@"+KE(-.nPA&55<Sr1
%_o"uOD@!^Y[q!07O#P73nT\Lc)00kicK;D1fDjaCWn1=b4js5?WU5sga56:\S\3#/_Vm`@,6%*sp@dqJeC9s0HG(=nF:Pt(O0kTF
%jeDOr^PMO[Mg3!TI<E7ET's'ChWO5(Du]TS-sXE5I(Hrc)]fAOMdQ:tNkU#@meqV]NVu-nrGT88s7,WL`$:F1[tEiA=6e[QheWu&
%\]s=;XKDEqeXq?jfDEm&Rlk"a?2U=9N2O((J?DN,Va((UIIa#PZ(7i7?cqCjJ(FA_os;C4\brNs4lrZ'kdu;q2j\%WGcr3%6[r.O
%Ye9QDrqYj(dl6ag"*N\Nj7esbII_Tq^3eR%.^I3Ep2K]tea7_^`8cW%2Gs]#QXAU_ICQfbKYf-e*b**3g\i\cEHCqtraqA'IY,\k
%s7Bk$DmT/Mf:%?>9ZgeABaenjCuK[0h;uW)h8A4Eq=XRN7F.:MZQ)/7rl%[1URSSq^gCDSs0qTt?f,.Zh-HOXPEu-f"8^3s7rL2t
%I/**4S$Db_Iir0\T^=%&l+32`]V07.rp?V%YHQ36q(J'FO4uM#^U5HgN=>#hDnrmUn*kSJ%/Qs<#e"n?*C/kE=&ok+kP*`(a/b]=
%fB6O!9.-iLVd<uDF6h*LeOpo>.qsA"@1Rg9I<B*!ID!=Ag5ij+J,E>]dqWOlrV7DZn3?p>iT%CCGA[]qab8*?m"a44H?F]6h>-)t
%1$hu[p#>Duc/kG?D``@=qn&d"mr?T(n`E'NqTJ!nkEc]d?!_W>>_eNVk)\M@rTN8'V&@E/DSH-/hT+$bLGoa)0=O*PXfj\R.ch*[
%NO,bW\@83maM6NF]XYTPmdf<Cp'mKsHUAkrNf:)'q"q75^3t9Jrp]=8h,dss]\]fYR)+X,gFp-c6_b_gZ?VGh:NuP'LXjdc0faW(
%Faa)0S)BG'k?hS&h0sM@DP$lJp\O.>#rs&&p#=rT9CdI8TARC?XaTFcJ8O*?h;_LN;Lb:q2p_DdMsCWFWjKU6qu/G%SMRIgIK'-p
%i\TQdq89OD@n#9pf_XjO*t(nM4uRLCYlqg*>(YRu5/,gt5hZ8-=T;aa5.u>bIK/feh(?@=G:blgT&+r-`%lb%_*;lH[/6p(d2jDA
%f#CToi[O#.0#+.('ZK!o]\E&A4apc0o"*#"f(m56G/Tuej#b`2D5R'bgcbT.R:4i^IJNa)l/qpCB_D#KAG^i55$i+Sr[7?Ac`O![
%acWWC"*b7B9k\b>/D53qod/K4E*rA%o_<N&?\Nap?M.%Ck=`^8h!Otp^45`lVY>"H2S&5o\=O`m#B-j6T5+,p%kmsq^$3S\B3.6W
%qdr'qqlSa\5$iYcql[n*,P`A9^#NksJ`i*"MKXk]GO0+q>\$nErJeJgU8sdNc>!!")P8)jLIj,e@,#M*GO^+56*^ra&,P)4f`p\U
%ZCcRa(6=ee:C_0A%3KC*C-.j?*+",Eq";PTGI.nW\+KCTD'K.T>'fQZGA?)B[\r]d;+.23$ifS%T_6]-X*Z5C*dae5nF6+ok9mEb
%9_M$U<Ck"K2[/En\\3(BGL'!U8)7NZI/hDOO[0emO3bPgD:$b^FbC6p]Rq7S0]u_opdBV0Gk5lus3/,E?>.)KGL5C)fDaO%rcN4/
%q;(0*F*m.k]<k+mGlH:)^&7_s6?D"+2f7a5m5kMX-b@1?)a0k#-TC#LS+AS*&!rs8Fbf>eYhTn@2jpgKn4uW4gGT#D,'.sXEVHUJ
%O3bK?*qAC[q^LL9#N)ea73d/+Hh$I]^n]1nDd=f@B%T2+i_9]6Fo&qT]CVrff_kBJhgFta<"K$#KAV.Rfcc@@S6q6T3"Ek(5<h7V
%UQ@<nG@^1!gBNeIETOX"?[;,UjbJ8#,7e0!BgRffU&Xc\Q^!HuL*XOOq<]+152(p29iR3<G"/@$O!!F;%eG"eA)lP.hnIE8m2Yr$
%pR!-C[eL`F<.+<k@aY$_^Yg8_MLNf#$9W[3JS/=HJS4F0%5H^\k+ICiT\I'ac9#:eEk!'fU:nZ'k@`q#r'NYHUYM213$5jT)>DqP
%GopN5nT`)MD?2tK/g-:+B7K3aWF:8^o1@Yaq]i1d)2V*]%VD-``/Lml4"is1]tUpfhCY(Up#CH[5CRs%s*FQ1ce/Y=gr"<O4Zm'-
%E=nN2S*W3rP.Gc7FP/fdrqkO;hqig)LBl%BE^@.+9*Xe$>edp7^HZ?&jnX+e^Y?]]X).rd]R.'$l?l8rLu$&9rW>UeP4A74&2eiY
%rr(r2Ut9&uJ$.O/>n3Cc8/3t9_qAg#ESO#*dYEUa>@(FdKR2M7J,\i=[tQ0(s0RcO(H;8+)nu:$LG@1@;6g0;`-b3Vq=rh<Nt^+c
%UPSY:%7nQO3`:B@9]*':d:2np,o91ePaph/cS1q[X\n2_fpdu$c=a&G!H$ggO,9nY_rE,c^u6fCr^dir((O)Ha0]edf<U>CkD$-4
%RQ1s.D1BOX4,K+(7aF/kQ5ekKVsTgI7Du0E(#q?V05%:T+4RWO3bN.2En53n;h;hf`$A3\]"%tqFeWu]h/K#2lep-f[Xa')A_1Ju
%=;!K\gC4B;YQbScl4/nj;iSu3"'c5qBC1EU'j1cs5'7*$D<n,eIg`cf;Id';$nAOm%XmUPE1r:9FUpH1A`p?<%THsZ*;\/*i'_]4
%Qa-^`P4WU/!J?92K0u9B"/O13otjouW\.%(`EL'M,4"16VsXPq!S/;fg0O(8Jr6(h6'o)KUWkQqWJ/OMFt7jI-%^r#j7tmHL!/d5
%<O#af>)H9FZ,I)#YQbScl4.c;8DI4I"e6rS)Unfm'j1cs5'7+OXXNc.ONFjDQi6X\.^BNoIHh<(.cP=BAHtb!OV.t(^n;n;i6\C1
%J1HtnhQP:kcEDNGD'5JQCZ*R;mJuM3Y5;;3ddie!M\N,23]Qc24$`YPPekrQddie!GYUZHnU-t?K;25S%_HLcV8Y.u]AZ"Df"n%U
%h#Ys%?.Rga>\S1SL"@(oW5q"ZoVjpf7'4GKh5S).1UM/:A:f]?K0u9B"5FA/DWTRP/p)\BQ-X&%:m#m>kYk^$Kj&rLlY_\7,XnM?
%\"nQ^XFWa2\c\ba6=OX:\8('s(,2].3]Qc24$_LO;qYIL$gfmQF5$a#'j1cs5'7*$qdnL='anlg@D>EcMQDFtT=P-#rBeIY>!Ue]
%6eX2^TH`^[d&6:3BtmJrE!o2W8uOUb$Q)iR*?=q**?aa9EHfb\e;gR^]/:$sjQm;d`#Tb5Q>t\3d@!VF;m2j+3)G`YE9L5)^mY)f
%e3.35L;7pj*2pXk3:s1%+;LMSW"q]%aN_Pf]uC.R?k"+Pe=Fl!b1+Ltpiecf&mH)fiq?T'?*$PTa'8KnYWreY_5O[D>>W4``!-TK
%.)601%'W!&F1/#uonY2#kSA[`apDI,*YW?U2<b]W//Po!.\q6<!WbNqL="eN[6PmT#?"+Z0c!1Si!JChO4YRd\fb`*>9pdg<[=7o
%`*`t6GDRnPM"Q95H3%E)$5%)?/*IRLXH;WH.oZSc!pq/`JjRg/[TF]s"'0(;J-CftYQ\=*7r5FsNX)X^"98gOL0tC(5`aQ,dE.o"
%]<t[CEH?$l"qZ?&4PhAB==YE7R1*M[7An%^`3Y18CuOn:Z,I(#"L(5%!A%'"Jh:Xo4^s<a=p\Sj=p%m"!<l\(C3mf6.o[.sEg6j%
%6MCe`T[37d/Q1dVJ/$-75_7c*CdF?N&R2>56NAY/(r-3<-eO"ddj);'Tn*2EW%``*g.njU"f=e+YsS6l/C7^40If-"(3GlaZ,$LT
%"0b+3!A)T;S1U`m4^s<a.L0@8c2q+@h?7'0=F.n$/$oc$$?ZNV5dLd*TWIdA/QO8<J/+L[@"D2hCdCk]&R2?`0`W_g'Yjcu-J3p-
%dNc2&Tj@_"kU1laW_BW#mA*6gZ!=a<W)-1g$FH2Y)Oa6QecLP'&P/R[`*cPPJh-%14^s$Iq?12[63:8^]/X"o7s`)hM`(Y0P&@Kp
%(F`"h#_<7tj7+b,`CeYM]Bjt_I2H_Zd9m+ifZ)rW@Z*Z\f'D,j/oEn^cL&Q##]/Pk0!W6e*ihXKg<DM&Vcedu_#lFE_W+p2X*'+S
%QFLkd:;^#i=f_7U<:0<KS*Nt)6*#25)Q6am(mVAaM`On*g7j9?$.-O""_^1i^@?TCg7j9r#&'^Y!?*A9^__+(0""+U#83\`#7Ah0
%Lj\7Y5.*femh)4Hq[(W$Lj\7Y5.*h#SJ/e*@0J>]D1QQ&X?C##'j>6XL!CTH6+7#pTX/g@%2NWJJ/([,J:W"cHr4\H;HpNT3rpq_
%<^6`j(\iU=g825kTm6]C.'A().PC2oc*^2]d6dR1Zqt$/%?t,U$bC,?g7lt(?IIQ%dF+djE=H(_O`*A>Vm^94Ig-giY;$k/?/Q+e
%CR<bJJHcHpTtg^JW4Ke]2:sOh711+McpEEi1f/@H0BfWGC5Wj2.%l8,$YZ4$!aj;`]@7TJ1f6MZ4Vkh"hZ^0Ua*+F6<bS4X'oFPm
%J]\@J6'L\6>I;aG!A.8R5Qdi!pjt-QV7('2N<393Z[`6p0CT-^[S(Jb66?Xn:hO8l._`\7o[tk)5m*)\cpFE01f/UQ05@k"C5Wig
%.A2Ae$YZ42!aj;g]@7TJZr0-sV&%ECr<9p.eTRoD>3Mf5(2>FoJH?7-6*KZR>I;aN!A,!i5Q_`<pk!,4V7('2RfZcl[X\QS0^o8%
%[S(Jb>X&Cr:i6:Be6lZ'l>;U76A9k,=J4Nj?rVf1/a0ZLC4c^/.\MKI$YZ1?#@Gu"]@7UU?LP*3''?!<FrRe2,2[XZ:MnKG9*M\!
%EWHX!@GhMsDO9(MJMt!NlS<?^[oF'#HIbun&,<SUcWUg,C2di$2ZNt,%>H)b=<iSb[06sj$NWUj6U7:GCZ*R;[Xb&b+^h6`#RFC;
%%355o(,0h^":T,V!J(TZJO?'`!kQ7&GbM>b*`.E/0^'-R[*Z>`/sJ72%7K+^chFCJ*2l./(Q&pd!B!t(LH`*L$r%!.6^L,)TE8oe
%d&4=&iGq<$E7lBW:k:KCkYk^$d"`/d1b&V2.^0*eI;0-,.M2Z4;?at#$ESeGT@s9s<eQ!s=!8\_K/I]5;d7%6N"@[B.g,u)YQbSc
%C'tli&H[]1Kn)Dlf"dtTD#m!i69s/,&2/jT(nU1p>I`%A&2&&U_uhKn"qH&r$Q)JK!f!.tJ3X:h^nFP@!CKXL^sKG"&?*A_3:s1%
%@&QZt#g*nk7k1_I%Xi'o#hfmmL;&@l5Rl;cThfM+6X`<s:q7,KW5'<2oVjEMkY)7!=r.5A'j(Qn5.(P&[0Zk$nNoL6!c-`@Vm_,L
%3?_eo?3gg9?k"+Pe.sa&-NjkN$NYecXFWa2g&ehiKm9;B+WaI2F"lej>I75#!"P5I(lhSR$lo,n"q\-i":RF%!J)/jO[Gbp!eq'p
%!Q,(tJ3X:h^nFP@!GSm9r=Y[1m5C8M%gZ-B%355o(6CGt:j**.]PY-JbAN.\'j(Qn5.(QibqeY2dHs&B3TbTG)QCM4(j(TDRd5iR
%qo$rCk=,VtiY`AEVQQF&'E.GR&K\t`<5e@#;]HcFAF#;#M(P$oU^`XSZji<7JSdO+-18!2)f;fQSSbU$Li!%[/ocYXMJ.WRRV[W<
%6tGVEGDSC4dm4p(;dp[s-R)cE]M%$gW<1d=RJto*3>&gUdllCpaE13G1>N\c3XpB2_d-`0Pf\>KaiFo(M*?3$#6tjn`oC@a%a2MM
%%@4Od)_<?\>CX:YggQU+h-cX/hI&>Ug%s`7iXX0(kQ]3EnHR0naOVI%&pII?VeiT]dFhnf&_[$@?/c@;eFa$ho_f!;M9+6imh0hH
%VPuLVVWp*B:.2PiGaI&l\I+6sXom_B+9L;B]M%$gRJ,?BRJPZG3>'s@j'CXSb>d't93'jRb%SlG+79bc8>`^O8>c#;:ejEercjd>
%__QAB_(pGJ_/^a*ouF\_*L:E>%@4!)%@.ZiXZtYgm]]AV74d&2EGuJOXZtYg[TK])2HZj72HW]W[deU/\AL)P[)"NR[_Zu.ZLu8M
%`#Y.XV%&`i[1/E8Of^k)-18!2+`4GWUM[6*Li!%[/ocYX\nH_-b%u^l6tGVEGDSC4;aVKTdpj=J-R)cE]M%$gR8/Q?Y#OE=+<k$>
%]M!(G>TIXb9V6.*S-WrknLj?rd]b=Q12[nUUGNgm;&[SNF].L"5Ni^<nO@4X/CtCD.l<)j$i3/M\AN=f+0f'85ci<XJ8OKT4lQsp
%"an7/r;a)hP5r%b+7t@N//RdfbOktU$;CTSL47Jom]]C'7jut"&1TLCi9CY9LUI;*&Kd*>6%H568-$u_%sl/0.0P#dEr?!36B_\`
%THEf^4"M3;&^0hL`!T3?fS4k%,OVd@^dfs-%hL6J$"+_K6'&OnEWI8e>X(KTcm4-YkQa91%a,$'`,beVYsOWS[\4f8Lc[.(n.Ek:
%"2kO@!n`6Vcm.t_>eii\f+/EC1^RP/qE^1P__TOZ@_$7c#6tjoqVtjjMrd^I#0XZ2%@.ZYD*6Z$m]]r95qLW7&1]R_?lODfO1<)J
%`<EMOmm4&%OFV334[%d7b>f@s1;sKl>X8FgU%e284![m4&BXSdKF/.pfS883,OVd@EBu/-HOq\a,[_R;:QN$'ElA3e>jjt[d#`cp
%kWM)g%a,S'^^@a[#(qX5Cd[[U&R2>5>S,*O*lJBp.G07/dj+:b>]E%\f6\&Z1aHHJH;BU3_fE^"Z!?``XO*&ZD<O,GiXX.cDSQUI
%*<q.<%r=UFmh&d*&@rIsATl!!ks!aObhaT4A>lT[mcsM`Vj,p[H;6Ri@NN!ST1*/Ya1F`a]Fj3:b@Pk8$L&VaL<SL!m]]s[7P'nZ
%&M'Z(?lLkJO1<)JTc:7AAk/qamX]5rloj><bCsiPEg[rQ6FmE1+g^p!4"M&W&^"[.KF6rb\@U&DU$[A8lin^Og0ne'pV8Rqp)^J-
%$DAE$>\6L)OR@`QaQu(L%a0QD`,_7dYsQ#,[NW!OLc[.(\e3+sG/OaP*nZ4khBVHm>j+X.Qe;s$UjHJg14,(l_fDFiZ!:m2XH;k$
%D92',iXX.cDT$R`*O.rB#IYe^pP:m^(V14%ATl!!koSK3bhaT4Y[$ArXH;+D0M(rR2IuM&Z,I'D)mNX[8$%g?K.Y124lQspKl4hL
%R2rP!\d,YeZhK8;//Pl0b@Pk8$L&VaL<SL!m]]s_7P#5,&^#fS?lCeIO17PtTc9,!Ak/e]mX]5rloj><bCsiPEg[rQ6FmE1+g^p!
%4"M2Z&^+a/`!Y`MfS7W,,OVd@kQ\,MfjQR*pV8[tp)^KX$DAED>\6L-OR@`QaQu(L%a0QD`,_7dYsQ#,[NW!OLb2Y\VJHW_P7cM^
%(T!Z[[(7u\V&!8tga2gGNS-@C_E],/JHe6si@Y^n63IK8(SCdWBYb?'mLgH]QP0D@V+^jr)Xr]@]>OopKgYo]&JK\H#!Cr)0!PF4
%)%ggm^''t!!D@pN7r(q+5R\Kr/n8FRJ71Ro,pH%(L&g7s-/\nXGf%@(@KY\C+TT&T#s^cYT(-cdfDrH]#XC"@!`76oB0=rq2F&l-
%!g!eS!#.9J)%UqJ%?Sbc!9DQR!!NgV`ku(k"6@<A!4aKa5X>LDnSjiI!4a?\5V>P.:sa`*4PV5@5V<6F:^E1<'PP9<*psXQ-tGRC
%EX<A/JegK-i@_A9EWH`%>^Q[ITE3A`\4^Xg>l"OFQQ6)TBYZDFmLgH](]FEU,Y,Xi&o`e"]>OonjZ\37W=a*$#!Cr)0!PFtTauZY
%A-AQu!RH##95K,`iWC<i(BGpt^b[&"&fVr0pAuar`>Aq=i#*&LM$Og$*WWaH#XCZ`T($]cfDrIT#='mg!`76oB0=rq2?KGmGuVq1
%438D_;/)$N8;2T'5IEgeQP`LWi_KQ.W"VON#!Cr)0!PR8E<U;de,^Pe+\R0j7r(t,>R;76F^h/1OJ+nm,rRG#X8n3;3e66Ii#*&L
%M(Oes.feY)%KJKuH2>Ea@LM86$37W8"$fUKT)N\qfE/Uf!^JC'!0GZkVa&r_[QlIH!0E+"!9>utkmqup/W^>j!9Bja!'(L6qSQTJ
%$fo/3!4f$15Ya\<rc"4V!kGNJ5U#F2d%DOXJ%/-fJ3m?=+;]/#aD&FG*psYF+;\&Ya@.*LEZ4N@LV(J?aFt?/E`!'lS;'0)i@_A=
%EcD859\'4a,9]R,ZqG4D>Z_"D(Nf_uBunaFmLi_H(KLOW73)AK)Y3NU]>PK+KbXT.;$VWAL-5Fn0!PS#@3pFje;9kb6_=9rQe2:l
%YQ@'Bl2ZppJ7h"",rS"36W!Ht+h&1SSCkn/<4m8*<=7t(iGk(u!%NX((^j50E"2')6e_Y;'b<hf+McWk,CjFJ#<cOS'R)Y`\VPc4
%+\MrB&.s6,*L:((LuhM9@YHcBCdUhY&U.?+dj(.d$A]E0"gAG%Th!mHq.5Uh/h8&F#Sk-5A;)(ELZS7n@_'"!=<U`GgCP0I`#Y.N
%q2",F"(Hst!Gk,4kRi#@Id85E$Oqn,dKQiaTqP!3@JRkQ=<TW=?k>#BD9*/L@Z(tF5@V1eJ63t)"BuEXHGghi?iPrDdK<s4QiV"j
%HKYrb==sUsQ4"7['p8d*%0<1nggR`1J64-d+I(%f^bfSX*cZtrEW@;o(kGL,DZJN',C79KQAYg#jcTaUKua:26^$XFG??I,+I3BK
%L_WemYRP$88).O`5QFn0:V^?L4Fh:i'0Tf_'f#f!\O_9R+aX>r&1MqD(+Y%>.Ub7%l<-3R&N$Ehg,,.e9[P*%j!\R@<6,b-(8R#L
%)F?lJ[KCQT!0CHaJ?^8F!7-`UHGgRJKE=P^R0''Kq?XMP;tPl-//JX)b@M%!$L%ZFL.ou>m]]qE5V/6N&1aOe?lLjiO1<)JT`D?&
%VEh5E5(ILk'KtFcbCp#9Eg[!66M^\j+]J#h4"M0T&BeVl`!Y`2fS3)I,OVd@-pT>M.1e#*%q$>37?=srEhNK;6Df:L+FO7EO=>Lo
%(+Y%>`,_7IYsS9m[NJN@Lc[.($4tBl$H*;9"5&?%d3J(`>UVigQRNIrU^piP1.@86_fE!^YtV)]-l5'tBuguOiXX(a!^q's!hhsW
%!4F%LoS>R[(CC_sAI??_kl]Rm9[P*QYZrSA/=.ds/#3\`)_sjC\AN?\!3eeeJAE@V!8ESaHGgRLKEB)4R0'W[q?XMP;tPkn/q9m"
%1CUmc4sMtP5F&dIL,SD-98eRpb9)iDU5-!>".o%%Qe3G"7?'iecQcC#K.T4B-+6p);'VCao8",L?lP/NM(P$#e;35\4CSI+fZ)rW
%@Z0=a2.HAEO'"[N[deU/fOFYFNECYU,?>A,D*6Z$[TIuU,F76YL_W<c)io3"/XBbnLun@n@Kd@r`oC?6Mrba4@)Y8>K7O;Ej7+b,
%_2=-hZ2C1`X<7^OGe?[cZ2C=c/AL?[.u:u!*q'_G/AJ+qbO9_p$6l^6a1K8*bHG[!ZATctS-D[Ii@_B(nr"EKr16EW+9L;B]M!(G
%r1ZY3^ZQ1ZLqknimh/hU^Shafms2hY,-['I]>PK.05A:[HQE@n&_P+`?"/.V>4_g(K;r]+O6OS=,Z7p';)<CnnLbCpLWdG`Z?s<:
%E[#P3VgGckOBpCmA/@ChFW0iCLV(J?aY2o`amSs/b)*nl*q'_c=E[P#=E`"L=AD8mrcjd>_m533_6SF%_/^a*ouF\_*L:!\%@5iA
%%@.ZiXZtYgm]c&PDQrK!Dm5afD#NlVEJJ*AFb=9"I"UNKAF#;#M*!9#W#I;"k8Ps",$TQ09AEt/7?(Ducf<q+,$TQ095Lm2U2I4%
%So:j'#]/Pk/ocYX(Nk@ApO%VT6tGVEGDSC4];QZ"]B:+a-R)cE]M%$gfi?j9ksaJp)%E#1_d273aY)i_amSs/b)+3j+7Bhd=E[P#
%=E`"L=AD8mrcjd>_m533_6SF%_/^a*ouF\_*L:!\Lun@n%Ls\gouF\_h*#IDc^Y\IVogs(j\.c+%#L2V5&/B"4l)mL_d>^PF+\!@
%dg_HRJZD#kU[=-omA*%RXHa"3M87Z6ma62K0'4:>91apRnl0Q;+fRi`+dn^M5V=9):e4O$e7GFcdLO9N*5HP+$-%]J'eD^;lHi_)
%&9&3$jWam88]nSqGgrGSOBfFa,aXN&.HIGc)T#@,[R5)o#*E.K6DT^;Jnp03*SM"F72nX8aU""qL'k(,(j0LR,St8.alO^7$4/2l
%L02s!m>tSS5pVeS&1Q\<i#4pZLUKQjTa$Wa-:4MiSq:a66ljtka[I+5$Af#mKBs:W6Qk[@>,2^C&BX#W6jh&X\UlfjU$[qHS3\Ee
%L(GfpVViB0:kuJHEa]07>S]Z%OICc:LdE-9%`sDB6o%UFJQu^mSfnA^BKI1MA.ZfC+9W%..Cb*Le=l8k>`:roQ\#btjJCcQ6;WHG
%6ZO=SO^&)WUl^moCPY4rg()4n(dJE7#R5p_'O4!*lHi][G?m$rk4r\PS/>MkkoQrqnd#PfRVELWTqjIi;$QZkGprZ*Qfns0"e!>\
%ib?Lh0M':3+70[Q`Ogs/MDZU`'INq!GdL+[:b6l0:b;2U:n31IrR!7&6#e&+:gEu/P`V)[@E?2H@Y<YACnS<))^ljS"2g4KHc---
%L"AS0\Mm@a=(,aj.nc(4eTjgd+7@&[+ShtMZ8-2$`^iX%JcQ/';!Xr488d0s)\E%@LocKIfCPM\`MEHY<Q8A<OVt\SmQ#FFNtLU4
%Rp`M"\D!\&CQ#eZ!o8,8/=':?/Q(E5`4["5._L<IKds,C._@aePo+6'\d?gDZ>,/@XsNMR%ReW;YZOk(D,J?]`Ea=3m^NQ=Mb:!$
%lF443#:%Uo2Sij"6+'/;eeWI;"M3>7==br"[]%g3ir4j$pY#b.7E*alF]r#)I1b[<Rp`M"PhMiqCQ!Nm!o7K&//Asu=kmS2+?D.W
%h.77q`F[O7oiPGRG9)J\Rp`M"Lt\R5CQ#eW!o78u//FLI>L["sER.(HqeLf&U'bYY.^,/:iZc\(28S9Kq6WN&eIqU\"M2&h==bqn
%[]$OdibjZ>GLcnT7A\HKoi55OCD#dERUED!E6@1CWWUX_&a6Bd@&\K&J[5lGq68Gm"\Z+j^E7m[Dm_rEki&@A_W<,$K)lSMi=Qil
%$R&g@PB7['(;hAu0%E;"e10]<7')/6=C!D3FK&KmAVaG!O0H2p&a<32Urs=S*Zea4W@62kSk57l@Qcijl;Co`95TkF6c=:qK[mJF
%,?=$!<#Hl[UD'[PPt.3@4`RP@1-IV6@WI$q8c=i&6cWY\K[ln;8XEU/?&"1.n-H'fAWeZg;7[/JlerFVQRX:eC8>qh,1aXVX=b5\
%]$sC;1.84!7p'&sQZT3tdUe5:&!*s+<&3]98#=B?YoXrpFfB,mjedof!>4YV&Jg]@-XH#<F;[+T_]u68eP<^*>3Re1XG9;J>q2Ig
%WOpSiLfb1KYe!e#kungf.PZU&E.lc;,"e&F/6.F\p$`6f96HIO[9:'L&aSBf<gQE-?0\e=)'[YL,HSj\KlPtSk9"Ci-$6t$6KbPi
%?gmYha"kU&;F9>_ho*?cN7ID'X363Z0(hrM";0tY&N5s_,@0T(F9s^'_]rtM'h5da2sCrcXG06t>Uk\SWGg32aB/n4Ydm^Mku-E7
%99?Cs*as,h0[cf38XCQ02*Ab<>*Y4"ohDFhRCYj8ejQNs0WB$N=>=E&E.ld&_FTme-<5YRp$`6V98/K\ohE"#)6;^.2O=aq?0[o$
%#r5Q!,A\tI7_7).kn7O.L.Bm$.ZAJKDpfrQ=:L=q\PsF1;W"9COKf]F@<8D%d\XZLQQTcq4Mp5Y@>)gP'*fI3<l6/`/f.!ge2QV)
%7')/6fN]nbFK'3,--00tO0H/o)!OrUUe?fS)BN=.WA;o0$7Ai30iWcMCaKldRaa9q&nJ(u8(_&rN-)%;dNut:%?Ia(<#FjthkWo,
%Yo4ZlF(p+</oRrQ?phqKG_E2PWgq?rp-,3CiE`Z%hYFhnf?9q3gB97D'OJ<)D/h750OijT'<EgQ;nCIql#I/T/@o\Mc)#GQQb"bS
%DS_-O[nX*;<)2[U\#%8"(pWM;#r\-m.:)5IFL_Q"f%i7#k#+499APmd[p[.cgEtQX.]7BfgX>1!N*(;Y"Ij2W;l\>aWH&A9Wlf0d
%9r*(BPKGJ;FU:O7]5</MjDmkV\h-p"_2^sn9sD0-:?bZcV9:G-Z0o%,2ODQ8?0\k?\HO5/h)<+3;E:RHh3K\&@)TY2-J2QQVf\om
%dcD7'=EiL&RnMk-/p1C0gk$.(DOY$TWLVD5DG-=#0OijT'5T:d;n1V"EA1QM@bkl7X=fi<]$tT]EXR%A\o!&DV/f1p\h.3*_2*6C
%9sD0-:?bZcV9:G-Z0o%,2OE\X?)uaYV%S_`GM<7i8`c0`F^(m$Je@<dRp^<:SC46O9:&j:@bkl7CbCuO]$tT]EXP@<]5</%(of:8
%s4FgS';Z)&&j!e6j77T*^6p*uQP'Xlq^)eB1I\DBAqJRp_FU$i-=(MdN^_i!Ydm^Mku-E7bKUa+m[FM@QO4sClC2n+R3L411Vr3O
%@AHPEP:edm`4Bk6fN]nbFK'3,j^sBPpWWi198/K\ohE$Q9G-U)R:(*<b".fo-<4r\86+UWXGKmo@8c(&YqDopFPfcrRTp\D;W":m
%c.'#^RgD!>$6rjARrl3/,1_/u_<+X(Ue?-"/iQ_I\o/qJ>Uk\SWGg5HAr9^bbljM/Kon"\9tK+R&aR0!?ur;$d\XZLQ^]F5h)?!`
%/epjee2QW41I\DBAqJ:(_?cM*-4WL$7BHAuK%8u"8=00"?#HO"7GgeC\PsF1;W":nbnRGNRgD!>$6rjARrl3/,1_/u_<+X,Uh^]?
%W`2Y(lFrZo1T<(VUqTEcRjhh&2\U!['h5da2sG?=7BHAuK$C./8=00"?#HNqFl,ls'gi_UH-=mq^\iR`WM&ieC+f8Wk8&OJ27bV@
%Mqg1<-l=^&3'rL-'d6K&KZMB*(`ZrrW@($.Q3iZk1-IV6,#V!c8/2d^1LtfNKLM\k#a+s06tXO4i!>63oai=498LfRl+mrIOh)](
%C6fF!+k)&g/>?,RiDH_1`se(KRolqo(L!S3kp)0!kb/Sdj%9T:$7.fHcG\WHMb&7-,.1!ub`M)*&JgMO+@N5m&=F]jK-Mok2*m&J
%,9\g0V?]Un7&keLWC0'`L.i,<Y_^d0+]<rGa:+IX*+9GY!(*LX#a#u[4ZL;&;Z!fAh9h"0+k)&gUr_'s+r*V(baaO+&JgLT+%0k'
%&=F]jK-MokPs1"')'Lb&V?]Un7-].2Xhk@)&/%,__P0o`K19Da*]%>QE.gZUXp:)X,"-%ao\^!JcW^#-S9"APk<=]EDP,fJFD64,
%0gcC^S$PQ&bm,.A:dZJ'7E#Y#e_4CC6D0*'==gLq_6PO0/4'cpcj5P@<A%BS?\:e'JJoG8Z)kYCb:7;3#Vf.C,:o-\[U<64%2L)k
%C1r:>ZC2O[X/<]W`'=ckYZO(X$^0&f+;&)>)OX])XHmG<C1oe+KP;>A+WW%7E3+3eM%B_O1r<^)m0].Zc!V,mTS>p</?;sjZ?dB>
%64DAj#`E9e.Tf_#K11TI)B*%hXAT5FC1OOS0i14^/=+hb?s.U\(*NlsBS=@1l4beMMnpUU5Ri^W=B:co77GE*)DP&U,G[as$C95Z
%?kG_uLIPAsX$sk1.Ms^'%+NW0Me,m:=B>HR7>QL5)I]nP"pN2JI6k.Ej"rI,i`P:KNn(cb&RqDf7T_4B3Pi"9(G%l]eBeJZAaR"D
%ZF9(,&RqDf7TbP8lIftoj&smK[pZ1_a5^r^[9jZp&Aq0*K?G8G#GVYNef?E[l>fn"921I"2aYQZkp=te.Vs4+n'U6'LfjDb"Ii&l
%N@qV&]%dc-ldhD1F/ch"V=$j?4!J.ir=Wp!<B.S>!9nN&7'%>8K$C,98!eNE?1*W,FUq0M\Q5E!8o9Y>[mm0n%L1KPWc^"p']N4r
%7qB1E-<O!FFu609;WS,I=>[nuRnEpG0(hTCg`mEsI[FMaWTMU)Q:R@s,\#RB'5T:d4hB,Xl#N[iXLhqnc)&QQQPq)SDO-*$@na,;
%<;brXDktST'!^ka#r\.8+'iWBFLbs,f'P3.k#)M=b8h3#UMD()*AYIrEYYBC9p.+f:<0)#-J2QQKQO1hdcK>B=SKo?RnL/N0""<_
%gcc>9<gd?:W?0KqasC&fTEo\L9X'pa&SY.\UrlCGZ#5p82OB:F?0[i"\W7rc4Ysq:;I-(kD3HT];T-.`-J43L$KGqHcYNJ\AAM/1
%pY4<]eUCL\6OYUo'JB,S*/nKe=SL&CX363Z0(hrMge8`H^6rAMWA)bs^.FZ\.:V*l'5T997_7).l#JRKXSZU]c)&9JQhi%7DPi54
%hb:8b<#Fjthk\H?'X@(q#r\+W,@0T(FLde`epT?jk$"%4.eQN9ge<j1_AQGhWA;>d_MMc.9TeSRR:%n_0[cc28X5dEA'm4KCb?Gl
%]$r\'E\g.cqdtH)V8>ciqBfKcVMKBP9X)',)!OrUUs%!sZ0n(f2O=aq?0[o$\X=YmI5A_%;IQ@oI?Q9B;oH7c-J2QQN-)%;dcG(u
%=SL&CRnJGI0)&'[N+RrLpWWiAbCu'2ohE$Q9HB&*R:(*80[cf38XGnq@bisVCb?Gl]$r\'E\g.cqdtH)V92?\.\'J;Qm1%.1Vm[$
%@AHJCP:ALi`4Bk6fN]nbFK'3,j^sBPpWWi198/K\ohE$Q9G-U)R:%P".ZC\SCe+GpDS]4;\(B5T]]u\=rrRLk.A:^kDrP.i`-QZ]
%`T=s-Qhi%7L5s7B#cgUPOY6<$\dT2:i=T+W$6rjARrfMlf#&`6/epjee2QVI7')/6=C!D8FK'3,AVaG!O0H2p)!OrUUrs=S*Zea4
%Xia2"qBf3s8CcqBW^rBe-5B8qCPGLnNj+mU(hln*Urq&h(`m+.WA)bs^.FY7@Qcijl;D&d97<!V6c=:qK[lp98=00"?&"1.n-H'f
%Kon"\9tC`FlerFVQO4sClC2l5,1aXVX=b5W]$r\'1.84!7p'%HN,Z=Gia>$iH?b+^jhaQTqBfL&NlCJnX%S//0(hrM$k_ga&QY5*
%,@0T(F;Z:R_]u68<CXQ#iM9'STcP1^25r:XUqTEc+_!Ss_Wk$-Ue?-"/jmR'G_FVD_FU$i-=)@^p$`6flgjkg+hI;o76DCuYoXrp
%/YOYlZQ3kCqYT<)V=6\BYKO3$?PUlu_b8sBbM<p=)_tI3,HNMa;nCIqkn6CcLI^!%.]7BfgX7Ch=:L=q\Pu>g;R`JqOKf]F@<8E<
%d\UhSQQTcq4Mp5Y3MfC)Q7bJCC3YEVV/f1p\h.3>N7ID'RqpPQWmkmb&nL8GSQHQ)T#.:DMds_nWPK0IPKPCLlF'Xu,1aXVCbCuO
%]$tT]&nJ(u8(_&rVf\omdNut:%?Ia(<)2[U\"u`ZYo4ZlF/b\XV/Aqm+Cd8k_WF`VV+]X1/j[KlG_F><E_;\0/R<seeaNj69B?j?
%G?Z&'aB/n4Ye"(7ku,!e9+\?L*as,hSC46O9:$c22*Ab<;E:RHh3KZZ`bKaOc)#_Yf.+7//]LTrNj+pN:2*V8V+QiS)BN=.WLVD5
%DG-<=@l6Bck#+499APmd6,mYaK[$?6$CA@V%Q7k!L.BlgW64A;@rM$9,qW0_menkDFShKW`&tJM?#/51I44Ba,Md&9.iMJeBN/Z=
%EV!0Ul>0j.UG`I=\h#Zj]oI2u%BO;D7%mJ;KuSPmOY3ni<K0$f1hs8A\EZ-'rACgZ;>l/;jV8]C>XuB:#$*TrT$XFF6K<[`8@R0c
%Wb0dV=B&F3EOU(b)XDTH*GV+1W35tf[p%t*Ws2TMY*tHNW5@O`X%:ai^oBjU',l!mBO#-il%U*YeYlkBUO!9,H`SGt:'7O8F\?Dt
%9VHH[Fej@u?r`t*$&qP+1iBLWF<qBtC=FZ*;'1M3`RU)gUOcF)as8gDU<pEV3mpGRYc:Q][)O]ILSCq4dN(0KU2bm?7KjJE2cW;@
%IKih1C6-`?HU?bUl:<k[^oBlC&K91pB\ZB(l-^GOeYk>lZRR=RC8MJ_h[HSY<#6]Tfn@>He<-o&JQ7\u+uJSQd(#/udOd8ZW_l?@
%7MQRTG>UlA?j9XhlA*s#?2@CI:e/*$#$-)DlJ_Z%a56[TJu*GCDI8`MpM'"M5n#E;'.t(p*/l5%=BE]LX33qo0""Ba>XofmSs`u-
%W@cPpW_&O=.:QR@'5T:$7_7).l#JLIX;bf(c)'8fQV&W2DPr;5m7aap<$(:%o;'PE's[1u#r\+g,[IFBFLe:necdnHk#t3:.WnRf
%>ZQue)B)]kWD17*-Al;==HVhtRUA"`:su-t8sO1mA'md[CbE+f\l;8cEd'sR950"&V.rSgH7<,PY_[EX9sD1X0Bl@pV9:G+Z*'u2
%2O@#_?#$<[\]Q,I*At[q;U_F723ffg=i@nM-J2S'RrkX1dcFAb=LZf`RnK:c/f.P.N+RuM=4RMTbJfYt[8skDD]ObmRUC39IF=tW
%8s_Ul@U3:RCbA^a]$t*OEm[=W)f1,NV'\gdC9^a;llsq:2Sj!')5To!Q7>sB`4F,=fN`0eFK*R6jkbnt(YT"]9=:!:F]u@]IM(mH
%Rp^<:S&48rMhBE-&aO2$?n7p#Vt9WU\@5i*>-J^tbNiruT5?YI6Oti((G9o9*"7X*&!*s)>YaN]\#%9pYo"NjFfCnZV/Aqm+_!Ss
%_Wk#ZV+]X1/jmR'G_FVDE_;\0/R=*ep$`6f9BDBjF^)Ec&aSBf<gUrX?0\k?)'[YL,HS%J:T77$V90@K)P'tFWLgu&Ef4GPOQjRn
%(6coj:$T/d)*/PN,HNM_;nCIqkqYZ.LIYHP.]7BfgX9Yh=:^Is\l;Gh;R`LG&@!8t@<JQ>d\UhSQQ]g$4MpA]3MfC)Q7bPCH?b+n
%V/f1p\h.3BM"U6CX%VOg/pCM>%#A!rO0H-!:?bZcV9@5j(`m+.WLVD5DG-<>@Qcijl;BX=9APmd6c=:qK[loF9%PQ%</DdJK-RHE
%PuF.$D5f9YXG9;J>q2aoWS>j4Lfb1KYe!e/ku,!eb7Lp"*as2jSAOB*Mh;$BlerH,'"Z6M]HhBUp:UW]/A0<\5'ljgK%Xus`,HJu
%]$tSBYT[L64MpA]3A%DaD2V$uYoXrpF00Id>cZTpQQTcq4Mp5ajg;Nu[k03u`bKaOc*b].ENO+_>_7pbn-GM!Q.+_rh6sfr)6;^.
%2V0FV`O39oE="C$_]s!#:H^;0eSU4:OK!#;@SO5p.8?kunlRVYC2ejVUiKX4X4nDT+C[Jr_WG%`[('/G/M9?/C3YEV[E<3'X_q?J
%JrJ7L#b,Upe)FQe[^ZGXX5OXKf.*];[CU3p#r5Q!,AaM_:5`n1gYriVXG06t>cXA1fBTf`--00tO0H/q3MfC)Q3S?a<l6/`/sXoF
%>2?Ws";0tY&N85jVo?'TD/fk;<l6.uY#S5TCN\Ck&nJ(u8(_(ISefqUg_SFL%+X8ARq\/:@TqTrW!"!=i=S!".]:7n\nuEn102:;
%Cp$c5MedIiiY#e'L.Bm$X.7V7DTdYA)6;^.[M#T\3ZHZK\C\U0?n&b[qnL/NZu2?UL6oabQb+gZ7LM\e]5</Mj`3t[\h.3*_2^sn
%9sD0-:?bZcV9:G-Z0o%,2ODQ8?0\k?\HO5/h)<+3;E:RHh3K\&@)TY2-J2QQVf\omdcD7'=EiL&RnMk-/p1C0gk$.(DOY$TXa3U)
%\h-p"_+7S:%BPCc:LR/3`N_&3aE4mcYaSflBi;F:at;8NkdCdUQc^a_lF(fF"XDUS2SnNR3MfC)Q7fXS`4F\MfN]o(FK+$CjVEeW
%GM<7i9BDBjF^)H4Je@<dRp^<:SC46O9:&j:@bkl7CbCuO]$tT]EXP@<]5</EV/cp0].FL^$V%50D1^="E_;\0/R<81N^^EOYdm_.
%ku,!eb:OR9m^<E[Qc^a_lF(fF"XDUS2SnNR4f)qZ>H1YS&aF8'?o+dPd\LbRQ!5qOh/*gA/sTAHe8=Gj$V%50D1^$/E_;\0/R<81
%Lip1$Ydm_.iGuEH_.^Z@Fgk)LPu*apfm<)@UDD\i9AuH!2>5gO[nRFO9AtTJh%g6j"XDUS2Sn[!3MfC)Q7fXSa.h<8fN]o(FK+$C
%jVEeWGM<7i9BDBjF^)H4Je@<dRp^<:SC46O9:&j:@bkl7CbCuO]$tT]EXP@<]5</EV/f1p\h.3*_2*6C9sD0/4f(d,Q7B@OUoN2S
%ejQO90WEje=I3E+]%\Q69eN>#WS:>4(@5.FgB=!=jchB?>IrUA&aO>(?ur<;d\UhSQWl.Qh/*gA/sTAHe8=Gj$V%50D1^$/E_;\0
%/R<81Lip1$Ydm_.ku,!eb:OR9m^<E[Qc^a_lF(fF"XDUS2SnNR3JGZ4('gT<,M([/_<Q&$V+]X10"56/U>%$I>UlXnWS>k_(5u@>
%gB=!=jchB?>IrUA&aO>(?ur<=d^@4L<@YfjFgk)LR8cpq;R`LF/Jtb\[L"jYasgW][WK%`,M([/_<+WUV+]X10"56,]%\RaMP1C;
%C^9^X<_MY.V1d._s*A"\g,Ch[n5;U3Eo4gOJ;Emf#`Hl[OY6<$\dTU;i=T+W$6rjARrfMlf#&`6/epjee2QVI7')/6=C!D8FK'3,
%AVaG!O0H2p)!OrUUrs=S*Zea4WA)bs^.FY7@Qcijl<9I8.eQN9%$@R;M,fZf,>9SW37\M+*ZSTC\M2I-^.FT`@kg*_l;D&d97<!V
%6c=:qK[lp98=00"?&"1.n-H'fKon"\9tC`FlerFVQO4sClC2l5,1aXVX=b5W]$r\'1.84!7p'%HN-)%;dUe5:&!*s+<#FS7ho*?]
%M"U6CMp$g:0(hrM$lt8b&QY5*,@0T(F;Z:R_]u68'h5da2sE(cXG9;J?)ij*XhmYp(d^AF_J2tWUe,uu.RV.#G_FVD_FU$i-=)@^
%p$`6f98/K\ohE"+&aSBfembSp3:GM/]p6qJ9*q0HagLN^g,C7pn5;U3Eo4gOL5a[P#cl.&OY6<$\c`W2i=Ru7$6rjARrerl<l6.u
%/epjee2QV)A?:MUfN]nbFK'3,--00tO0H/o)!OrUUe?fS)BN=.WA)bs^.FY6@l6Bck$"%4.eQN9"IZhj-e:\cN%h5Mi`IpIC2ejV
%jMFHOqBf3oM"U6CRnJHt0(hrM"<"9!&N5s_,@0T(F9s^'_]rtM'h5da2sCrcXG06t>Uk\SWGg32aB/n4Ydm^Mku-E799?Cs*as,h
%0[cf38XCQ02*Ab<;IP7%I1li)102:;X=b;Y]$r\'&k&gV8(_&rN-)%;dNut:%?Ia(<#FjthkWo,Yo4ZlF/^qC[0e9]M_S1`,A\\A
%7[hgcW=iaCL.Bm$.ZAJKDpfrQ=:L=qPr4i:H"X`PT!]Cf=Gl)8m]>fi[gncJL6l?TQTH<"7U&9^4(*ZjjUt(M3Zq^GMiL429X)',
%ioj8FUs!TeZ0m,K2O@#U?0Zr^\Lf#V*AG=l;Mh/A*KVn_7Dub>-J2QQEHJ/^dcIon=EhO`RnG&f/p0Fjg_LLf%[^XFXVs]p3ZqF?
%Mb$hS%'5:bj'Yak`3CqQaE.Y\YaShVBMo)2b&,P2k^WstQV&6'l@<ue/L&ad0YumLM5*]aO=n"2`4?$tfN]nGFK#AjjgKtIGJF?N
%9-oTNF[3On((ojBQsb!7`6kCk8=/'T@bh%uCbCu4]$pcFEa(r54(*ZbV%O$"4!5#&>=>PS@"Qqj&kA9L+C/lCN^X1HYdm`mkY_Y]
%bA@irmXPU%QV&6'l@<ue/L&ad0YumLNMC9S5cRd!&aBjn?o+e#dA.7CQ.mKlh#S1*"\QaKrl=E3f<Vhm.;SOET=2qjH<Gh:?HO0k
%mU\?p%1]Z2AI2D(M\TO_ATYK!3>T:Z_<+Y#U.`1Y/iPc.\sF_q>UicrWL)#o#)?=TZ36Xi`JQ;@1:l9!&F3Yg?ur;LdA:/=QQ$oR
%h9-FI/eonJeB@&rK0u_e=b=o+WYJP!AQ64V+]ZK4YU38UJk<oia1B&0e%I<KC3$SR8\L'42`SjPQR19h.TUYjQdOn!LKO;V"Ii''
%MD"QW]%l3TlX#lbF/`9hV-ZWX)]W>Cb7\VD'e?lFbNNu!6`bW;K$C-$7@/<<?#FV;FY?Cl\Q#Zo;D4fg%1]Z2AI18]MA9CaAN1M9
%%^GG5$!*CN'j^*9FLf4J(;298k#/IY9>-9:2`SaeQR19h.TUYjQdOn!LKO;V"Ii'7MQTt'W)A16W-_[!c(nf;PBn*HDK(DS02&Ma
%-l&dC2.*!K0@C5oZ8TJ*kjba(Mt7b3_b4-bbIn;h"!Z=6,:kG`/%X6RkV@62L.>?O.TUYjQdKB#=:^Is\l>cp;D4fg&@!8t@<JPO
%dA:/=QQ]g$4MpA]Z(an)N%RK9H?b+nV.)l[H5U"CM"U6CX(t]cWmo4j1.8-3-WW[9<\UM?iE.mHH>nPVjC1QAH5T_;NlCJnX%UEh
%0(h!2$k_ga&QY6U'j^*9F;Z:R_]u68'e?lFbNL]LXG9;J>q/lsWL)"DLfb1KYe!f8kYa(/b7Lp"*as2j=OEsO7[G9-4ZpUH;R(hs
%]aP,J,1aXV/1q_h]%"pe13>(%7p'%H<ck=-d:J,9&!*s+<35:]0;H]%YoXrpFfAQl[>Gi%@L2Yb#cgP9MC/!OWXKL*i=XWB[>NKm
%Vp"D.r\\gaQF1RYj3H[kHWc(?cE]p+H5R5OA?:MU=C!CW`O1"pE=!i?_]s!#<NM'nos3QiA?:MUfNbIZ("__^`?iT-%?Ia(<j=-W
%e]WhCOKf]F@<8P[<EuSk'pg%Q2*Ab<>/dMO<\GsU6,mYaK['1h<^jEB=]#J\FcB.tM,q$YBb`EF/&k6lNj+sOXGU`bZD%t"XG9<u
%>cUsAfBQqd--00tO0H/qYpup,bDJrSYo4ZlF0/nO>cX2+QQTcq4Mp5a`N$FK0.SY@`bKaOc*`F/ENNPJ>_7pbn-GM!'s$=t]r\^H
%)6;^.2V0EZFK(Vs?phqKG_FVD@T?[6QPGi0@Qcijk$#a(\5k75/j[KlG_F>Ll:u>Ib#2(g`_[,)YaJPF.AkX\MFru8)BRk@9$P"Y
%?WsB'YYo2tpU<9MT.5fD@nWGF7a2)T<uaZ'[ff_hWZBHbZp<Ypj%*7;^oBk`!ughIBO#?nl*_4,eYm:LUT+BT4,kIj<!'*=oaGN`
%;P8$#EMPZg?r`tZ!K@En1i>(/F?Kr3C0&*"7GS(^QP_*MRX@WUTk\"mHAR])I;tiO8RP!H:'$1i#qW53MF8NmXD1]^TMZSX`i[4B
%Xs/EsNLBu,l64NaYW1&_,d=:GM1A&1"<)J!8%O3R<]0.Qd&;@Xj-nsuGE9P>7b%MX'b>!5:`S`R&QmS^2*dq^!KG9Z,Mb<\Wu;]W
%CKrfG.!g^p>rDa7)Ku?ue23h<,uGq67UT5kRK/=>"uL3BNc`5GXD65sTNMF#(A/4D\m5I4M]9pR&[`]H=fgClk4`NDpO618d%edd
%"sVl(+S+n)RD,jM=@Ke]5bo>,7(r[Fds%)\X(^<3i6eY1*oDP\WLHOgeY69$27gEp8Df%2kdsK>7H7ST1qLB9j4fYOEIUQaMKG&4
%82hBAHm:tTmk>&KO_tgDknXA`Dahb>4XRupdZ";Ph..Z!bm9`Ob9U1Y\lD"kgC-Ka*?io+R09Q]2[bF`UOgKF,\6aHP@,-iFod_C
%2%]SLKM:9='!*;50J)e>`eWQNKM:9?&hG6a1*G$4"sVrjS;I,;JlT09q^G_K<'ZQ_1Gq//.aj:YU34e57s?:*qOWo/0;e,^s-WCI
%RC<t`'DMDVqYRu*$--C<&*M/2Q)88q%$@R;M,fZb>F76Ij&e*JH>nPVjOohG:"E8]3YoUXX=d5WFD8Idb7Lp"*as2*cD=042I2&n
%p$`6f9@GM!R^MB87')/6=C%A@l-dLEQQ]g$4MpC3j@bj%DRp5glerFVQf_Yd1k!haLfb1KYduXp_rVaU#6Q1$_]p]bcbad<&uWq"
%Yo"NjF_N%s9Ck,KL5>Nl#cgV)0jSQIVb.Ak*ZSUZ$T/gJhL<#b^LJTm-M[DkYkRi=b;."T:@M4s/uM='WG?Tb9r."j-;EV^<fEFb
%*+:^M18[Wa3E:Zep$`6V99V)9R`jq.A?:MUfNal(l-`g3QQTcq4Mp7/A5&?PEk2AkX5OXKQR64R1mcZ;aB/n4YdlS.e"sUF/j[Kl
%G_F><ad=^*j`Cea<l6.u/ks?)GqR.RL5a[P#cl.<0Q_"6LFtm2H?b+fV9,)Wc/j$R102:;Cbq<QaSCD$pA3B_"O"/6J$885XPY7o
%+bk'lV+NNp<M#,2W[Tj1-IO.GPGVG%l_t_hSm`;6-;Ta\BniJ,F0T40_^=#@RNh"E$qlrM@`3SI9sD/b7FJ"MQ7gM&M"M1G?up%>
%Ue<Kp?(QrdlPVUsk0ar8QY'@24;T6n1MhZfV(%Q[c*2;8/k2pTfE@[:;^>Y;@Hm>fN*+E1#r\-I8@Ue"iaC!LM"M1G@!-aPUe<Kp
%?(QrpM]"Fh2J[![RP4S]X++bJYY9cB[mk9053jMNiLC7Sd]>s(k=;=_g'b!=1i^@-Bb/71H:4WC]`bCXdhYZHor.HZkZH&T#r\-I
%/\3e)dH109Z(CV$CbAFdFD9=$bOZrf4mOEH>ai+bd]>s*k=<I:ek<6X1i:X:=cY2]O,3J1QXFlKg7h6H*aP?Z&aNRQ_<01Q7@.UL
%\i`2$f!A\7e`A)<>[HCL?phkYG_F><Bo=UgH?=F]7'(%7"P^#OBku#;a/a[:U0sArkKd[G?hK>jIfV^&;^#/0or'W6W^\@:7@L_o
%d^4d>c&h2+&JgS./XeN^;.\rn%$.X(1i:X:=cY1&`-QZ]eYQu<0$S]a)'[YL,HNLl>BFT1UWX4R*Zea4C"f:SZQ<D,M"U6CX%UnW
%?(1HM1.84!7p'#f9&T86KS':GMr>9!X(u"tO*SOGeL<kI;oW>H']O89?c/<UL1A@SW\ljPPos#Wkerp'?/RQAl%-m40iN]LX<q60
%`O'64U(TkqLI^!%lgc[22*2M=+Cd8k_WG$gGB'b<Tst4CX5OXKf=JVQCX!@.--00tO0H1Gj]u,,Fsnt/`bKaOeYQV7HH\<nee%g1
%PMf6Rq3*tnC]3hD$o,D"`c1a2`PK'm*K)F+_<+o;*EB[[WUdHV<*ce\23BLPQupI0=C9e'oG*j'2>NE18QRHC^:#&?.lP6+dNqDM
%Y#r8_D'RV5CkBp.99(W1Z#ofq7]`fG"Ii&N**p-bl126A=C8<>2O?$V\obp>j_Gg?^1%bW/miYjL!S#(EZ$N40&ub[&XT8AX]L5o
%c6&sZ90YMYK+/FYi=Ru7/oS<X44*)7"L4O=&o=^nJQ&DuJL\tj8Cd>D=;0p#LIoqsNqG5\9[=1T<g,1TRP[*&ja"eLQlQfU/m[=U
%Bm-/mo*Aeg4!`H`]"I:Ulp-p#&]B!=8?fXHH./VCJM,7nM"U+r?utT'VG"5t?(OOtle*GtlLO%"T?P%"Dk%Cj;o\aEp<0ee%N0S;
%R53^km!s]h*K/kg<gPFW\hlLqAVaG!O0H4H"\t=p#HA2pWmQZ'OY1U?1d0c!1LtfNKZ3#qRjQAi<#I_4_]u68?/B[;G+d"iYoXrp
%Fm8Io9="_+L5>Nl#cgUb2dMjmkV>Q-LIYHP]"I:Ulp-m\@Qcijipu1o&(oY2*XJ&\A,\R[j]9.U+@?S;n+`/3](GlM4P5b#)BN=0
%l1b%3C]..=E=!i?_]s!#ofEN"[=6)g\-*\Mi=Ru7VF\9T_pTjP=:L=q\MQb'V&>RO6,mYaK[$nO8ZFVb;C0E62*.uhdNf-_VH=fg
%`_6i%YaR[Cd\IbH.RD"!G_F><.?Z=.Y]L1,<l6.u/kqIMBniHWOKf]F@<6.?Ue<Kp?%S$cn-Ie@UhOW4O$8U_'eWUc_YNZ=D9D`F
%0X+6&Y^!n"_3c*AVC/uoUfol\dA!%h(=.i09MBNb8@,DTC+bhF/()<[W(`3L:7>bm;KK+EhhWm#6"OftGLA%2E,!^I9oEZXQ0HEe
%)eg'^[BsVEVT!WQb4IOhNAQP?=^!XPe)K&.AU8t-7[dm_Y`rgEVSr*$MU^G:5uVH3KgQM0NqEOh!^.u^,Lta%Pn)'[P^)WqA7@V!
%7[cc0.4q!HC%8:<1-H5!,AhJKUbi%%p0%F:j'lR$]3W0XYNN=<=:':qRDg`JI-!^MYp%S[<e<d$W<XVA=V,jrF!g%O"KP)"%n)ko
%+S,/Z9M\q#<fn^OLbs*;j;AGqT"Pc<,0`CbC$pSoP8l>@JL+DeRYDs5oECB?3FmFG9<a:1'1&E3$mJJiaRh<T?kog.#Tc]Ln9DB/
%Uo(H5W^S_,24DU6UusfBH88._(Y@sM-eRVT=teG1bLLoaI6Cp*hn[%s#X,h*Y&rp^Us%,i(`m+.l"m.g-So%_M"U6CX%Ofc>rnVB
%1.84!7p'#BDt!;TosWm]4tf3N?ME(ClZF3Ao$M!(iR9[1s82-]j*DThk'fP?*trs[lfWE(gd$?)3nj6!q0GseA;Z$i*<10:\*!S'
%WZ/F\kO[AJ'D1eZ)Ag?iKqdl/_!8Me`f%?TbDk!PeMc:Nj*!PSDUI_g-cC'fp6PUal3%H$j"h^Jm9Y0le@f2K,MKSQaitC7Meh+t
%Nna55>mhG"0g;8tqJ*8A@X)mPqqD"[f2GSO\G#Ig4SBhc+GL]a\F@Ni>u_tI9\]>Q*fmFXAuO*G1p;]/r8H!5/#%;HNK.$q,P:1D
%Rb,DfY@jP:;9_buhTiP<0tb$YQ#LFRQsapY/*[$m>&8d-:=iXL`bR1Z6+W)%ZJFen'H%)ke*L)Zo1$\S:UAg=drT&O)I+ibQ?,1S
%)'N*Uo/+)I[i1^/LDSRTjW(c+3=-JQ4O^J-qN5<EiPd\S@t,NL[:""!;f1;R>&8d-?<jgDm9BIh(+cV6Wa24"(7QG$(Y?<bmd2V(
%Y[X&BpuPg0KjR*)VW_8Wek,gmW7gA#I;)VHL)O;JoAkC=Fd`jmVYNReYBHdSLuH<107`5n^3>1J2?1)Ue]tN10tb$Y-*SE_oFidY
%q9L<VlRfl%*aW+C'%e8uoFidY\IWt%oh<O?_i&=0a&Zi2`JSBt'ccU^8^(\&AtJs^]m1AEUA4oNqf-JP$"A.!c1Ct_mN-u!21MoR
%J$rF?Tnh)SIie:VBW%LG?-i>AG5J\uU'rch\E7@A5AF74/?X754c`*k9b>4#CL.5>XVMbiigNrrF6g(;@X)n;bM[iKeQoDhk#M&d
%f'2T=d)1cW?3[%:JF1tmM[P%$g;>/RnD]o:Z2Og5@M^RJrW-cS-A^X"26V`,#94Jj?ub`*-TX.O$nnc//Zc]OUt>j/Mgt`H_^"em
%]#r?hY1W;$Vh4j:;@S\krEu-TIkXX&r4t?W!W3@r@hWZC;'XAYW)5*qU;da/4QGB4epiPnk<Hp9QN%XPaF=NJn-Id`FbsV'=K0q$
%(?8Gt#"McSTB<QT\D>jC_u9H)\DFE+K>EdV#u8RKD(t_cCbRgd)[ps(hFg+OJou^^*#f<H`<HF9!4EN%)en,90]rXmPI\L0MQI",
%A6Lo/ecTK9@3q6L#!qZ'BR#2IK0c"H%#X-NK:`/;&fdBKgL(T5U0jm%oUB9;n%fU%7DCMlr<gN<?]=;t%?@YFqLuKD="5$bemj-s
%e-+O#?_!%'`H'Ap-\1m'@hW[:Idq\q?7tWH=Ko<tR=2iW'-KXQVsE,VIQd"2+\:3>:[HhB-_q/*]XYJ>Tic2Ep^)3*_Pr*obm\T1
%Agl)s)-18)_N>.jbm[HeAgin5)2?eQnF-_LAqi9(1DJ$W$pj;cBR#2I1II\%)2dNfL7\J>/KC6fgWU5lAqjd*RGfNDI1+(BfJYP(
%Z'h:bChB&Chnk!j/=RLb@l%V+@P^B-q\C(g@G/j9j^s66\X?kdp+78Q@,&m:k@THX\XDD(J:.gG-J144`4;;0=Dh^f@c,&?,HR@P
%inVaS/2o?f\Sn2#&[opmEGT58'q6)lHfMu2J^r!R@;][*PFEGUA)G/&$+A(eEGfA:QCAbHfXLA>#jZ*BiajoU`KnaW61.rjG_Boi
%6_'V`MWJH)T)eR:*1L?jbRirLL17]]i?s/($caUH2D`:^RA!`#Af,"7_S[V"Ri15@bYTiL1Bb7,U#?Tlbm\T0Agit7)1DY>[r?/8
%D)4PLRi.+FAqloXp+78R@,&m:k@THX\X?l^I1$RHY\n&(c<o.&/:ZF*&AORti=WM*eeRAfM.4#8i[97>'#u?O2GV3$EM?QQSG3Cu
%O2S:0[Z(r?DO`,@)^gBm,Ot7/lc+eV*?-A`]jp(jOF&5k*oXeMSBOY'n[u=/N5tn_2;[N-SKZ(&$]iX+??\4'!-U.4N6Mbq")hBd
%28Qkj@?/#0V.(smG3i?S2:B("@EtDP"`kp+&3CXET5!-%=:^XEN)+EG``S0=()e0$gVj`e0#gNF-ALm>Y&J'+D%AuRHPe7I>8T]Z
%XRORBb797\FtcrD2D>p+<eZ8t=SFJ%\UUkN\U>V[2Cb5b@,&@+kO-;]jlV9`fVWV$Jo0sCS9l&&Q!5&6fVJ#p#j]dTiaq<4P?Kjs
%(?60a#"R>>/]>2<Yu8,L+hMqHS/GG`[1N)8`Cfd"KtQ'0E+"9/cU*kC(+YSQ(1PpdnDFT<NeKH:/645Z//I9sKEas!p++(l?a3M>
%>p29f-6/I^gT;%MDT,60AqfU(Q>gMhD6H8GHPJ%F>89KWPjm$*b>-$nfW"X6@\[BEDFnMLKOpcBPku.FPM6d,@me+q$+=+HEUH`+
%<,PUTNpR+--J8#?`48CC;Ro4>L<Tu7Nj.qJLi\>\V/h2t0lBEnE.i(X66,k9.hp_OEdK1NM1O45$"<6sX@R5(aGasAB-u:)-H*GR
%Yu8+i+bi\s&!!m^9IsLn-9eD?@q%016"k4jD-oW"q[tEEgCgf%"2^`<[Ts2ZmRjQ[DG&!1m0ACnf_-T/\L4X[\KrDRbm+c>YjP&<
%F%9]9E^O:jDEVZPKP`q?SGNmKQ.lnVA)kD!$+AXqEUH;t<,P1HNbo#V-J8#9`46\h;RmMcL.qm`Nj.q>/C$K<]2JG0GfB0=H9F5S
%N2ET@H$iN5QH*IigsFsbgQ%%KG<AnU2`tWkeqQO*D#574h!\@Eh!U7E)]K8]YjHUiDqOGZW>d`W`3?B&_%G83N]CZeFX=X_^E2"Y
%X"Ire\SV3Q%]HL>5Er3N"`bJr23t<oniLT%fFPsL;L)AKMK'[4)&c=W=FMBZQ-/-udUK:$=5nGR(6oua-)C[RVR.9-`teCj[0>ZI
%E]L*aXsX[`G$KY%Wf+tX/PF2#=OrXe>W7*9#LjNP+3J/j!kF>ug5Et9pl2XLjG/$fWA(M!/]E$U`I16f!Vp//4t;TY7mj?mfAM2E
%ipfCHFAsC7Ne1L`IKg&,(60KZAYT=;DR:<t`"i(g[70,2Elk7FXr4@]qJ\lP7r?*;Ti`os&*lY?X:<e.JBD?k%C&l;BilkmEF&>W
%(f4?`IMeE.MW6bF>-&$3i-3ZdM''kdU&qkpZl88H(&8lX"lb;XH)O!2%h5cZ>_<-YMo-(edSPL")[^U+p_b&J>8Vf;QA*K!]$On>
%!a"5;;AY$/a<dP.\0eQulbA_[*OQ(0LN5DR5ct>$Z1_CS"0.9q2_@\='j0%=JmA%u"p`WnJfi-HTE;Y6Zl3_o(&8lX7GrrA$)g+l
%!Nj@fDaf+FD#sF*>lH16lT[b<p"&&OlJh8"\b&fCf7&<VkC!O>e/!KTb%71H\aHdBCV1DX*OS>nLN:M75d'pa`qjRAIRe7kpRtj[
%.?NjY6`f\+i.1*%Dk;"(W%[9,?D#9iW.qMPH`r&!'itj*n6(80<?2$dUf@9hOW"/#aFb]gs*uARQEO,lHneZJ%?@YNI:7;IV6]Dk
%O(.S-"C'b"BB*&E)o&!FlFg[@Coq'7]jJ&2rIu`r*ZebWrem-:^LBk5(M)(Jn-IbU5b)Ti`GuFG-fE#5eA0d!5hmjj7=$7f2/9lN
%'.g0b;6C-<b4U9.b.i^%=P!]8>SSZQWrbR>!AlpU[PAEWg-DoJ)u'_I+lLuUg\O1*.g3h3L#=>/ja^hSCo[\YX:phUFb1JH"WeXl
%=Xu%^e\]JIC-dYK!tC6oX;F@9Al'o-%$kCSi6VV]\j;i:#K:`Fi$X%dJn#I1Ws<XI*u)okK-;!<*Ze`q6\oduTieHA"M&'in-Ic@
%66'bIV.)#b]iP]h%'6TZKXmgR-<CnIA,5'4"P]qCSEgO$Ea<+07>-Fd=P"=HQds'4/ZT7F/gW>:_R@;mk8H^m>\!O8?pWc("PYt)
%S1>&fEi%_BJ7XFE'5X]YENV57bOpT5()J#5@9mr1F4HsdXuZ]r`6duZgWDmRCCeC)mGTFCKna(ND!MUOY!<]E'o8I^Q5biYYcU71
%\IMIff-,lNFEi%`GqDqniG$8sIsD[f^G9MJK^GD'`92VTRd.eJBjO>kCWd.1A#EpBa7WN"4NI-\ESL5nj>"R;`e,Ke9-.LmGnc,^
%Nu1qW)B<0knd'<YUJrjkXN0VGW<p!ZO#WIgMWL#A:B7F7a!TH)4Q9W:.$dLI6`b/f4Mn\j=hH;2<btq0#]b'_i=WLEO#WIgMWL#A
%:Vb-mVZt_<4Q9]<.+1a0X0K6UA:eC7,K_<n6Fl/3`9P@[,HONZE@uMNb9`2l=#V$=@9`;YF311Z/p[?tYe"gjJo/USc6\N\\`E8o
%_!8qE$+;.@30l[!`KJ7MWuDS0YUk&8`fatG@`]k5eW#;Q=I)(D>k0;-9-29]\oDD8D94$J-')NGjREo!lGg(8[O$toQTU/eP/e-7
%)\8"6/pYCGjA@Ip4G$hoBR#2IaWlflO&E7DZ/3YCB*MD'4Mk@o.$I:FbH\WuC4^<E,L.Tr@_(PS`9P@[,HOP0`QOEW`Khg2+BLK?
%*ar:DLi^\5=>"ms"L,IWCk?NG,L.Tr@_(Ri'>WnQYmIibO#WIgMWL#A&??`\O0C6^`4=r+/=/JN>hs(<KPegUcD?)$\MQ"Y._rqH
%X@n2bbL0e;QDK-T<rj3\@9XY+@qhT8/.J]T1;K</je]dO:R=_f@4bM:o3Aor4YoBb*hr6bPP3CHas(AFMspUB(EmBsDfBfq>_[c=
%*MQf?6c?4i_!"J88d(YW&I!5)ib.1L#BM,lM\/(eeVKC!)Y%n<_Lo[ef(B:ii.=A=>`]eKmD8=\Q6hA0-u5!2>h10P=FOY*VKGmj
%#Il<^17';9%U+H<2o3'Z_#n#3.+Kg]gV!l$BV\n&!-<.S>V8b[]aj#r9Zuu0%rcrkA?J]2YnY%L9^<#h%rdB"A1gaW*5!1uE27W=
%Jd8eX;)23%IL]\G0K@Ll:;I$7W$iJj'f3$b3''tj<Qq^K=g;)0#[pkfZ'fX?!mKb`Ek,G[h^]A[7TpTZG^q:[-$.&bkMX;cK-RL6
%(-KB$MitVa1%b<qj"i:1(-KBTMitVg&]>:cj"mef(Hd5EMh83UnMANIKrGBE`="Y,08elV`I9I>QlBaF^Yf,F@$Jk=N1niQ*1pqJ
%_YA\fL0;W0%3p\j$H?^^=#"rMb8;OH)<9o<'aoX=XU?"/^m0kA\WZK(n=kWQOk-oK*oLKsa^!%,HJQI.R?lrn+"4gP-(!IALl.8`
%RF^M]#>k@6N9]kETUO3V"AAOq8,H@;g;!#-qFln@(]AiQn*^*8;+7p$Z-?)-oA']mT;_ofh7VO8pTaphpSk@:rEar(+0a7CNR+s`
%!lV>L5VbqoT*,P:P9]J<!'PjD!2<?Nq(u4L*?Aj$#j;:?";$P::Wh,SKM:,u?p2<%J>69/5tgTH6Df/cTEh\<5W%agT*Cb!P8!<+
%!Bm+;!+Jslq#jgu*?/]u&-uc3J7'(;;O2e[AD3=PH2pS>7&/1_QMRe<9`(PL%q&7bBU!g,%5%W#*GJjrkQ*4B&<0l>Vnj[0UEf.6
%"$PRr!Ku:*$+U?2pe:#%?u[h/SEk2+<gEb)SS;@L#\.k)@$H"%"YKot*,/b$kQ*4F&<2"^Vno3[UEf.6"?h8=!hrQ]8\#[W6DeUV
%TEh\h5VsrSBNYfn+k+.rci[T"+PAoM:BE$Jk9eiI$&c,\4-rAQ[$5/KAD4)k*^Gu[1o`7%#&CQ?,OK&G&"lT@)J,:3K>lNkOnLiL
%*^C0V13spJWI,VVBe+ep."XuZOX"H%F$cb+$I0;u]ZI:Gc0okk+'U7.U8<Sn+k'cCoKXj<MD"#7:P1OKd?4-CV?]^R;fjI$VQ=3$
%aL%5=oft*A/%V$&d8IlHOD-@\HD$KY7@/&WVh#oOj90fidfV"2MFBPs'4;8jCo"J/$(#\0i)7io=i6bkBe*hBTTh6$QZ=EVC7#Vh
%mH%"PP]EYb;U51s=Ml+!BeO+FTTh6$QZD5d_&DJ"8:*AG""\(WAiVYX%J0?gCH5Uhj_X%aS;ELLVU:g_E[G&6R=\'lo2B$+F)[qg
%SEYT&c4jR,R@a\!R%knnj\-2LEi/%uc:hBYS<.G8BCkE@Y?SUXc*-;XN"`h[NC:s<7gYUW]9+-_G9]PC]9/]imlQPi[,6l85e.g_
%]%i9=H/EU.VX89.*iO:X'j^8tU?0+aKM;:!8.UrsOeU%TaA2ms*[`>fmm_U'G9b)dDWE1\qi5/2X`l#KE]6m8\Jpt-^>jl?gYGC2
%Pe3'PbM>^rgio!EBtkVOJT<\IFL`@dC%/jskXbU,8.UrsOeU%TaA7H_*CiWRmm_VRG9\F*DIgicNlPd9mm`5e)1*[])-aJlbt?'a
%ce.gtg)lA6J^1G8H>N=6JVobm;@/cb#uhG"#uo;`!qk%#<9`U;qZNo(aona.14bm7WcUS)D$!uRe-U4cf*PE`9U/5kZqm?@TM2#9
%/eb1U#3JN*-eKeC4b*i<Z'[fT"?9CB2UXX;$CC!G_.@p)/JEsR1@<PK*[oKqU<E2gVnn5.d?4.eA\R#L^UNNIIK@5on(41F\^H_(
%BtsZ>5e6k.?*6CV%:3b/NjN/CHD"MmMD!MQ.BbQUAD43$og$4i<cl%S7*CjmKM;:9V[(@IWp"JhMO*j2$(:Ln<"G5"<70eYp!_jp
%kibQeFdA>_TTXR62!"&Lj"mer_)^Hof7&V&?ea;;[s!XdQBP/PRJ'QY&!U!ldH)'"jiQ_>9\V#-*iQ"#MQWkUBK6rqOD-pJog$&V
%.(\1Xr%r@OE,pR/(81tPMbksB&Ujeo))sP&HA`=ePukeunqr`RX+X/njjaIpC0,MfgANjQ>rt*qI^RMJo%7jIm$p:-4F\WMSt2`@
%&"Ser4$2$rp$>r2p$<AEkFiMDm:W=<-tfHPbLu-XJJ6GQ$21](&)ceR/C%!T!M5(,NO5:J_WC,`E&g!KbB^%>9\\6GSQ"cm>hd@U
%IgBT>gUSMaP60c#Xf%$tW2Icc\Xk5Xns&Y=9\YE`#Khn/P08-FkMS,t\I#^nj>q42YBCXckJ*]Q0D0*o5g.>Q!>5$l[Q%W^F8=8R
%*:P_J)d%T$F,"sWYP-E,L>;B?[$N+C?A0"Im4V3FPZOdHo'6-0n4K4@@/I(Vq6KIa=.H\qG[0,j6os55bEMR2V;m6d5JI_eKM7pj
%L%?"iO+W>ZQtP@=h@:o%1_MPq_Xm`>]s]7-'?L.FC58!6RL,B_iI$E!gTq4,mHo-]gYnra7REtP32b0YD/[;=0(3:=dtFBM7REtP
%3*0eF<u6lShJjP&E)K(K+k%p21\Z#RRd`L)X^gZ`:dcNOdjglSbOt^H_K!+,UR!h^.&)icBbeqBp[YstiOD_!NkM!ZJ-a0i9T/?:
%a-Oo^lfRHHhqI%bNb1VT<B/:#lYC;-bWa@mkG)>VUkhK,VH#Uj_gBTo9fUJ=kHt[`&WMH;X)S'cZ=@hEbWa@mD/ULU.ADrdBbfLe
%2m7/u1Rr+<G&N/"+rUcU<oKFpYK+%FCubF3YN=J6)GigH+k%pRbjSutgH>(tkPo%1QTZdlOcX8hc<p+S4tl:<53Jhd^U.'5l=_MT
%>(uR]hOa,?Gg9+Np:N7+.&)icBbeqfHFpSQoJo.<gTA_QUkhK,VH#V5lc6&3LYMa6Y-3"..ADrdBbAW4C;2s(m5j%b,^/"tF\(e2
%-=g;6j1[WfX*,M$o?Mfu[DPQJNJ(!+E6`b'UKnYiS2Dri43'l(NJ(!+E6`b'5'_'ff"CX]PSDM9aKu<;ol@gUZZM[<gu[6c)GigH
%+k%p2f?<Ppp\Sf4EVo(PSf]DUOcX8lcKjTC-CSdVE2-:=F.*fb%Z%@Ck/DAQ[8Z]P0":e%D5Sd2P*(i?&Y=K%jSJ/YEOh&fUE*+p
%BI77nL%Aak'2T@&bABJPG)DG,)@;g4iOi9qr=j[=bO+(oW'X<K,9bNCX^gMf$9tu4X^`-Kl^56Qo(c328B;JOFWEiC="G&S1>3&&
%2PJ_A'RI_bTdcb-OD,AS]g8>n//4O.g'O0*U":4tHGr4E.ANGqBbPg+6(q@2'Ugf2$(3^1>k_U:D\e1XmljYs.j2]@oD/YP09C.[
%+`fe1e#L=NL,uN!kVGXa&i+;jYAPc\qM7I:7QVdB-M1c"68)Cg1hF$-12T?22CS3<KgJ^-4!E'"oO<G>039PYA[E++D*fm6+N/:(
%LP%A9$(4g;\j(mT4]#gLBI%-BK^SgRHM'Os.ANGqBbS)T6\s7p%L6RP'/H[VFFOY2HD&V!d7D?c$/PP/o]guo;arhldjB22VpMIL
%$;DE*KM7l^h4I$;*[ijVZkG336?dnd]m??uPgN7IZjGRe.J2nV6;p?8+k%c;qkqc@#Pq,^XFLSGc.sI&X<)=?.$L3`BbdB>;s;a6
%Kr0Yq6DdK@.Sc\\4GBYkG!`(@/AU:,4W^eB/&7(o!^-LNB7K<Nl=Pp,>(A%ieV2A7d8%ci$/P%-6P5!tPfX8gYhH<_$QXD;EB#A0
%OcX8jU5M9mh?'B"URdK\';CCMLu&3,.ANGqBbg26D'AB54rb9a8BA.EEMp7,GBFu;b%N/5>(sUf6\r?8KVjPp6DdJ54#M]$X$^RC
%BI@?EKXarJLq>^$VMo[bVG2k.22&K?6YOVU-Y1qa\5PbN]/kVBN-7Ob9o(kgKXe'MBZb!9AD/A.YP?.`Fl.(@gIYN>B;+oE&4YQ,
%;^Gt3KY!@4U%\sD1hF$-12TA(o^Lh:!1t^('bFf[H-Hkj2[s`5+`fe1e#L<CT/uEYctA5L,\5V^F#%t\[jIWoag9?dKeh?gR5UbJ
%(b##'"bih4G!`'#Lg)`i\?/,3b%N/5g4\>3T[::p'Ugf2$(4g;De'XSVWYi_&WMH;X,o7q#]\=GckOkuaKu7n,D-Od4U=b"m=\0&
%&2u?MERTQePgN7IZjC^sK+Kt)#Yc3(KM7jHpD!sR%t`/md8%ci$+4*8cg+=%9UVu4#i!"oqpkVt`+.QUI8KQKV6A:ET3K"hrJEXe
%\#&*5%B0%eOmIT(X%bMal?!9jd=B<Wpe6Uk[u[94%B0%e*R072X&-9d,1I(##XK&^KM8FC[uV`_%B'Ou&WMH;X&-9d,1I(##XK&^
%KM8FC[uV`_%B'Ou&WMH;X&+`',1Q1l#XK&^KM7<N[grgo"6/:8Nb1VT<N+YB&aBR"KV4,j6Ddb]gIDk@##p8KLdj_.<N+YB&aBR"
%KV4,j6Ddb]PuJ?1/QROtLdj_.<Ocoh`MXYOnUVn;!>3n.gUE7>qbuP!C:C$.lYUA8#1i<j[2Vr>81;Zf,1Jr\#Yc3(KM8EXdfG,h
%:iJBBU61OO'7)^4ck?b?VMo[bVH&GQ'1,s]3#iX[8BA.EI<AHOl^L4>7QVdB-M5h[Ts&AA9c<>O9UjC1-\]:K.5YVC'/FEk"g4T_
%\@:>`m5eLZ?AJ,rc!L/<,N?J28>t,`Kt-+b1hF$-12T?88,D"'kqcnV![;G=2b3(:4`RhPF$2_9W^C^#cHVP:;a_iRdjB0TUsRAM
%6;p?8+k%c[NMFihO?ul84!E)H$0n-pY4J-9T?m3e:SL&]S\J"qHFBG`q?9;S]`]e&`<N"bURdK\'B0(F&/Q:=VMo[bVG68)#X2L0
%n<l%7!>.4//g9P"[J=K'k'DEP<QF\K3h6*:R3EOURC:`1'5@FGjR`%\-g7;t"PmDEq-Vjj55pF#Tq7nkqGa7%'[]ImZjM4*;<Ur@
%6;U&p+k%pjWC3@S7J]93m!oABc)21r4r82q+EB2#e#N$&3r_'c^UM\R"7+XGho8TE>haOdW<;G-!h7LCfF426nX3FI5>g'\9#,&[
%>`[4<g@Tq_k48U/6cNkcKN7,0dk77%51Y[d*h@"fi<(.1_S+jr5-UV$a(&^um8V0V!VHSH%Hi=[L<T>c9WJUEY\c?9CboV)a(JRm
%re)l@\R:gK@l6BcWkt5hD@cX1eNUB0lc8_Qa4k]M^J+J3MM1i:;2EO(6;p?8+k%dV>7Vl@-4!<`m=\0&:bVc*2_0o8RjgdU<]]C$
%l_D.=^S4IODeTgKbpu+W6mEl(,5fd%s4ueWji?9V\)75Rq;Yi[b9)6*?V^;us8B]]s1<dR^ZI9NqB+o#reL#.o/A5/j8.g,oc0+G
%D>_G_h6qb2a)ejVDYNZCfC@5Z2?2^Hgg@P\+1E>Ao8!'piU-13EP'PHS%j?"dHncjbd>.Ahc.>'k'V9](APOY?fRD6Ib_A/gFr"[
%/GQjt?]VJ_*UrWBIpJX1T%ELk`pN37m4essjgGURk.JaE/)D>VYLdW=d_F&!T=KA50&m@"iVrg_e*$Bbrql[7E;pi1lg\JJj14&:
%r`D=%QU8\Hg[-#i(n^9iq>PR.%+e_Qd@Pj8ZG=Xp0%'.*Zct.HJ%mZ6q#pr2EM#J1l[=+s?and;_U&*mMIS(kruL_$*<1#*cL6C8
%ShG9(o/he(G^nN*@J?tq.3/NI^:&+@o/:a3f6'<$JBoh-'6Guld;L,lhjrr]^\Z:FP@sl/cu&brcuI:]lhUO+#/JF632(d`a8\;_
%d8=MuD&Z!)f.c@"cT?94q*s8]HiAE`YhSR25+^b)R`jBD@".54IXR8]E5&o/:>Cm"7\&qgkDaiF\+sSK09\D6S/g;DNhc6ba/=Dl
%[f+8@fD"%qqQE-_mJH^>p#L9[pjBbngOP?gbP3c_pMoWX`\Y;f$haEE\,#%HO+.N7pAUW8qeH;(cYf@>@"+U&(3dFZ,d6b1me_;B
%D`BA>l[JgBf?=*Un)oQ"*-9O'l7]V\>i^:a`]JF7kG8[;;]elk2EpKrYOK$lnR'SN@2gTUr2ZI$FT5=u33+.]Kq7:JbR\:/)"X5A
%-b2C\F>M7jkI?u,V_sLLcSp6VT5QUl][!a$?<e<%+.XE^%_0cEq>,6EN,.W;ro:MQ;dn1Lf/=ubSdNg2lZ";BjHuRs8a`eXL&^27
%S<M>#kOj+\qlh5mDQif@*@'_h8snuC:?;e"qdh!t]Y>X\jNJP*q!EOJ@IrUIcPcDGJ*(E+ao/recKfY']he[Ec<j`G/9Y@]j-FZ=
%k#V*88TK*+NS8%')ffQ=#8c@qLtabjn*drWgKa>6hH^Bu+6@MABo23nE(taF3BY1!\=gl:WkgF-5NeHIcZa?"=lW\q5*#0!bl+bC
%*),K6E6RKa.u0*#H?n=AErKd4q:r.E7WV=:cZ.\<p3smA^S@?<dd(t`db"T0I9ucjHp5T%$1/S(D7eDFD`n'OGfi!^[(k@,T<lA$
%d`8K\\^0$K5!P=mrF_JCEH;fi1UB3i5<q@aW.!MDr'lL$JBR>f`k<PQg#r:)fDZWno$c%V%/9Kt%/ikt76>A+c/fd@m'qn4gVN51
%kO/Jsalde(r(/lnfkn>.T!sWp`e?PT%;NV9@ofP52P-2mER"mBlaX]hgZ"S15NF\>_rmN[HB!LMpVaDa56EioV<IK?n+iCcp<2jh
%\F%TtFmS;+O$.Gtfk4_1;r)d9g;_WNK%mCNY-e/5^X'h,k<A%k&'"^rl?!ukDB%3ip&3<WYN,TUgTUMQ0KEM(\E`PW]A\.`cL6@V
%;sAGKp@F8,p/T,p?\8+@o57p]b&Di[bn<4)qtiI,5t1me*c'Q#EC/&#+6!(Wlfg19gR)++Fn.NK'A`J&Ch#@E(I3DdDTDWEr!T#2
%n@1QEb-m?P3I;stS7=4E[\CUu-/Rf&>SG.0oWmBQKRTe2q0/tMqd@bGAcM@ch"T,eIpSW5oC7#'qrnt]In='t-KA.sfZubj1tpXK
%]XQ/N43l#@Y4JMH0<aR/SeNNaD"FJVGc$ItF"Kc"R=EG[Ir5b?E]_C1>i(2)3e-(2L5kG1^E.S`h4Nphr8%*FYWq;"nT^[sB=mq;
%J]IZ>2(#jtpTkNlKuW-UQfhp1SR?rmoC=:Cc=HAMI:PM'Qg&tWp:)t<DPG2<e\cCN?N]3[GqV.\cZR3el1OsQ2<D^3?fR-UnA67<
%q/P;!\?O!ojL)[n`8u<8p[S3L0B'/Rrd;WDH$7\WcAX6!rZR$JI9s)J[Ej3qIV`Apf/rrF+0Tn@Hq!X%1OK%CHiMd%lg'6o1WGHU
%oR=!irjBGS@o2Z^CQ:+qT#0)a<genBo(@=DfnMW<?eaa"O)PMW>TWVDTB?nBpT2AoiI/0qIo^E9?2X_M?K:83G8r?oM0GZNhs\L2
%ZgP$CA9Y`Un$@)lRZHjl=!*L^TB%b'UH'QiJ"@]LKuo9,Api<nqnE"1Nm[UeAS^f,$?n/YhG8Wnec0dA=#nR;E>$$*R*NomhW;fE
%1WfG/TfDSfPPX)Z#/"3e5G"Q`1bYJ@3run*InK#_n.#2VF:C^LY1@nj+(NuPT0"ZH:-65Di(n:d39K:@Y+ruMS@_j@1(),_jlTo`
%)>BNq'4d\CA%acQSfNUB*q/"CSL&'`ID3DpIQWXsb)E=d1N8t-eGZI;YKQerP`=NZmdH4#?,pFOr*nZ6hIBQ`k(_8A^XA7HCHh]:
%Ze9<M\:MBN]*;ceI\5M[C%?RooCE#dE8E4No6XR3:?Yk#`lmIdPY6&2VT8"[.sFZRj)pFEppu4_N#CdQ$ko,"0:u+NpS."oHgN35
%k!Yu*kHE<HLAT>F_lo-Aqo$4n]@EN;E%^_,MerB6l$P!gfDT!Pk0ps1o1'Z,cM)=CUAK[T0(5tQT./Ofr8[)&m?o'&A:Kl96+Dis
%YIT(oc=Z(4-/`EMH'63\MEdGnPFTC<aP4cj](>mUL;84J_K/#]Fl\5Qr#95_cEhXGL=bF*[(!7/QCoBBj&UVPU[kr[T's9'%NF$V
%olt_$3PV>3FS*/U1rSs*Nnp=gVjE7(S6tLfZG!/#XtStE]q9L%*B%9PSG'A)SE0Zo4ZQf>)iTh>G0))A^+Kr"01!7b1rNAR:G9St
%^-&iHZQBR<EFOBG'3&puY1L_lUF+=_-Rs<.KH8g[Dp1.LOnlZ0lSt@G%N?5^]BUn=jCA,T]smln@kQZAF5iX,e)U#eP[h:NT#U0(
%\TrdJgg&,F4D6nN))V@+iV-FKgLm"%^?6$NiI<'4M7c"/i>M4Brg)6om9*iBq/bu.kR0_<q7_*>*I#?kO+_cS*$slqHe(c3hLa$o
%:.NRje[ZQl8_2rYT:H'#>SUXqWQsnR3]=`6kBVR-jk+reO88eNY[d(XSm.o[e\0R/kLS#Or<\H)G<)hp/+%Lehe>,tddse<F'c"*
%r-#W`>MS91rNYghn,_].\BNBKpn6;4YFc^&E^.<pHkG_G!KP/V="hTFWoq'4g_MQ8n$@K0Y>*sHK!4?cC`P@)p18aB@6E_VXj1#B
%hNqP-e%bbY.G&WKI_4ug5OZ@.IJ%pdiHiDbqGue*=-)7aC%OId7,e'ul3C@t^Wh?$*`4;:aj,lto6J(lqh"Rcj_/Vg;4a-Kk/Y"V
%5NW=PfQ^SZ<T`>i2HJt,3LsBK54!NSp\;Vj+YqYNcf6fXE*eNjq+])n"PMpk1`(b=nbebMope.OqYe''_;jMkomu-U5>09!HJ\73
%*R%GmT@J/@QH"(?5*+!mK::+q2WsmS=+\J+qR=Xn6Prn^rV$4Gk])*hQM((GO8!]pe"::ECYXWQpEJl\=8Oe&XL'lj.H=!YGP+fc
%W%ijaodohrHl=O`aIHEUk6^k\'LDhgn&bCgguf.,110jIA`b(d]q.<RT;JC8qj@E)ofPe-^QdU3Q[n&YfX!K\f61K?kB?]=QB8@(
%3EK?-kJ5K\?h;jWi;@,ga8*i,IY<!0fBqq%mg]6g0u*`+C<ZDKo6iO0?dIMp*+s.8gO6`nJ!F?K0>%8A^XrG^2o#CK?i95>^\ud!
%rql`ho+1lqO+7/P^Du/bro5+"p5f7<c[Y_^J+puJs8I4lqbM_:hgbRoLVNldJ,&1kr:;$1EBNmRDu]aUJ,8>Xq"#SWr6t]@L]90P
%*2EUbnJ?]R+9(*bJ+rsC/UqWu~>
%AI9_PrivateDataEnd
